#!/bin/bash

echo "üîß FIXING SERVER CRASH AND PHANTOM USER ISSUE"
echo "============================================="
echo ""

# Check if running in correct directory
if [ ! -f "config/db.js" ]; then
    echo "‚ùå Please run this script from the server directory:"
    echo "   cd server"
    echo "   ./debug/fix-server-crash.sh"
    exit 1
fi

echo "üéØ ROOT CAUSE IDENTIFIED:"
echo "========================="
echo "‚ùå Node.js server is down (502 errors)"
echo "‚ùå Canvas module version mismatch"
echo "‚ùå No active sessions in database"
echo "‚úÖ This explains the phantom user issue!"
echo ""

echo "üîß STEP 1: STOP CURRENT SERVER"
echo "=============================="
pm2 stop orthodox-backend 2>/dev/null
pm2 delete orthodox-backend 2>/dev/null
echo "‚úÖ Stopped and deleted PM2 process"

echo ""
echo "üîß STEP 2: FIX NODE MODULE VERSION MISMATCH"
echo "==========================================="

# Check current Node.js version
echo "üìã Current Node.js version:"
node --version

# Check if canvas module is causing issues
if [ -d "node_modules/canvas" ]; then
    echo "üîç Canvas module found - rebuilding..."
    
    # Remove canvas module
    echo "üóëÔ∏è Removing canvas module..."
    rm -rf node_modules/canvas
    
    # Reinstall canvas module
    echo "üì¶ Reinstalling canvas module..."
    npm install canvas --legacy-peer-deps
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Canvas module reinstalled successfully"
    else
        echo "‚ùå Canvas module reinstall failed - trying alternative approach"
        
        # Try rebuilding all modules
        echo "üîß Rebuilding all node modules..."
        npm rebuild --legacy-peer-deps
    fi
else
    echo "‚úÖ Canvas module not found - skipping"
fi

echo ""
echo "üîß STEP 3: CLEAR ALL SESSIONS"
echo "=============================="
mysql -u orthodoxapps -p"Summerof1982@!" orthodoxmetrics_db -e "DELETE FROM sessions;" 2>/dev/null
echo "‚úÖ Cleared all sessions from database"

echo ""
echo "üîß STEP 4: START SERVER WITH CLEAN STATE"
echo "========================================"

# Start server with production environment
echo "üöÄ Starting server with NODE_ENV=production..."
NODE_ENV=production pm2 start index.js --name orthodox-backend

# Wait for server to start
echo "‚è≥ Waiting for server to start..."
sleep 5

# Check if server started successfully
if pm2 list | grep -q "orthodox-backend.*online"; then
    echo "‚úÖ Server started successfully"
else
    echo "‚ùå Server failed to start - checking logs..."
    pm2 logs orthodox-backend --lines 10 --nostream
    exit 1
fi

echo ""
echo "üîß STEP 5: TEST SERVER RESPONSE"
echo "==============================="

# Test server health
echo "üß™ Testing server health..."
sleep 3

# Test direct server access (bypassing nginx)
echo "üì° Testing direct server access..."
DIRECT_RESPONSE=$(curl -s -w "%{http_code}" http://127.0.0.1:3001/api/health)
DIRECT_STATUS=$(echo "$DIRECT_RESPONSE" | tail -1)
DIRECT_BODY=$(echo "$DIRECT_RESPONSE" | head -1)

echo "   Direct access status: $DIRECT_STATUS"
echo "   Direct access response: $DIRECT_BODY"

# Test through nginx
echo "üì° Testing through nginx..."
NGINX_RESPONSE=$(curl -s -w "%{http_code}" https://orthodoxmetrics.com/api/health)
NGINX_STATUS=$(echo "$NGINX_RESPONSE" | tail -1)
NGINX_BODY=$(echo "$NGINX_RESPONSE" | head -1)

echo "   Nginx access status: $NGINX_STATUS"
echo "   Nginx access response: $NGINX_BODY"

echo ""
echo "üîß STEP 6: VERIFY SESSION CREATION"
echo "=================================="

# Check if sessions table is being used
echo "üìä Checking session store..."
sleep 2

SESSION_COUNT=$(mysql -u orthodoxapps -p"Summerof1982@!" orthodoxmetrics_db -e "SELECT COUNT(*) as count FROM sessions;" 2>/dev/null | tail -1)
echo "   Active sessions: $SESSION_COUNT"

echo ""
echo "üéØ TESTING INSTRUCTIONS:"
echo "========================"
echo "1. Clear your browser cookies completely"
echo "2. Clear browser localStorage and sessionStorage"
echo "3. Visit https://orthodoxmetrics.com"
echo "4. Try logging in with your credentials"
echo "5. Check if the phantom user issue is resolved"
echo ""
echo "üîç If the issue persists, check:"
echo "   - Browser dev tools Network tab for cookie headers"
echo "   - Browser dev tools Application tab for orthodoxmetrics.sid cookie"
echo "   - Server logs: pm2 logs orthodox-backend"
echo ""
echo "üèÅ SERVER CRASH FIX COMPLETE!" 