=== Component Analysis: ImportRecordsExample ===
File: front-end/src/examples/ImportRecordsExample.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import ImportRecordsButton from '../components/ImportRecordsButton';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 151
Component exports: 1

=== Component Analysis: RecordWorkflowExample ===
File: front-end/src/examples/RecordWorkflowExample.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import RecordGenerator from '../components/RecordGenerator';
import ImportRecordsButton from '../components/ImportRecordsButton';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [currentStep, setCurrentStep] = useState(1);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
              {/* Navigation Links */}

--- METRICS ---
Lines of code: 285
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/pages/apps/records/index.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Box } from '@mui/material';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from '../../../components/container/PageContainer';
import RecordList from '../../../components/apps/records/recordGrid/RecordList';
import RecordSidebar from '../../../components/apps/records/recordGrid/RecordSidebar';
import AppCard from '../../../components/shared/AppCard';
import { RecordProvider } from '../../../context/RecordsContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [isMobileSidebarOpen, setMobileSidebarOpen] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/pages/apps/records-ui/index.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from '../../../components/container/PageContainer';
import ChurchRecordTableList from '../../../components/apps/records-ui/ChurchRecordTableList/ChurchRecordTableList';
import BlankCard from '../../../components/shared/BlankCard';
import { ChurchRecordsProvider } from '../../../context/ChurchRecordsContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 30
Component exports: 1

=== Component Analysis: RecordGeneratorPage ===
File: front-end/src/pages/RecordGeneratorPage.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import RecordGenerator from '../components/RecordGenerator';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 100
Component exports: 2

=== Component Analysis: AddChurchPage ===
File: front-end/src/pages/AddChurchPage.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useSnackbar } from 'notistack';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState<ChurchFormData>({
  const [errors, setErrors] = useState<Partial<ChurchFormData>>({});

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.post('/api/churches', {

--- ROUTING ---
  Link,
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();
        <Link color="inherit" href="/churches">
        </Link>

--- METRICS ---
Lines of code: 502
Component exports: 1

=== Component Analysis: predictive-dashboard ===
File: front-end/src/pages/omai/predictive-dashboard.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [sessions, setSessions] = useState<AnalyticsSession[]>([]);
  const [reports, setReports] = useState<AnalyticsReport[]>([]);
  const [metrics, setMetrics] = useState<AnalyticsMetrics | null>(null);
  const [alerts, setAlerts] = useState<AnomalyAlert[]>([]);
  const [sessionDialog, setSessionDialog] = useState(false);
  const [reportDialog, setReportDialog] = useState(false);
  const [alertDialog, setAlertDialog] = useState(false);
  const [selectedSession, setSelectedSession] = useState<AnalyticsSession | null>(null);
  const [selectedReport, setSelectedReport] = useState<AnalyticsReport | null>(null);
  const [newSession, setNewSession] = useState({
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 787
Component exports: 1

=== Component Analysis: nlp-dashboard ===
File: front-end/src/pages/omai/nlp-dashboard.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [tabValue, setTabValue] = useState(0);
  const [sessions, setSessions] = useState<NLPSession[]>([]);
  const [conversations, setConversations] = useState<Conversation[]>([]);
  const [documents, setDocuments] = useState<Document[]>([]);
  const [metrics, setMetrics] = useState<NLPMetrics | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [sessionDialogOpen, setSessionDialogOpen] = useState(false);
  const [conversationDialogOpen, setConversationDialogOpen] = useState(false);
  const [documentDialogOpen, setDocumentDialogOpen] = useState(false);
  const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);
  const [newSessionType, setNewSessionType] = useState('conversation');
  const [newConversationTitle, setNewConversationTitle] = useState('');
  const [newConversationParticipants, setNewConversationParticipants] = useState('');
  const [newDocumentTitle, setNewDocumentTitle] = useState('');
  const [newDocumentContent, setNewDocumentContent] = useState('');
  const [newDocumentType, setNewDocumentType] = useState('text');
  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);
  const [messageInput, setMessageInput] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
        fetch('/api/nlp/sessions'),
        fetch('/api/nlp/conversations'),
        fetch('/api/nlp/documents'),
        fetch('/api/nlp/metrics')
      const response = await fetch('/api/nlp/sessions', {
      const response = await fetch('/api/nlp/conversations', {
      const response = await fetch('/api/nlp/documents', {
      const response = await fetch(`/api/nlp/conversations/${conversationId}/messages`, {
      const response = await fetch(`/api/nlp/sessions/${sessionId}/end`, {
      const response = await fetch(`/api/nlp/documents/${documentId}/analyze`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 711
Component exports: 1

=== Component Analysis: control-dashboard ===
File: front-end/src/pages/omai/control-dashboard.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [tenantStatus, setTenantStatus] = useState<TenantStatusData | null>(null);
  const [taskData, setTaskData] = useState<TaskData | null>(null);
  const [gapData, setGapData] = useState<GapReportData | null>(null);
  const [agentMetrics, setAgentMetrics] = useState<AgentMetrics | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
    undefinedRoutes: GapItem[];
          undefinedRoutes: [],
                  <TableCell>Routes</TableCell>

--- METRICS ---
Lines of code: 840
Component exports: 1

=== Component Analysis: teaching-dashboard ===
File: front-end/src/pages/omai/teaching-dashboard.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [sessions, setSessions] = useState<TeachingSession[]>([]);
  const [analytics, setAnalytics] = useState<LearningAnalytics | null>(null);
  const [selectedSession, setSelectedSession] = useState<TeachingSession | null>(null);
  const [newSessionDialog, setNewSessionDialog] = useState(false);
  const [newConceptDialog, setNewConceptDialog] = useState(false);
  const [feedbackDialog, setFeedbackDialog] = useState(false);
  const [testDialog, setTestDialog] = useState(false);
  const [newSession, setNewSession] = useState({ title: '', objective: '' });
  const [newConcept, setNewConcept] = useState({
  const [feedback, setFeedback] = useState({
  useEffect(() => {
            { id: '1', concept: 'useState', confidence: 85, validated: true },
            { id: '2', concept: 'useEffect', confidence: 70, validated: false }
          { concept: 'useState', confidence: 85, usageCount: 3, lastUsed: '2025-01-27T11:30:00Z' }

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 687
Component exports: 1

=== Component Analysis: autonomy-dashboard ===
File: front-end/src/pages/omai/autonomy-dashboard.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [sessions, setSessions] = useState<AutonomySession[]>([]);
  const [currentStatus, setCurrentStatus] = useState<AutonomyStatus | null>(null);
  const [parameters, setParameters] = useState<AutonomyParameters>({
  const [settingsDialog, setSettingsDialog] = useState(false);
  const [sessionDialog, setSessionDialog] = useState(false);
  const [reportDialog, setReportDialog] = useState(false);
  const [selectedSession, setSelectedSession] = useState<AutonomySession | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 671
Component exports: 1

=== Component Analysis: CodePreviewModal ===
File: front-end/src/pages/omb/CodePreviewModal.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';
import { BoundComponent } from './types';
import React from 'react';
import { Box, Typography, Paper } from '@mui/material';

--- PROPS/INTERFACES ---
interface CodePreviewModalProps {
  open: boolean;
  onClose: () => void;
  component: BoundComponent | null;
  onGenerate: (component: BoundComponent, commitToGit: boolean) => void;
  isGenerating: boolean;
}

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [tabValue, setTabValue] = useState(0);
  const [previewData, setPreviewData] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [commitToGit, setCommitToGit] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/omb/preview-code', {

--- ROUTING ---
const router = express.Router();
**Route**: \`${component?.route}\`  
                <Tab label="API Route (.ts)" />

--- METRICS ---
Lines of code: 244
Component exports: 3

=== Component Analysis: editor ===
File: front-end/src/pages/omb/editor.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Alert } from '@mui/material';
import OMBEditor from './OMBEditor';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 23
Component exports: 1

=== Component Analysis: ComponentPreview ===
File: front-end/src/pages/omb/ComponentPreview.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { sampleIcons } from './sample-icons';
import { BoundComponent, ComponentPaletteItem } from './types';

--- PROPS/INTERFACES ---
interface ComponentPreviewProps {
  selectedComponent: ComponentPaletteItem | null;
  boundComponents: BoundComponent[];
  currentFormData: any;
}

const ComponentPreview: React.FC<ComponentPreviewProps> = ({
  selectedComponent,
  boundComponents,
  currentFormData
}) => {

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
                <Typography variant="subtitle2">API Route</Typography>

--- METRICS ---
Lines of code: 180
Component exports: 1

=== Component Analysis: PluginResultsPanel ===
File: front-end/src/pages/omb/PluginResultsPanel.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import ErrorIcon from '@mui/icons-material/Error';
import WarningIcon from '@mui/icons-material/Warning';
import InfoIcon from '@mui/icons-material/Info';

--- PROPS/INTERFACES ---
interface PluginResultsPanelProps {
  pluginResults?: PluginResult[];
  generatedDocPath?: string | null;
}

const PluginResultsPanel: React.FC<PluginResultsPanelProps> = ({
  pluginResults,
  generatedDocPath
}) => {
  if (!pluginResults || pluginResults.length === 0) {
    return (

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
  Link
      {/* Generated Documentation Link */}
            <Link href={generatedDocPath} target="_blank" sx={{ ml: 1 }}>
            </Link>

--- METRICS ---
Lines of code: 134
Component exports: 1

=== Component Analysis: MetadataForm ===
File: front-end/src/pages/omb/MetadataForm.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { MetadataFormData } from './types';

--- PROPS/INTERFACES ---
interface MetadataFormProps {
  formData: MetadataFormData;
  onFormChange: (data: MetadataFormData) => void;
  onSave: () => void;
  isSaving: boolean;
  onGenerateCode?: () => void;
  canGenerateCode?: boolean;
}

const MetadataForm: React.FC<MetadataFormProps> = ({
  formData,

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
  const sampleRoutes = [
            options={sampleRoutes}
                label="API Route"

--- METRICS ---
Lines of code: 200
Component exports: 1

=== Component Analysis: ComponentPalette ===
File: front-end/src/pages/omb/ComponentPalette.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { sampleIcons } from './sample-icons';
import { ComponentPaletteItem } from './types';
import discoveredComponents from '../../config/omb-discovered-components.json';

--- PROPS/INTERFACES ---
interface ComponentPaletteProps {
  onComponentSelect: (component: ComponentPaletteItem) => void;
  selectedComponent: ComponentPaletteItem | null;
}

const ComponentPalette: React.FC<ComponentPaletteProps> = ({
  onComponentSelect,
  selectedComponent
}) => {
  const [activeTab, setActiveTab] = React.useState(0);
  const [loading, setLoading] = React.useState(false);

--- STATE MANAGEMENT ---
  const [activeTab, setActiveTab] = React.useState(0);
  const [loading, setLoading] = React.useState(false);
  const [error, setError] = React.useState<string>('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 251
Component exports: 1

=== Component Analysis: OMBEditor ===
File: front-end/src/pages/omb/OMBEditor.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import ComponentPalette from './ComponentPalette';
import ComponentPreview from './ComponentPreview';
import MetadataForm from './MetadataForm';
import PluginResultsPanel from './PluginResultsPanel';
import ComponentAgentPanel from './ComponentAgentPanel';
import CodePreviewModal from './CodePreviewModal';
import { 

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [state, setState] = useState<OMBEditorState>({
  const [codePreviewOpen, setCodePreviewOpen] = useState(false);
  const [isGeneratingCode, setIsGeneratingCode] = useState(false);
  const [activeTab, setActiveTab] = useState(0);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/omb/components');
      const response = await fetch('/api/omb/components', {
      const response = await fetch('/api/omai/run-plugins', {
      const response = await fetch('/api/omai/plugin-results', {
      const response = await fetch('/api/omai/generate-doc', {
      const response = await fetch(endpoint, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 362
Component exports: 1

=== Component Analysis: ComponentAgentPanel ===
File: front-end/src/pages/omb/ComponentAgentPanel.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import ErrorIcon from '@mui/icons-material/Error';
import WarningIcon from '@mui/icons-material/Warning';
import InfoIcon from '@mui/icons-material/Info';
import AutoFixHighIcon from '@mui/icons-material/AutoFixHigh';
import RefreshIcon from '@mui/icons-material/Refresh';
import { BoundComponent } from './types';

--- PROPS/INTERFACES ---
interface ComponentAgentPanelProps {
  component: BoundComponent | null;
  onAutofix?: (agentName: string, action: string) => void;
}

const ComponentAgentPanel: React.FC<ComponentAgentPanelProps> = ({
  component,
  onAutofix
}) => {
  const [agentResults, setAgentResults] = useState<AgentTaskResult[]>([]);
  const [isLoading, setIsLoading] = useState(false);

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [agentResults, setAgentResults] = useState<AgentTaskResult[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [isRunningAgents, setIsRunningAgents] = useState(false);
  const [metrics, setMetrics] = useState<any>(null);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/omai/agent-results/${component.id}`);
      const response = await fetch('/api/omai/agent-metrics');
      const response = await fetch('/api/omai/run-agents', {
      const response = await fetch('/api/omai/autofix', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 314
Component exports: 1

=== Component Analysis: ai-lab ===
File: front-end/src/pages/sandbox/ai-lab.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [input, setInput] = useState('');
  const [output, setOutput] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [systemStats, setSystemStats] = useState<SystemStats | null>(null);
  const [systemHealth, setSystemHealth] = useState<SystemHealth | null>(null);
  const [showAdvanced, setShowAdvanced] = useState(false);
  const [responseMetadata, setResponseMetadata] = useState<any>(null);
  const [queryMode, setQueryMode] = useState<'ask' | 'search' | 'explain'>('ask');
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [responseSources, setResponseSources] = useState<string[]>([]);
  const [responseMemoryContext, setResponseMemoryContext] = useState<string[]>([]);
  const [omaiMode, setOmaiMode] = useState<'answer' | 'consume'>('answer');
  const [showSuccessSnackbar, setShowSuccessSnackbar] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');
  const [memoriesDialog, setMemoriesDialog] = useState(false);
  const [memories, setMemories] = useState<any[]>([]);
  const [memoriesPage, setMemoriesPage] = useState(1);
  const [memoriesTotal, setMemoriesTotal] = useState(0);
  const [memoriesLoading, setMemoriesLoading] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/omai/stats');
      const response = await fetch('/api/omai/health');
        const response = await fetch('/api/omai/consume', {
        const response = await fetch('/api/omai/ask', {
      const response = await fetch(`/api/omai/memories?limit=10&offset=${(page - 1) * 10}`);
      const response = await fetch(`/api/omai/memories/${id}`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 876
Component exports: 1

=== Component Analysis: project-generator ===
File: front-end/src/pages/sandbox/project-generator.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [prompt, setPrompt] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedModule, setGeneratedModule] = useState<GeneratedModule | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [previewMode, setPreviewMode] = useState(false);

--- API INTEGRATION ---
      const response = await fetch('/api/omai/generate-module', {
      const response = await fetch('/api/omai/generate-module', {

--- ROUTING ---
                    <Chip label={`Route: ${generatedModule.component.route}`} size="small" variant="outlined" />
                  API Routes

--- METRICS ---
Lines of code: 383
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/pages/kanban/index.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { DragDropContext } from '@hello-pangea/dnd';
import KanbanBoard from '../../components/KanbanBoard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [boards, setBoards] = useState<Board[]>([]);
  const [selectedBoard, setSelectedBoard] = useState<BoardDetails | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [createBoardOpen, setCreateBoardOpen] = useState(false);
  const [createTaskOpen, setCreateTaskOpen] = useState(false);
  const [selectedColumn, setSelectedColumn] = useState<number | null>(null);
  const [newBoardForm, setNewBoardForm] = useState({
  const [newTaskForm, setNewTaskForm] = useState({
  const [filters, setFilters] = useState({
  useEffect(() => {

--- API INTEGRATION ---
  const fetchBoards = async () => {
      const response = await fetch('/api/kanban/boards', {
        throw new Error('Failed to fetch boards');
        await fetchBoardDetails(data.boards[0].id);
      setError(err instanceof Error ? err.message : 'Failed to fetch boards');
  const fetchBoardDetails = async (boardId: number) => {
      const response = await fetch(`/api/kanban/boards/${boardId}`, {
        throw new Error('Failed to fetch board details');
      setError(err instanceof Error ? err.message : 'Failed to fetch board details');
      const response = await fetch('/api/kanban/boards', {
      await fetchBoards();
      const response = await fetch('/api/kanban/tasks', {
      await fetchBoardDetails(selectedBoard.id);
      const response = await fetch(`/api/kanban/boards/${selectedBoard.id}/export`, {
      const response = await fetch('/api/kanban/boards/export/all', {
      const response = await fetch(`/api/kanban/tasks/${taskId}/move`, {
        await fetchBoardDetails(selectedBoard.id);
    fetchBoards();
            <IconButton onClick={() => selectedBoard && fetchBoardDetails(selectedBoard.id)}>
                  onClick={() => fetchBoardDetails(board.id)}
            onRefresh={() => fetchBoardDetails(selectedBoard.id)}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 684
Component exports: 11

=== Component Analysis: AnalyticsDashboard ===
File: front-end/src/pages/AnalyticsDashboard.tsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useState } from 'react';
import {
import axios from 'axios';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect, useState } from 'react';
  const [feastData, setFeastData] = useState<any[]>([]);
  const [feastLoading, setFeastLoading] = useState(false);
  const [feastError, setFeastError] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
    axios.get('/api/analytics/by-feast-day', { withCredentials: true })

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 208
Component exports: 1

=== Component Analysis: EditChurchModal ===
File: front-end/src/pages/ChurchManagement/EditChurchModal.jsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { Dialog } from '@headlessui/react';
import axios from 'axios';
import { toast } from 'react-toastify';
import { Tabs, TabList, Tab, TabPanel } from 'react-tabs';
import 'react-tabs/style/react-tabs.css';
import BasicInfoSection from './FormSections/BasicInfoSection';
import RecordsDatabaseSection from './FormSections/RecordsDatabaseSection';
import UploadDirectoriesSection from './FormSections/UploadDirectoriesSection';
import CalendarSettingsSection from './FormSections/CalendarSettingsSection';
import AppearanceSection from './FormSections/AppearanceSection';
import UsersSection from './FormSections/UsersSection';
import FeatureTogglesSection from './FormSections/FeatureTogglesSection';
import SystemMetadataSection from './FormSections/SystemMetadataSection';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [formData, setFormData] = useState({
  const [loading, setLoading] = useState(false);
  const [databases, setDatabases] = useState([]);
  const [assignedUsers, setAssignedUsers] = useState([]);
  const [allUsers, setAllUsers] = useState([]);
  const [activeTab, setActiveTab] = useState(0);
  const [logoFile, setLogoFile] = useState(null);
  const [bannerFile, setBannerFile] = useState(null);
  const [faviconFile, setFaviconFile] = useState(null);
  const [feastOverridesFile, setFeastOverridesFile] = useState(null);
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      fetchAssignedUsers(church.id);
    fetchDatabases();
    fetchAllUsers();
  const fetchDatabases = async () => {
      const response = await axios.get('/api/databases', {
      console.error('Error fetching databases:', error);
  const fetchAllUsers = async () => {
      const response = await axios.get('/api/users', {
      console.error('Error fetching users:', error);
  const fetchAssignedUsers = async (churchId) => {
      const response = await axios.get(`/api/churches/${churchId}/users`, {
      console.error('Error fetching church users:', error);
        axios.post(`/api/churches/${churchId}/upload`, logoFormData, {
        axios.post(`/api/churches/${churchId}/upload`, bannerFormData, {
        axios.post(`/api/churches/${churchId}/upload`, faviconFormData, {
        axios.post(`/api/churches/${churchId}/upload`, feastOverridesFormData, {
        response = await axios.post('/api/churches', formData, {
        response = await axios.put(`/api/churches/${church.id}`, formData, {
      const response = await axios.post('/api/churches/verify-database',
      await axios.post(`/api/churches/${church.id}/users`,
      fetchAssignedUsers(church.id);
      await axios.delete(`/api/churches/${church.id}/users/${userId}`, {
      fetchAssignedUsers(church.id);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 568
Component exports: 1

=== Component Analysis: UploadDirectoriesSection ===
File: front-end/src/pages/ChurchManagement/FormSections/UploadDirectoriesSection.jsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 1

=== Component Analysis: FeatureTogglesSection ===
File: front-end/src/pages/ChurchManagement/FormSections/FeatureTogglesSection.jsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 77
Component exports: 1

=== Component Analysis: AppearanceSection ===
File: front-end/src/pages/ChurchManagement/FormSections/AppearanceSection.jsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 188
Component exports: 1

=== Component Analysis: SystemMetadataSection ===
File: front-end/src/pages/ChurchManagement/FormSections/SystemMetadataSection.jsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: RecordsDatabaseSection ===
File: front-end/src/pages/ChurchManagement/FormSections/RecordsDatabaseSection.jsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: CalendarSettingsSection ===
File: front-end/src/pages/ChurchManagement/FormSections/CalendarSettingsSection.jsx
Date: Wed Jul 30 12:59:48 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 109
Component exports: 1

=== Component Analysis: UsersSection ===
File: front-end/src/pages/ChurchManagement/FormSections/UsersSection.jsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [selectedUserId, setSelectedUserId] = useState('');
  const [selectedRole, setSelectedRole] = useState('viewer');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 152
Component exports: 1

=== Component Analysis: BasicInfoSection ===
File: front-end/src/pages/ChurchManagement/FormSections/BasicInfoSection.jsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 136
Component exports: 1

=== Component Analysis: ChurchManagement ===
File: front-end/src/pages/ChurchManagement/ChurchManagement.jsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { AgGridReact } from 'ag-grid-react';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';
import OrthodoxBanner from '../../components/OrthodoxBanner/OrthodoxBanner';
import EditChurchModal from './EditChurchModal';
import { useAuth } from '../../hooks/useAuth';
import { toast } from 'react-toastify';
import api from '../../api/orthodox-metrics.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [churches, setChurches] = useState([]);
  const [loading, setLoading] = useState(true);
  const [editModalOpen, setEditModalOpen] = useState(false);
  const [selectedChurch, setSelectedChurch] = useState(null);
  useEffect(() => {

--- API INTEGRATION ---
    fetchChurches();
  const fetchChurches = async () => {
      const response = await api.churches.getAll();
      console.error('Error fetching churches:', error);
      await api.churches.delete(id);
      fetchChurches();
      await api.churches.updateStatus(id, !currentStatus);
      fetchChurches();
      fetchChurches();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 173
Component exports: 1

=== Component Analysis: AssignTaskPage ===
File: front-end/src/pages/AssignTaskPage.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useSearchParams, useNavigate } from 'react-router-dom';
import {
import {
import { omaiAPI, Task, TokenValidationResponse } from '../api/omai.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [tokenData, setTokenData] = useState<TokenValidationResponse['data'] | null>(null);
  const [loading, setLoading] = useState(true);
  const [submitting, setSubmitting] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState(false);
  const [tasks, setTasks] = useState<FormTask[]>([
  useEffect(() => {

--- API INTEGRATION ---
        const response = await omaiAPI.validateToken(token);
      task.title.trim().length > 0 && omaiAPI.validateTask(task)
      const response = await omaiAPI.submitTasks(token, validTasks);
                    label={omaiAPI.getPriorityLabel(task.priority)} 
                      bgcolor: omaiAPI.getPriorityColor(task.priority),

--- ROUTING ---
import { useSearchParams, useNavigate } from 'react-router-dom';
  const navigate = useNavigate();
            Invalid Task Link

--- METRICS ---
Lines of code: 411
Component exports: 1

=== Component Analysis: OrthodoxHeadlines ===
File: front-end/src/pages/OrthodoxHeadlines.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useCallback } from 'react';
import { 
import { 
import { useAuth } from '../context/AuthContext';
import axios from 'axios';
import { format } from 'date-fns';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useCallback } from 'react';
  const [headlines, setHeadlines] = useState<Headline[]>([]);
  const [sources, setSources] = useState<Source[]>([]);
  const [languages, setLanguages] = useState<Language[]>([]);
  const [loading, setLoading] = useState(true);
  const [refreshing, setRefreshing] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [lastUpdated, setLastUpdated] = useState<string>('');
  const [selectedSource, setSelectedSource] = useState<string>('all');
  const [selectedLanguage, setSelectedLanguage] = useState<string>('en');
  const [limit] = useState(20);
  const [offset, setOffset] = useState(0);
  const [hasMore, setHasMore] = useState(false);
  const [autoRefreshInterval, setAutoRefreshInterval] = useState<NodeJS.Timeout | null>(null);
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
  const fetchHeadlines = useCallback(async (reset = false) => {
      const response = await axios.get<HeadlinesResponse>(`/api/headlines?${params}`);
      console.error('Error fetching headlines:', err);
  const fetchFilterOptions = async () => {
        axios.get('/api/headlines/sources'),
        axios.get('/api/headlines/languages')
      console.error('Error fetching filter options:', err);
    fetchHeadlines(true);
    fetchFilterOptions();
    fetchHeadlines(true);
      fetchHeadlines(false);

--- ROUTING ---
  IconExternalLink, 
                endIcon={<IconExternalLink size={14} />}

--- METRICS ---
Lines of code: 505
Component exports: 1

=== Component Analysis: TableThemeEditor ===
File: front-end/src/demos/TableThemeEditor.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef } from 'react';
import {
import { Save, Download, Upload, Refresh, Palette } from '@mui/icons-material';
import { useTableStyleStore } from '../store/useTableStyleStore';
import { ColorPaletteSelector } from '../components/ColorPaletteSelector';
import { TableControlPanel } from '../components/TableControlPanel';
import { ThemedTable } from '../components/ThemedTable';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useRef } from 'react';
  const [selectedElement, setSelectedElement] = useState<string>('header');
  const [livePreview, setLivePreview] = useState(true);
  const [liturgicalMode, setLiturgicalMode] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 320
Component exports: 4

=== Component Analysis: Router ===
File: front-end/src/routes/Router.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { lazy } from 'react';
import { createBrowserRouter, Navigate } from 'react-router-dom';
import Loadable from '../layouts/full/shared/loadable/Loadable';
import ProtectedRoute from '../components/auth/ProtectedRoute';
import ComingSoon from '../components/shared/ComingSoon';
import AdminErrorBoundary from '../components/ErrorBoundary/AdminErrorBoundary';
import SmartRedirect from '../components/routing/SmartRedirect';
import HeadlineSourcePicker from '../components/headlines/HeadlineSourcePicker';
import { DynamicAddonRoute } from '../components/registry/ComponentRegistry';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { createBrowserRouter, Navigate } from 'react-router-dom';
import ProtectedRoute from '../components/auth/ProtectedRoute';
const BigBookDynamicRoute = Loadable(lazy(() => import('../components/admin/BigBookDynamicRoute')));
import { DynamicAddonRoute } from '../components/registry/ComponentRegistry';
const Router = [
          <ProtectedRoute requiredPermission="view_dashboard">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="view_dashboard">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="admin_dashboard">
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="admin">
          </ProtectedRoute>
      // Social Experience Routes
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="view_invoices">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="manage_invoices">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="view_invoices">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="manage_invoices">
          </ProtectedRoute>
      // Church Management Routes (replacing User Profile)
          <ProtectedRoute requiredPermission="manage_churches">
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="manage_churches">
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
      // Client Management Routes
          <ProtectedRoute requiredPermission="manage_clients">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="manage_clients">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="manage_clients">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="manage_clients">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="manage_clients">
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin', 'church_admin', 'admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin', 'church_admin', 'admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin', 'admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin', 'dev_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
                 <ProtectedRoute requiredRole={['super_admin']}>
                 </ProtectedRoute>
                <ProtectedRoute requiredRole={['super_admin']}>
                </ProtectedRoute>
                <ProtectedRoute requiredRole={['super_admin']}>
                </ProtectedRoute>
                <ProtectedRoute requiredRole={['super_admin']}>
                </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'manager', 'user']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="view_calendar">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="access_ocr">
          </ProtectedRoute>
          <ProtectedRoute requiredPermission="access_admin">
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
              <DynamicAddonRoute route="/addons/parish-map" />
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin']}>
              <DynamicAddonRoute route={window.location.pathname} />
          </ProtectedRoute>
          <ProtectedRoute requiredRole={['admin', 'super_admin', 'editor']}>
              <BigBookDynamicRoute />
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
          <ProtectedRoute>
          </ProtectedRoute>
const router = createBrowserRouter(Router);

--- METRICS ---
Lines of code: 1357
Component exports: 1

=== Component Analysis: useGlobalErrorStore ===
File: front-end/src/hooks/useGlobalErrorStore.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import { useState, useEffect, useCallback } from 'react';
import { useLocation } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState, useEffect, useCallback } from 'react';
  const [errors, setErrors] = useState<GlobalError[]>([]);
  const [dismissedErrors, setDismissedErrors] = useState<Set<string>>(new Set());
  const [stats, setStats] = useState<ErrorStats>({ 
  const [filter, setFilter] = useState<ErrorFilter>({});
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
  if (lowerMessage.includes('network') || lowerMessage.includes('fetch')) {
    await fetch('/api/errors/log', {

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const location = useLocation();
  const getErrorsByRoute = useCallback((route: string) => {
    getErrorsByRoute,

--- METRICS ---
Lines of code: 396
Component exports: 2

=== Component Analysis: OrthodoxMetrics ===
File: front-end/src/views/dashboard/OrthodoxMetrics.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import PageContainer from 'src/components/container/PageContainer';
import { useAuth } from 'src/context/AuthContext';
import {
import AccessControlDashboard from '../admin/AccessControlDashboard';

--- PROPS/INTERFACES ---
interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function TabPanel(props: TabPanelProps) {
    const { children, value, index, ...other } = props;

    return (
        <div

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [tabValue, setTabValue] = useState(0); // Default to Access Control

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 232
Component exports: 1

=== Component Analysis: Modern ===
File: front-end/src/views/dashboard/Modern.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: EnhancedModernDashboard ===
File: front-end/src/views/dashboard/EnhancedModernDashboard.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Card, CardContent } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import OrthodoxBanner from 'src/components/shared/OrthodoxBanner';
import TopCards from 'src/components/dashboards/modern/TopCards';
import RevenueUpdates from 'src/components/dashboards/modern/RevenueUpdates';
import YearlyBreakup from 'src/components/dashboards/modern/YearlyBreakup';
import MonthlyEarnings from 'src/components/dashboards/modern/MonthlyEarnings';
import EmployeeSalary from 'src/components/dashboards/modern/EmployeeSalary';
import Customers from 'src/components/dashboards/modern/Customers';
import Projects from 'src/components/dashboards/modern/Projects';
import Social from 'src/components/dashboards/modern/Social';
import SellingProducts from 'src/components/dashboards/modern/SellingProducts';
import WeeklyStats from 'src/components/dashboards/modern/WeeklyStats';
import TopPerformers from 'src/components/dashboards/modern/TopPerformers';
import Welcome from 'src/layouts/full/shared/welcome/Welcome';
import WhatsNewEditor from 'src/components/dashboards/modern/WhatsNewEditor';
import MiniControlPanel from 'src/components/dashboards/modern/MiniControlPanel';
import SocialToolbar from 'src/components/dashboards/modern/SocialToolbar';
import TodaysSummary from 'src/components/dashboards/modern/TodaysSummary';
import { useAuth } from 'src/context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 89
Component exports: 1

=== Component Analysis: Ecommerce ===
File: front-end/src/views/dashboard/Ecommerce.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Grid } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import WeeklyStats from 'src/components/dashboards/modern/WeeklyStats';
import YearlySales from 'src/components/dashboards/ecommerce/YearlySales';
import PaymentGateways from 'src/components/dashboards/ecommerce/PaymentGateways';
import WelcomeCard from 'src/components/dashboards/ecommerce/WelcomeCard';
import Expence from 'src/components/dashboards/ecommerce/Expence';
import Growth from 'src/components/dashboards/ecommerce/Growth';
import RevenueUpdates from 'src/components/dashboards/ecommerce/RevenueUpdates';
import SalesOverview from 'src/components/dashboards/ecommerce/SalesOverview';
import SalesTwo from 'src/components/dashboards/ecommerce/SalesTwo';
import Sales from 'src/components/dashboards/ecommerce/Sales';
import MonthlyEarnings from 'src/components/dashboards/ecommerce/MonthlyEarnings';
import ProductPerformances from 'src/components/dashboards/ecommerce/ProductPerformances';
import RecentTransactions from 'src/components/dashboards/ecommerce/RecentTransactions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 149
Component exports: 1

=== Component Analysis: BigCalendar ===
File: front-end/src/views/apps/calendar/BigCalendar.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { Calendar, momentLocalizer } from 'react-big-calendar';
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import moment from 'moment';
import Events from './EventData';
import 'react-big-calendar/lib/css/react-big-calendar.css';
import dayjs from 'dayjs';
import './Calendar.css';
import PageContainer from 'src/components/container/PageContainer';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { IconCheck } from '@tabler/icons-react';
import BlankCard from 'src/components/shared/BlankCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import logger from 'src/utils/logger';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [calevents, setCalEvents] = React.useState<any>(Events);
  const [open, setOpen] = React.useState<boolean>(false);
  const [title, setTitle] = React.useState<string>("");
  const [slot, setSlot] = React.useState<EvType>();
  const [start, setStart] = React.useState<any | null>(dayjs());
  const [end, setEnd] = React.useState<any | null>(dayjs());
  const [color, setColor] = React.useState<string>("default");
  const [update, setUpdate] = React.useState<EvType | undefined | any>();

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 333
Component exports: 1

=== Component Analysis: LiturgicalCalendar ===
File: front-end/src/views/apps/calendar/LiturgicalCalendar.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useMemo } from 'react';
import {
import { Calendar, momentLocalizer } from 'react-big-calendar';
import moment from 'moment';
import dayjs, { Dayjs } from 'dayjs';
import 'react-big-calendar/lib/css/react-big-calendar.css';
import './Calendar.css';
import {
import { useLiturgicalCalendar } from '../../../hooks/useLiturgicalCalendar';
import { CalendarType, Language } from '../../../types/liturgical.types';
import * as XLSX from 'xlsx';
import { jsPDF } from 'jspdf';
import PageContainer from '../../../components/container/PageContainer';
import BlankCard from '../../../components/shared/BlankCard';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useMemo } from 'react';
  const [selectedDate, setSelectedDate] = useState<Dayjs>(dayjs());
  const [calendarType, setCalendarType] = useState<CalendarType>('gregorian');
  const [language, setLanguage] = useState<Language>('en');
  const [selectedEvent, setSelectedEvent] = useState<LiturgicalEvent | null>(null);
  const [calendarEvents, setCalendarEvents] = useState<LiturgicalEvent[]>([]);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 441
Component exports: 5

=== Component Analysis: TestLiturgicalCalendar ===
File: front-end/src/views/apps/calendar/TestLiturgicalCalendar.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Typography, Box } from '@mui/material';
import PageContainer from '../../../components/container/PageContainer';
import BlankCard from '../../../components/shared/BlankCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: Contacts ===
File: front-end/src/views/apps/contacts/Contacts.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Button, Box, Drawer, useMediaQuery, Theme } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import ContactDetails from 'src/components/apps/contacts/ContactDetails';
import ContactList from 'src/components/apps/contacts/ContactList';
import ContactSearch from 'src/components/apps/contacts/ContactSearch';
import ContactFilter from 'src/components/apps/contacts/ContactFilter';
import AppCard from 'src/components/shared/AppCard';
import { ContactContextProvider } from 'src/context/ConatactContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [isLeftSidebarOpen, setLeftSidebarOpen] = useState(false);
  const [isRightSidebarOpen, setRightSidebarOpen] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 110
Component exports: 1

=== Component Analysis: Logs ===
File: front-end/src/views/apps/logs/Logs.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { adminAPI } from '../../../api/admin.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [activeTab, setActiveTab] = useState(0);
    const [logs, setLogs] = useState<LogEntry[]>([]);
    const [filteredLogs, setFilteredLogs] = useState<LogEntry[]>([]);
    const [logLevels, setLogLevels] = useState<LogLevel[]>([]);
    const [selectedComponent, setSelectedComponent] = useState<string>('all');
    const [selectedLevel, setSelectedLevel] = useState<string>('all');
    const [selectedSource, setSelectedSource] = useState<string>('both'); // 'memory', 'file', 'both'
    const [searchTerm, setSearchTerm] = useState('');
    const [isRealTime, setIsRealTime] = useState(true);
    const [autoScroll, setAutoScroll] = useState(true);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(25);
    const [snackbarOpen, setSnackbarOpen] = useState(false);
    const [snackbarMessage, setSnackbarMessage] = useState('');
    const [availableComponents, setAvailableComponents] = useState<ComponentInfo[]>([]);
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
            const response = await fetch('/api/logs/components', {
            const response = await fetch(`/api/logs?${params}`, {
                    fetchNewLogs();
                fetchNewLogs();
    const fetchNewLogs = async () => {
            const response = await fetch(`/api/logs?${params}`, {
            console.error('Error fetching new logs:', error);
            const response = await fetch(`/api/logs/components/${component}/level`, {
            const response = await fetch(`/api/logs/components/${component}/toggle`, {
            const response = await fetch('/api/logs', {
            const response = await fetch('/api/logs/test', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1068
Component exports: 4

=== Component Analysis: Email ===
File: front-end/src/views/apps/email/Email.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Button, Box, Drawer, useMediaQuery, Theme } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import EmailLists from 'src/components/apps/email/EmailList';
import EmailFilter from 'src/components/apps/email/EmailFilter';
import EmailSearch from 'src/components/apps/email/EmailSearch';
import EmailContent from 'src/components/apps/email/EmailContent';
import PageContainer from 'src/components/container/PageContainer';
import AppCard from 'src/components/shared/AppCard';
import emailIcon from 'src/assets/images/breadcrumb/emailSv.png';
import { EmailContextProvider } from "src/context/EmailContext/index";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [isLeftSidebarOpen, setLeftSidebarOpen] = useState(false);
  const [isRightSidebarOpen, setRightSidebarOpen] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 127
Component exports: 1

=== Component Analysis: ChurchForm ===
File: front-end/src/views/apps/church-management/ChurchForm.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import {
import { useFormik } from 'formik';
import * as Yup from 'yup';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import BlankCard from 'src/components/shared/BlankCard';
import { useAuth } from 'src/context/AuthContext';
import { orthodoxMetricsAPI } from 'src/api/orthodox-metrics.api';
import { logger } from 'src/utils/logger';
import type { SupportedLanguage } from 'src/types/orthodox-metrics.types';
import {
import UserManagementDialog from './UserManagementDialog';

--- PROPS/INTERFACES ---
interface ChurchFormProps { }

const ChurchForm: React.FC<ChurchFormProps> = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const { user, hasRole } = useAuth();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [templateChurches, setTemplateChurches] = useState<any[]>([]);
  const [loadingTemplateChurches, setLoadingTemplateChurches] = useState(false);

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [templateChurches, setTemplateChurches] = useState<any[]>([]);
  const [loadingTemplateChurches, setLoadingTemplateChurches] = useState(false);
  const [isFieldModified, setIsFieldModified] = useState<Record<string, boolean>>({});
  const [expandedSections, setExpandedSections] = useState({
  const [churchUsers, setChurchUsers] = useState<any[]>([]);
  const [recordCounts, setRecordCounts] = useState<Record<string, number>>({});
  const [databaseInfo, setDatabaseInfo] = useState<any>(null);
  const [databaseLogs, setDatabaseLogs] = useState<any[]>([]);
  const [loadingUsers, setLoadingUsers] = useState(false);
  const [loadingRecords, setLoadingRecords] = useState(false);
  const [loadingDatabase, setLoadingDatabase] = useState(false);
  const [userDialog, setUserDialog] = useState({ open: false, user: null, action: '' });
  const [passwordResetDialog, setPasswordResetDialog] = useState({ open: false, user: null });
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/admin/churches/${churchId}/users`, {
      const response = await fetch(`/api/admin/churches/${churchId}/record-counts`, {
      const response = await fetch(`/api/admin/churches/${churchId}/database-info`, {
      const response = await fetch(`/api/admin/churches/${churchId}/test-connection`, {
      const response = await fetch(`/api/admin/churches/${id}/users/${user.id}/${action}`, {
      const response = await fetch(`/api/admin/churches/${id}/users/${user.id}/reset-password`, {
      const response = await fetch(endpoint, {
    const fetchEnglishChurches = async () => {
      if (!isEdit) { // Only fetch for new churches
          const response = await fetch('/api/admin/churches?preferred_language=en', {
            throw new Error('Failed to fetch template churches');
          console.error('Error fetching template churches:', err);
    fetchEnglishChurches();
          await orthodoxMetricsAPI.churches.update(parseInt(id), churchData);
          await orthodoxMetricsAPI.churches.create(churchData);
          const church = await orthodoxMetricsAPI.churches.getById(parseInt(id));

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 943
Component exports: 1

=== Component Analysis: UserManagementDialog ===
File: front-end/src/views/apps/church-management/UserManagementDialog.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { useFormik } from 'formik';
import * as Yup from 'yup';

--- PROPS/INTERFACES ---
interface UserManagementDialogProps {
  user: User | null;
  action: 'add' | 'edit';
  churchId: string;
  onSave: (userData: any) => void;
  onCancel: () => void;
}

const validationSchema = Yup.object({
  email: Yup.string().email('Invalid email').required('Email is required'),
  first_name: Yup.string().required('First name is required'),

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [loading, setLoading] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 294
Component exports: 1

=== Component Analysis: ChurchSetupWizard ===
File: front-end/src/views/apps/church-management/ChurchSetupWizard.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import { useFormik } from 'formik';
import * as Yup from 'yup';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeStep, setActiveStep] = useState(0);
  const [loading, setLoading] = useState(false);
  const [templateChurches, setTemplateChurches] = useState<TemplateChurch[]>([]);
  const [selectedTemplate, setSelectedTemplate] = useState<TemplateChurch | null>(null);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [customFieldDialog, setCustomFieldDialog] = useState(false);
  const [userDialog, setUserDialog] = useState(false);
  const [editingField, setEditingField] = useState<CustomField | null>(null);
  const [editingUser, setEditingUser] = useState<ChurchUser | null>(null);
  useEffect(() => {
  const [fieldData, setFieldData] = useState<Partial<CustomField>>({
  useEffect(() => {
  const [userData, setUserData] = useState<Partial<ChurchUser>>({
  useEffect(() => {

--- API INTEGRATION ---
    const fetchTemplateChurches = async () => {
        const response = await fetch('/api/admin/churches?preferred_language=en', {
                const tablesResponse = await fetch(`/api/admin/churches/${church.id}/tables`, {
        console.error('Error fetching template churches:', error);
    fetchTemplateChurches();
      const response = await fetch('/api/admin/churches/wizard', {

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 1405
Component exports: 2

=== Component Analysis: ChurchList ===
File: front-end/src/views/apps/church-management/ChurchList.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import {
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import BlankCard from 'src/components/shared/BlankCard';
import { useAuth } from 'src/context/AuthContext';
import { orthodoxMetricsAPI } from 'src/api/orthodox-metrics.api';
import { logger } from 'src/utils/logger';
import type { Church } from 'src/types/orthodox-metrics.types';
import OrthodoxChurchIcon from 'src/components/shared/OrthodoxChurchIcon';
import OrthodoxBanner from 'src/components/shared/OrthodoxBanner';

--- PROPS/INTERFACES ---
interface ChurchListProps { }

const ChurchList: React.FC<ChurchListProps> = () => {
  const { hasRole } = useAuth();
  const navigate = useNavigate();
  const [churches, setChurches] = useState<Church[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedChurch, setSelectedChurch] = useState<Church | null>(null);
  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [churches, setChurches] = useState<Church[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedChurch, setSelectedChurch] = useState<Church | null>(null);
  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);
  const [viewDialogOpen, setViewDialogOpen] = useState(false);
  const [filterStatus, setFilterStatus] = useState<'all' | 'active' | 'inactive'>('all');
  const [shouldDeleteDatabase, setShouldDeleteDatabase] = useState(false);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
    const fetchChurches = async () => {
        const response = await orthodoxMetricsAPI.churches.getAll();
        const errorMessage = err instanceof Error ? err.message : 'Failed to fetch churches';
        logger.error('Church Management', 'Failed to fetch churches list', {
      fetchChurches();
        // Refetch churches without showing loading state
        orthodoxMetricsAPI.churches.getAll()
        // Refetch churches without showing loading state
        orthodoxMetricsAPI.churches.getAll()
      await orthodoxMetricsAPI.churches.removeAllUsers(church.id);
      await orthodoxMetricsAPI.churches.delete(church.id, shouldDeleteDatabase);

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 842
Component exports: 1

=== Component Analysis: SiteClone ===
File: front-end/src/views/apps/site-clone/SiteClone.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import logger from 'src/utils/logger';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [loading, setLoading] = useState(false);
    const [instances, setInstances] = useState<SiteInstance[]>([]);
    const [createDialogOpen, setCreateDialogOpen] = useState(false);
    const [newInstanceName, setNewInstanceName] = useState('');
    const [newInstanceDomain, setNewInstanceDomain] = useState('');
    const [newInstanceTemplate, setNewInstanceTemplate] = useState('Orthodox Parish Template');
    const [creating, setCreating] = useState(false);
    const [snackbarOpen, setSnackbarOpen] = useState(false);
    const [snackbarMessage, setSnackbarMessage] = useState('');
    const [snackbarSeverity, setSnackbarSeverity] = useState<'success' | 'error'>('success');
    useEffect(() => {

--- API INTEGRATION ---
            logger.userAction('Site Clone', 'load_instances', { action: 'fetch_instances' });
            logger.dataOperation('Site Clone', 'fetch', 'instances', mockInstances.length);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 384
Component exports: 1

=== Component Analysis: Edit ===
File: front-end/src/views/apps/invoice/Edit.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import EditInvoicePage from 'src/components/apps/invoice/Edit-invoice/index';
import { InvoiceProvider } from 'src/context/InvoiceContext/index';
import BlankCard from 'src/components/shared/BlankCard';
import { CardContent } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: Create ===
File: front-end/src/views/apps/invoice/Create.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import CreateInvoiceApp from 'src/components/apps/invoice/Add-invoice';
import BlankCard from 'src/components/shared/BlankCard';
import { CardContent } from '@mui/material';
import { InvoiceProvider } from 'src/context/InvoiceContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: View ===
File: front-end/src/views/apps/invoice/View.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { InvoiceProvider } from 'src/context/InvoiceContext/index';
import InvoiceView from 'src/components/apps/invoice/Invoice-view/index';
import BlankCard from 'src/components/shared/BlankCard';
import { CardContent } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: List ===
File: front-end/src/views/apps/invoice/List.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import InvoiceList from 'src/components/apps/invoice/Invoice-list/index';
import { InvoiceProvider } from 'src/context/InvoiceContext/index';
import BlankCard from 'src/components/shared/BlankCard';
import { CardContent } from '@mui/material';
import logger from 'src/utils/logger';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 45
Component exports: 1

=== Component Analysis: Detail ===
File: front-end/src/views/apps/invoice/Detail.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { InvoiceProvider } from 'src/context/InvoiceContext/index';
import InvoiceDetail from 'src/components/apps/invoice/Invoice-detail/index';
import BlankCard from 'src/components/shared/BlankCard';
import { CardContent } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: OCRFieldMappingWindow ===
File: front-end/src/views/apps/ocr/OCRFieldMappingWindow.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
import {
import { styled } from '@mui/material/styles';
import { useDropzone } from 'react-dropzone';
import { saveAs } from 'file-saver';
import {

--- PROPS/INTERFACES ---
interface OCRFieldMappingWindowProps {
  initialImage?: string;
  initialFields?: BoundingBox[];
  onSave?: (template: FieldTemplate) => void;
  onClose?: () => void;
  title?: string;
}

// Field types and constants (simplified for the window version)
const FIELD_TYPES = [
  { value: 'firstName', label: 'First Name', category: 'Personal' },

--- STATE MANAGEMENT ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
  const [image, setImage] = useState<string | null>(initialImage || null);
  const [imageFile, setImageFile] = useState<File | null>(null);
  const [imageDimensions, setImageDimensions] = useState({ width: 0, height: 0 });
  const [fields, setFields] = useState<BoundingBox[]>(initialFields);
  const [activeField, setActiveField] = useState<string | null>(null);
  const [selectedFields, setSelectedFields] = useState<string[]>([]);
  const [drawingState, setDrawingState] = useState<DrawingState>({
  const [viewState, setViewState] = useState<ViewState>({
  const [templateName, setTemplateName] = useState('');
  const [templateDescription, setTemplateDescription] = useState('');
  const [language, setLanguage] = useState('en');
  const [recordType, setRecordType] = useState('baptism');
  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' as 'success' | 'error' | 'warning' | 'info' });
  const [showTemplateDialog, setShowTemplateDialog] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterCategory, setFilterCategory] = useState('all');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
  IconExternalLink

--- METRICS ---
Lines of code: 1004
Component exports: 1

=== Component Analysis: OCRFieldMapping ===
File: front-end/src/views/apps/ocr/OCRFieldMapping.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
import {
import { styled } from '@mui/material/styles';
import { useDropzone } from 'react-dropzone';
import { saveAs } from 'file-saver';
import OCRFieldMappingWindow from './OCRFieldMappingWindow';
import {

--- PROPS/INTERFACES ---
interface OCRFieldMappingProps {
  onMappingComplete?: (mapping: FieldTemplate) => void;
  initialTemplate?: FieldTemplate;
  mode?: 'create' | 'edit' | 'apply';
}

interface DrawingState {
  isDrawing: boolean;
  startPoint: { x: number; y: number };
  mode: 'draw' | 'select' | 'pan';
}

--- STATE MANAGEMENT ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
  const [image, setImage] = useState<string | null>(null);
  const [imageFile, setImageFile] = useState<File | null>(null);
  const [imageDimensions, setImageDimensions] = useState({ width: 0, height: 0 });
  const [fields, setFields] = useState<BoundingBox[]>(initialTemplate?.fields || []);
  const [activeField, setActiveField] = useState<string | null>(null);
  const [selectedFields, setSelectedFields] = useState<string[]>([]);
  const [drawingState, setDrawingState] = useState<DrawingState>({
  const [viewState, setViewState] = useState<ViewState>({
  const [templateName, setTemplateName] = useState(initialTemplate?.name || '');
  const [templateDescription, setTemplateDescription] = useState(initialTemplate?.description || '');
  const [language, setLanguage] = useState(initialTemplate?.language || 'en');
  const [recordType, setRecordType] = useState(initialTemplate?.recordType || 'other');
  const [showTemplateDialog, setShowTemplateDialog] = useState(false);
  const [savedTemplates, setSavedTemplates] = useState<FieldTemplate[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [snackbar, setSnackbar] = useState<{ open: boolean; message: string; severity: 'success' | 'error' | 'info' }>({
  const [filterCategory, setFilterCategory] = useState<string>('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [showLargeView, setShowLargeView] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
  IconExternalLink
                      startIcon={<IconExternalLink />}

--- METRICS ---
Lines of code: 1853
Component exports: 6

=== Component Analysis: PublicOCRUpload ===
File: front-end/src/views/apps/ocr/PublicOCRUpload.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback, useRef } from 'react';
import {
import { styled, keyframes } from '@mui/material/styles';
import { useDropzone } from 'react-dropzone';
import { saveAs } from 'file-saver';
import {
import { Link } from 'react-router-dom';
import OcrScanPreview from '../../../components/OcrScanPreview';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useCallback, useRef } from 'react';
  const [files, setFiles] = useState<UploadedFile[]>([]);
  const [selectedLanguage, setSelectedLanguage] = useState('auto');
  const [enableTranslation, setEnableTranslation] = useState(false);
  const [targetLanguage, setTargetLanguage] = useState('en');
  const [processing, setProcessing] = useState(false);
  const [showPreview, setShowPreview] = useState(false);
  const [previewData, setPreviewData] = useState<any>(null);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [resultsRevealed, setResultsRevealed] = useState<{[key: string]: boolean}>({});
  const [celebrationMode, setCelebrationMode] = useState<{[key: string]: boolean}>({});
  React.useEffect(() => {

--- API INTEGRATION ---
        const response = await fetch('/api/public/ocr/process', {

--- ROUTING ---
  Link
import { Link } from 'react-router-dom';
                  <Link href="https://orthodoxmetrics.com" target="_blank" rel="noopener">
                  </Link>

--- METRICS ---
Lines of code: 946
Component exports: 1

=== Component Analysis: OCRUpload ===
File: front-end/src/views/apps/ocr/OCRUpload.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback, useRef, useEffect } from 'react';
import {
import { styled } from '@mui/material/styles';
import { useDropzone } from 'react-dropzone';
import JsBarcode from 'jsbarcode';
import * as XLSX from 'xlsx';
import { saveAs } from 'file-saver';
import jsPDF from 'jspdf';
import 'jspdf-autotable';
import {
import PageContainer from 'src/components/container/PageContainer';
import BlankCard from 'src/components/shared/BlankCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import logger from 'src/utils/logger';
import { useAuth } from 'src/context/AuthContext'; // Add this import

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useCallback, useRef, useEffect } from 'react';
  const [files, setFiles] = useState<UploadedFile[]>([]);
  const [selectedLanguage, setSelectedLanguage] = useState<string>('en');
  const [emailAddress, setEmailAddress] = useState<string>('');
  const [isProcessing, setIsProcessing] = useState(false);
  const [results, setResults] = useState<OCRResult[]>([]);
  const [selectedResult, setSelectedResult] = useState<OCRResult | null>(null);
  const [resultDialogOpen, setResultDialogOpen] = useState(false);
  const [barcodeDialogOpen, setBarcodeDialogOpen] = useState(false);
  const [currentBarcode, setCurrentBarcode] = useState<string>('');
  const [scannedBarcode, setScannedBarcode] = useState<string>('');
  const [snackbarOpen, setSnackbarOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState('');
  const [stats, setStats] = useState<OCRProcessingStats>({
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/test-ocr`, {
    } catch (fetchError) {
      // If fetch fails completely, also simulate for testing
      console.log('OCR endpoint fetch failed, simulating for bypass testing:', fetchError.message);
      const response = await fetch('/api/email/send-ocr-results', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1028
Component exports: 5

=== Component Analysis: OCRPreviewTableEnhanced ===
File: front-end/src/views/apps/ocr/OCRPreviewTableEnhanced.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback, useMemo, useRef } from 'react';
import { AgGridReact } from 'ag-grid-react';
import { ColDef, GridApi, CellEditingStoppedEvent, GridReadyEvent, ICellEditorParams, RowClassParams } from 'ag-grid-community';
import { 
import { IconDownload, IconDeviceFloppy, IconSettings } from '@tabler/icons-react';
import * as XLSX from 'xlsx';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';
import '../../../styles/orthodox-fonts.css';

--- PROPS/INTERFACES ---
interface OCRPreviewTableProps {
  data: OCRRecord[];
  recordType?: 'baptism' | 'marriage' | 'funeral' | 'custom';
  customFields?: FieldDefinition[];
  onSave?: (editedRows: OCRRecord[]) => void;
  onFieldsChange?: (fields: FieldDefinition[]) => void;
  className?: string;
}

// Custom dropdown cell editor component
class DropdownCellEditor {

--- STATE MANAGEMENT ---
import React, { useState, useCallback, useMemo, useRef } from 'react';
  const [editedRows, setEditedRows] = useState<Set<string | number>>(new Set());
  const [gridApi, setGridApi] = useState<GridApi | null>(null);
  const [showFieldConfig, setShowFieldConfig] = useState(false);
  const [activeFields, setActiveFields] = useState<FieldDefinition[]>([]);
  React.useEffect(() => {

--- API INTEGRATION ---
    params.api.sizeColumnsToFit();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 623
Component exports: 7

=== Component Analysis: OCRRecordsDemo ===
File: front-end/src/views/apps/ocr/OCRRecordsDemo.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Tab, Tabs, Button } from '@mui/material';
import { IconPlus } from '@tabler/icons-react';
import OCRPreviewTable from './OCRPreviewTableEnhanced';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;
  return (
    <div
      role="tabpanel"

--- STATE MANAGEMENT ---
  const [tabValue, setTabValue] = React.useState(0);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 206
Component exports: 1

=== Component Analysis: OCRPreviewTable ===
File: front-end/src/views/apps/ocr/OCRPreviewTable.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback, useMemo, useRef } from 'react';
import { AgGridReact } from 'ag-grid-react';
import { ColDef, GridApi, CellEditingStoppedEvent, GridReadyEvent, ICellEditorParams, RowClassParams } from 'ag-grid-community';
import { 
import { IconDownload, IconDeviceFloppy, IconPlus, IconTrash, IconSettings } from '@tabler/icons-react';
import * as XLSX from 'xlsx';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';

--- PROPS/INTERFACES ---
interface OCRPreviewTableProps {
  data: OCRRecord[];
  recordType?: 'baptism' | 'marriage' | 'funeral' | 'custom';
  customFields?: FieldDefinition[];
  onSave?: (editedRows: OCRRecord[]) => void;
  onFieldsChange?: (fields: FieldDefinition[]) => void;
  className?: string;
}

// Custom dropdown cell editor component
class DropdownCellEditor {

--- STATE MANAGEMENT ---
import React, { useState, useCallback, useMemo, useRef } from 'react';
  const [editedRows, setEditedRows] = useState<Set<string | number>>(new Set());
  const [gridApi, setGridApi] = useState<GridApi | null>(null);
  const [showFieldConfig, setShowFieldConfig] = useState(false);
  const [activeFields, setActiveFields] = useState<FieldDefinition[]>([]);
  React.useEffect(() => {

--- API INTEGRATION ---
    params.api.sizeColumnsToFit();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 621
Component exports: 7

=== Component Analysis: EcommerceEditProduct ===
File: front-end/src/views/apps/eCommerce/EcommerceEditProduct.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import { Button, Grid, Stack } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import GeneralCard from 'src/components/apps/ecommerce/productEdit/GeneralCard';
import MediaCard from 'src/components/apps/ecommerce/productEdit/Media';
import VariationCard from 'src/components/apps/ecommerce/productEdit/VariationCard';
import PricingCard from 'src/components/apps/ecommerce/productEdit/Pricing';
import Thumbnail from 'src/components/apps/ecommerce/productEdit/Thumbnail';
import StatusCard from 'src/components/apps/ecommerce/productEdit/Status';
import ProductDetails from 'src/components/apps/ecommerce/productEdit/ProductDetails';
import ProductTemplate from 'src/components/apps/ecommerce/productEdit/ProductTemplate';
import CustomersReviews from 'src/components/apps/ecommerce/productEdit/CustomersReviews';
import ProductAvgSales from 'src/components/apps/ecommerce/productEdit/ProductAvgSales';
import BlankCard from 'src/components/shared/BlankCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 102
Component exports: 1

=== Component Analysis: EcommerceDetail ===
File: front-end/src/views/apps/eCommerce/EcommerceDetail.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import { Grid } from '@mui/material';
import ProductCarousel from 'src/components/apps/ecommerce/productDetail/ProductCarousel';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ProductDetail from 'src/components/apps/ecommerce/productDetail/ProductDetail';
import ProductDesc from 'src/components/apps/ecommerce/productDetail/ProductDesc';
import ProductRelated from 'src/components/apps/ecommerce/productDetail/ProductRelated';
import ChildCard from 'src/components/shared/ChildCard';
import { ProductProvider } from 'src/context/EcommerceContext';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 88
Component exports: 1

=== Component Analysis: EcomProductList ===
File: front-end/src/views/apps/eCommerce/EcomProductList.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ProductTableList from 'src/components/apps/ecommerce/ProductTableList/ProductTableList';
import BlankCard from 'src/components/shared/BlankCard';
import { ProductProvider } from 'src/context/EcommerceContext/index'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: EcommerceAddProduct ===
File: front-end/src/views/apps/eCommerce/EcommerceAddProduct.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import { Button, Grid, Stack } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import GeneralCard from 'src/components/apps/ecommerce/productAdd/GeneralCard';
import MediaCard from 'src/components/apps/ecommerce/productAdd/Media';
import VariationCard from 'src/components/apps/ecommerce/productAdd/VariationCard';
import PricingCard from 'src/components/apps/ecommerce/productAdd/Pricing';
import Thumbnail from 'src/components/apps/ecommerce/productAdd/Thumbnail';
import StatusCard from 'src/components/apps/ecommerce/productAdd/Status';
import ProductDetails from 'src/components/apps/ecommerce/productAdd/ProductDetails';
import ProductTemplate from 'src/components/apps/ecommerce/productAdd/ProductTemplate';
import BlankCard from 'src/components/shared/BlankCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 94
Component exports: 1

=== Component Analysis: Ecommerce ===
File: front-end/src/views/apps/eCommerce/Ecommerce.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Box } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ProductList from 'src/components/apps/ecommerce/productGrid/ProductList';
import ProductSidebar from 'src/components/apps/ecommerce/productGrid/ProductSidebar';
import AppCard from 'src/components/shared/AppCard';
import { ProductProvider } from 'src/context/EcommerceContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [isMobileSidebarOpen, setMobileSidebarOpen] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: EcommerceCheckout ===
File: front-end/src/views/apps/eCommerce/EcommerceCheckout.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ProductChecout from 'src/components/apps/ecommerce/productCheckout/ProductCheckout';
import ChildCard from 'src/components/shared/ChildCard';
import { ProductProvider } from 'src/context/EcommerceContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 41
Component exports: 1

=== Component Analysis: Kanban ===
File: front-end/src/views/apps/kanban/Kanban.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import KanbanPage from 'src/pages/kanban';
import BlankCard from 'src/components/shared/BlankCard';
import { CardContent } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 30
Component exports: 1

=== Component Analysis: Tickets ===
File: front-end/src/views/apps/tickets/Tickets.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import TicketListing from 'src/components/apps/tickets/TicketListing';
import TicketFilter from 'src/components/apps/tickets/TicketFilter';
import ChildCard from 'src/components/shared/ChildCard';
import { TicketProvider } from 'src/context/TicketContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: Blog ===
File: front-end/src/views/apps/blog/Blog.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import BlogListing from 'src/components/apps/blog/BlogListing';
import { BlogProvider } from "src/context/BlogContext"

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: BlogPost ===
File: front-end/src/views/apps/blog/BlogPost.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import BlogDetail from 'src/components/apps/blog/detail/BlogDetail';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import { BlogProvider } from "src/context/BlogContext"

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: SimplePageEditorTest ===
File: front-end/src/views/apps/cms/SimplePageEditorTest.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useParams } from 'react-router-dom';
import SimplePageEditor from './SimplePageEditor';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 18
Component exports: 1

=== Component Analysis: PageEditorWrapper ===
File: front-end/src/views/apps/cms/PageEditorWrapper.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useParams } from 'react-router-dom';
import PageEditor from './PageEditor';
import PageContainer from 'src/components/container/PageContainer';
import DashboardCard from 'src/components/shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 19
Component exports: 1

=== Component Analysis: DynamicComponentRenderer ===
File: front-end/src/views/apps/cms/DynamicComponentRenderer.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface ComponentProps {
  [key: string]: any;
}

interface DynamicComponentRendererProps {
  shortcode: string;
  props?: ComponentProps;
}

// Parse shortcode to extract component type and props
const parseShortcode = (shortcode: string): { component: string; props: ComponentProps } => {
  // Match patterns like {{component:mui-alert:severity=info:title=Hello}}
  const match = shortcode.match(/\{\{component:([^:}]+)(?::([^}]+))?\}\}/);
  
  if (!match) {
--
  'callout-box': ({ type = 'info', title, children, ...props }: ComponentProps) => {
    const getIcon = () => {
      switch (type) {
        case 'warning': return <WarningIcon />;
        case 'error': return <ErrorIcon />;
        case 'success': return <CheckCircleIcon />;
        default: return <InfoIcon />;
      }
    };
    
    const getColor = () => {

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 359
Component exports: 2

=== Component Analysis: PageEditorTest ===
File: front-end/src/views/apps/cms/PageEditorTest.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useParams } from 'react-router-dom';
import PageEditor from './PageEditor';
import PageContainer from 'src/components/container/PageContainer';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: EnhancedPageEditorTest ===
File: front-end/src/views/apps/cms/EnhancedPageEditorTest.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useParams } from 'react-router-dom';
import EnhancedPageEditor from './EnhancedPageEditor';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 18
Component exports: 1

=== Component Analysis: PageEditor ===
File: front-end/src/views/apps/cms/PageEditor.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {
import ReactQuill from 'react-quill';
import 'react-quill/dist/quill.snow.css';
import axios from 'axios';

--- PROPS/INTERFACES ---
interface PageEditorProps {
  slug?: string;
  onSave?: (pageData: PageData) => void;
}

const PageEditor: React.FC<PageEditorProps> = ({ slug = 'new-page', onSave }) => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  
  // State management
  const [pageData, setPageData] = useState<PageData>({

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [pageData, setPageData] = useState<PageData>({
  const [images, setImages] = useState<ImageItem[]>([]);
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [uploading, setUploading] = useState(false);
  const [imageDialogOpen, setImageDialogOpen] = useState(false);
  const [notification, setNotification] = useState<{
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.get(`/api/pages/${slug}`);
      const response = await axios.get('/api/uploads/list');
      await axios.put(`/api/pages/${pageData.slug}`, {
      const response = await axios.put(`/api/pages/${pageData.slug}`, {
      const response = await axios.post('/api/uploads/image', formData, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 489
Component exports: 1

=== Component Analysis: SimplePageEditor ===
File: front-end/src/views/apps/cms/SimplePageEditor.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {
import EditorJS from '@editorjs/editorjs';
import Header from '@editorjs/header';
import List from '@editorjs/list';
import Paragraph from '@editorjs/paragraph';
import Image from '@editorjs/image';
import Quote from '@editorjs/quote';
import CodeTool from '@editorjs/code';
import Table from '@editorjs/table';
import Delimiter from '@editorjs/delimiter';
import axios from 'axios';
import DynamicComponentRenderer, { getAvailableComponents } from './DynamicComponentRenderer';
import ContentRenderer from './ContentRenderer';
import './EnhancedPageEditor.css';

--- PROPS/INTERFACES ---
interface SimplePageEditorProps {
  slug?: string;
  onSave?: (pageData: PageData) => void;
}

const SimplePageEditor: React.FC<SimplePageEditorProps> = ({ 
  slug = 'new-page', 
  onSave 
}) => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [pageData, setPageData] = useState<PageData>({
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [previewMode, setPreviewMode] = useState(false);
  const [previewContent, setPreviewContent] = useState<string>('');
  const [componentMenuAnchor, setComponentMenuAnchor] = useState<null | HTMLElement>(null);
  const [templateDialog, setTemplateDialog] = useState(false);
  const [notification, setNotification] = useState<{
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.get(`/api/pages/${slug}`);
      const response = await axios.put(`/api/pages/${pageData.slug}`, dataToSave);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 540
Component exports: 1

=== Component Analysis: EnhancedPageEditor ===
File: front-end/src/views/apps/cms/EnhancedPageEditor.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {
import EditorJS from '@editorjs/editorjs';
import Header from '@editorjs/header';
import List from '@editorjs/list';
import Image from '@editorjs/image';
import Quote from '@editorjs/quote';
import CodeTool from '@editorjs/code';
import Table from '@editorjs/table';
import Delimiter from '@editorjs/delimiter';
import axios from 'axios';
import DynamicComponentRenderer, { getAvailableComponents } from './DynamicComponentRenderer';
import ContentRenderer from './ContentRenderer';
import './EnhancedPageEditor.css';

--- PROPS/INTERFACES ---
interface EnhancedPageEditorProps {
  slug?: string;
  onSave?: (pageData: PageData) => void;
}

// Custom component block for Editor.js
// Note: This is a simplified version - component insertion will be handled differently
const insertComponentText = (componentId: string) => {
  const component = getAvailableComponents().find(c => c.id === componentId);
  return component ? component.shortcode : '';
};

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [pageData, setPageData] = useState<PageData>({
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [previewMode, setPreviewMode] = useState(false);
  const [previewContent, setPreviewContent] = useState<string>('');
  const [componentMenuAnchor, setComponentMenuAnchor] = useState<null | HTMLElement>(null);
  const [templateDialog, setTemplateDialog] = useState(false);
  const [notification, setNotification] = useState<{
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
                const response = await axios.post('/api/uploads/image', formData, {
      const response = await axios.get(`/api/pages/${slug}`);
      const response = await axios.put(`/api/pages/${pageData.slug}`, dataToSave);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 604
Component exports: 1

=== Component Analysis: ContentRenderer ===
File: front-end/src/views/apps/cms/ContentRenderer.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import DynamicComponentRenderer from './DynamicComponentRenderer';

--- PROPS/INTERFACES ---
interface ContentRendererProps {
  content: string | EditorBlock[];
  className?: string;
}

const ContentRenderer: React.FC<ContentRendererProps> = ({ content, className }) => {
  // Parse content if it's a JSON string
  let blocks: EditorBlock[] = [];
  
  if (typeof content === 'string') {
    try {

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 324
Component exports: 1

=== Component Analysis: ChatApp ===
File: front-end/src/views/apps/chat/ChatApp.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {
import { useAuth } from 'src/context/AuthContext';
import { useTheme } from 'src/context/ThemeContext';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ChatSidebar from '../../../components/apps/chat/ChatSidebar';
import ChatWindow from '../../../components/apps/chat/ChatWindow';
import FriendsList from '../../../components/apps/chat/FriendsList';
import ChatSettings from '../../../components/apps/chat/ChatSettings';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [conversations, setConversations] = useState<Conversation[]>([]);
  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);
  const [friends, setFriends] = useState<Friend[]>([]);
  const [activeTab, setActiveTab] = useState<'chats' | 'friends' | 'settings'>('chats');
  const [sidebarOpen, setSidebarOpen] = useState(!isMobile);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [notifications, setNotifications] = useState<ChatNotification[]>([]);
  const [unreadNotifications, setUnreadNotifications] = useState(0);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const conversationsResponse = await fetch('/api/social/chat/conversations', {
        throw new Error('Failed to fetch conversations');
      const friendsResponse = await fetch('/api/social/friends', {
      const response = await fetch(`/api/social/chat/start/${friendId}`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 621
Component exports: 1

=== Component Analysis: Chat ===
File: front-end/src/views/apps/chat/Chat.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Divider, Box } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ChatSidebar from 'src/components/apps/chats/ChatSidebar';
import ChatContent from 'src/components/apps/chats/ChatContent';
import ChatMsgSent from 'src/components/apps/chats/ChatMsgSent';
import AppCard from 'src/components/shared/AppCard';
import { ChatProvider } from 'src/context/ChatContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [isMobileSidebarOpen, setMobileSidebarOpen] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 52
Component exports: 1

=== Component Analysis: TemplateManager ===
File: front-end/src/views/apps/client-management/TemplateManager.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useTemplates, useCloneTemplate, useDeployTemplate } from '../../../hooks/useClientManagement';
import PageContainer from 'src/components/container/PageContainer';
import DashboardCard from 'src/components/shared/DashboardCard';

--- PROPS/INTERFACES ---
interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

const TabPanel: React.FC<TabPanelProps> = ({ children, value, index }) => (
    <div role="tabpanel" hidden={value !== index}>
        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}
    </div>
);

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [tabValue, setTabValue] = useState(0);
    const [deployDialogOpen, setDeployDialogOpen] = useState(false);
    const [selectedTemplate, setSelectedTemplate] = useState<any>(null);
    const [targetClientSlug, setTargetClientSlug] = useState('');
    const [deploymentStatus, setDeploymentStatus] = useState<'idle' | 'deploying' | 'success' | 'error'>('idle');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 447
Component exports: 1

=== Component Analysis: ChurchSetup ===
File: front-end/src/views/apps/client-management/ChurchSetup.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useChurchInfo, useUpdateChurchInfo, useTestClientConnection } from '../../../hooks/useClientManagement';
import type { ChurchInfo, ChurchInfoUpdateRequest, ClientBranding } from '../../../types/client-management.types';
import PageContainer from 'src/components/container/PageContainer';
import DashboardCard from 'src/components/shared/DashboardCard';

--- PROPS/INTERFACES ---
interface ChurchSetupProps {
    clientSlug: string;
    isNewClient?: boolean;
}

const ChurchSetup: React.FC<ChurchSetupProps> = ({ clientSlug, isNewClient = false }) => {
    const [activeStep, setActiveStep] = useState(0);
    const [churchData, setChurchData] = useState<ChurchInfoUpdateRequest>({
        name: '',
        address: '',
        phone: '',

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [activeStep, setActiveStep] = useState(0);
    const [churchData, setChurchData] = useState<ChurchInfoUpdateRequest>({
    const [brandingData, setBrandingData] = useState<ClientBranding>({
    const [connectionTested, setConnectionTested] = useState(false);
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 444
Component exports: 1

=== Component Analysis: ClientManagementDashboard ===
File: front-end/src/views/apps/client-management/ClientManagementDashboard.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useClients, useCreateClient, useUpdateClientStatus, useDeleteClient } from '../../../hooks/useClientManagement';
import type { Client, CreateClientRequest } from '../../../types/client-management.types';
import PageContainer from 'src/components/container/PageContainer';
import DashboardCard from 'src/components/shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [page, setPage] = useState(1);
    const [search, setSearch] = useState('');
    const [selectedClient, setSelectedClient] = useState<Client | null>(null);
    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
    const [createDialogOpen, setCreateDialogOpen] = useState(false);
    const [newClientData, setNewClientData] = useState<CreateClientRequest>({

--- API INTEGRATION ---
    const { data: clientsResponse, isLoading, error, refetch } = useClients(page, 10, search);
                    <Button onClick={() => refetch()} sx={{ ml: 2 }}>

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 430
Component exports: 1

=== Component Analysis: AddNewClient ===
File: front-end/src/views/apps/client-management/AddNewClient.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import { useCreateClient } from '../../../hooks/useClientManagement';
import { useQueryClient } from '@tanstack/react-query';
import type { CreateClientRequest } from '../../../types/client-management.types';
import PageContainer from 'src/components/container/PageContainer';
import DashboardCard from 'src/components/shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [clientData, setClientData] = useState<CreateClientRequest>({
    const [errors, setErrors] = useState<Record<string, string>>({});

--- API INTEGRATION ---
            await queryClient.refetchQueries({ queryKey: ['clients'] });

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 317
Component exports: 1

=== Component Analysis: UserProfile ===
File: front-end/src/views/apps/user-profile/UserProfile.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import ProfileBanner from 'src/components/apps/userprofile/profile/ProfileBanner';
import { UserDataProvider } from "src/context/UserDataContext/index";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: Followers ===
File: front-end/src/views/apps/user-profile/Followers.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import ProfileBanner from 'src/components/apps/userprofile/profile/ProfileBanner';
import FollowerCard from 'src/components/apps/userprofile/followers/FollowerCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import { UserDataProvider } from "src/context/UserDataContext/index";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 48
Component exports: 1

=== Component Analysis: Gallery ===
File: front-end/src/views/apps/user-profile/Gallery.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import ProfileBanner from 'src/components/apps/userprofile/profile/ProfileBanner';
import GalleryCard from 'src/components/apps/userprofile/gallery/GalleryCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import { UserDataProvider } from "src/context/UserDataContext/index";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 44
Component exports: 1

=== Component Analysis: Friends ===
File: front-end/src/views/apps/user-profile/Friends.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import ProfileBanner from 'src/components/apps/userprofile/profile/ProfileBanner';
import FriendsCard from 'src/components/apps/userprofile/friends/FriendsCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import { UserDataProvider } from "src/context/UserDataContext/index";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 43
Component exports: 1

=== Component Analysis: Notes ===
File: front-end/src/views/apps/notes/Notes.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import { Box, useMediaQuery } from '@mui/material';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from '../../../components/container/PageContainer';
import NoteSidebar from '../../../components/apps/notes/NoteSidebar';
import NoteContent from '../../../components/apps/notes/NoteContent';
import AppCard from 'src/components/shared/AppCard';
import { NotesProvider } from 'src/context/NotesContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [isMobileSidebarOpen, setMobileSidebarOpen] = useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: EditableRecordPage ===
File: front-end/src/views/EditableRecordPage.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback, useMemo, useEffect } from 'react';
import {
import {
import { useNavigate, useParams } from 'react-router-dom';
import {
import {
import { devLogStateChange } from '../utils/devLogger';
import FieldRenderer from '../components/FieldRenderer';
import RecordPreviewPane from '../components/RecordPreviewPane';
import ColorPickerPopover from '../components/ColorPickerPopover';
import recordService from '../services/recordService';
import { useAuth } from '../context/AuthContext';
import { ThemedLayout } from '../components/Theme/ThemedLayout';
import { useTheme } from '../context/ThemeContext';

--- PROPS/INTERFACES ---
interface EditableRecordPageProps {
  recordType?: RecordType;
  recordId?: string;
  onSave?: (record: ChurchRecord) => void;
  onCancel?: () => void;
  readonly?: boolean;
  showPreview?: boolean;
}

/**
 * Editable Record Page Component

--- STATE MANAGEMENT ---
import React, { useState, useCallback, useMemo, useEffect } from 'react';
  const [record, setRecord] = useState<ChurchRecord>(() => {
  const [isLoading, setIsLoading] = useState(false);
  const [isSaving, setIsSaving] = useState(false);
  const [loadError, setLoadError] = useState<string | null>(null);
  const [saveError, setSaveError] = useState<string | null>(null);
  const [errors, setErrors] = useState<{ [fieldKey: string]: string }>({});
  const [showPreviewPane, setShowPreviewPane] = useState(showPreview);
  const [isDirty, setIsDirty] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      const loadedRecord = await recordService.fetchRecordById(recordType, recordId);

--- ROUTING ---
import { useNavigate, useParams } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 475
Component exports: 1

=== Component Analysis: ChurchAdminPanel ===
File: front-end/src/views/admin/ChurchAdminPanel.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useParams } from 'react-router-dom';
import {
import PageContainer from 'src/components/container/PageContainer';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: UserManagement ===
File: front-end/src/views/admin/UserManagement.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import UserFormModal from 'src/components/UserFormModal';
import { useAuth } from '../../context/AuthContext';
import { User as AuthUser } from '../../types/orthodox-metrics.types';
import userService, { User, Church, NewUser, UpdateUser, ResetPasswordData } from '../../services/userService';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [users, setUsers] = useState<User[]>([]);
    const [churches, setChurches] = useState<Church[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [modalOpen, setModalOpen] = useState(false);
    const [modalMode, setModalMode] = useState<'edit' | 'reset-password' | 'delete-confirm'>('edit');
    const [selectedUser, setSelectedUser] = useState<User | null>(null);
    const [modalLoading, setModalLoading] = useState(false);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 723
Component exports: 1

=== Component Analysis: UserManagement-Broken ===
File: front-end/src/views/admin/UserManagement-Broken.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [users, setUsers] = useState<User[]>([]);
    const [churches, setChurches] = useState<Church[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [editUserDialogOpen, setEditUserDialogOpen] = useState(false);
    const [deleteUserDialogOpen, setDeleteUserDialogOpen] = useState(false);
    const [viewUserDialogOpen, setViewUserDialogOpen] = useState(false);
    const [selectedUser, setSelectedUser] = useState<User | null>(null);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {

--- API INTEGRATION ---
            fetchUsers();
            fetchChurches();
    const fetchUsers = async () => {
            const response = await fetch('/api/admin/users', {
                throw new Error('Failed to fetch users');
            console.error('Error fetching users:', err);
    const fetchChurches = async () => {
            const response = await fetch('/api/admin/churches', {
                throw new Error('Failed to fetch churches');
            console.error('Error fetching churches:', err);
            const response = await fetch('/api/admin/users', {
                fetchUsers();
            const response = await fetch(`/api/admin/users/${selectedUser.id}`, {
                fetchUsers();
            const response = await fetch(`/api/admin/users/${selectedUser.id}`, {
                fetchUsers();
            const response = await fetch(`/api/admin/users/${userId}/toggle-status`, {
                fetchUsers();
            const response = await fetch('/api/auth/admin-reset-password', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 941
Component exports: 1

=== Component Analysis: OCXDataPanel ===
File: front-end/src/views/admin/OCXDataPanel.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import PageContainer from 'src/components/container/PageContainer';
import { OcrInterface } from 'src/components/ocr/OcrInterface';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: OCXDataPanel_new ===
File: front-end/src/views/admin/OCXDataPanel_new.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: ChurchAdminPanel ===
File: front-end/src/views/admin/ChurchAdminPanel.jsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: ChurchAdminList ===
File: front-end/src/views/admin/ChurchAdminList.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import {
import {
import { useAuth } from 'src/context/AuthContext';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [churches, setChurches] = useState<Church[]>([]);
    useEffect(() => {

--- API INTEGRATION ---
    const fetchChurches = async () => {
            const response = await fetch('/api/admin/churches', {
                throw new Error('Failed to fetch churches');
                throw new Error(result.message || 'Failed to fetch churches');
            console.error('Error fetching churches:', err);
        fetchChurches();
        fetchChurches();

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 241
Component exports: 1

=== Component Analysis: JITTerminalConsole ===
File: front-end/src/views/admin/JITTerminalConsole.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { JITTerminal } from '../../components/terminal/JITTerminal';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [sessions, setSessions] = useState<JITSession[]>([]);
  const [currentTab, setCurrentTab] = useState(0);
  const [isTerminalOpen, setIsTerminalOpen] = useState(false);
  const [selectedSessionId, setSelectedSessionId] = useState<string | null>(null);
  const [isAgentRequestOpen, setIsAgentRequestOpen] = useState(false);
  const [agentRequest, setAgentRequest] = useState<AgentAccessRequest>({
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [userRole, setUserRole] = useState<string>('');
  const [tokenLoading, setTokenLoading] = useState(false);
  const [tokenSuccess, setTokenSuccess] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
        const response = await fetch('/api/auth/profile');
    fetchSessions();
  const fetchSessions = async () => {
      const response = await fetch('/api/jit/sessions');
      console.error('Failed to fetch sessions:', error);
      const response = await fetch('/api/jit-terminal/agent-access', {
        fetchSessions();
      const response = await fetch(`/api/jit/sessions/${sessionId}`, {
        fetchSessions();
      const response = await fetch('/api/jit/token', {
            onClick={fetchSessions}
            fetchSessions();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 461
Component exports: 1

=== Component Analysis: OCRDataPanel ===
File: front-end/src/views/admin/OCRDataPanel.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { OcrInterface } from '../../components/ocr/OcrInterface';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: UserManagement_Enhanced ===
File: front-end/src/views/admin/UserManagement_Enhanced.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import UserFormModal from 'src/components/UserFormModal';
import { useAuth } from '../../context/AuthContext';
import userService, { User, Church, NewUser, UpdateUser, ResetPasswordData } from '../../services/userService';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [users, setUsers] = useState<User[]>([]);
    const [churches, setChurches] = useState<Church[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [modalOpen, setModalOpen] = useState(false);
    const [modalMode, setModalMode] = useState<'edit' | 'reset-password' | 'delete-confirm'>('edit');
    const [selectedUser, setSelectedUser] = useState<User | null>(null);
    const [modalLoading, setModalLoading] = useState(false);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 674
Component exports: 1

=== Component Analysis: AdminLogs ===
File: front-end/src/views/admin/AdminLogs.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Alert, Card, CardContent } from '@mui/material';
import { IconFileDescription } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: MenuPermissions ===
File: front-end/src/views/admin/MenuPermissions.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [menuData, setMenuData] = useState<MenuPermissionsState>({
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [editDialogOpen, setEditDialogOpen] = useState(false);
    const [createDialogOpen, setCreateDialogOpen] = useState(false);
    const [selectedMenuItem, setSelectedMenuItem] = useState<MenuItemPermission | null>(null);
    const [newMenuItem, setNewMenuItem] = useState({
    useEffect(() => {

--- API INTEGRATION ---
            const response = await fetch('/api/menu-permissions', {
            const response = await fetch(`/api/menu-permissions/${menuId}`, {
            const response = await fetch('/api/menu-permissions/menu-item', {

--- ROUTING ---
                            helperText="Route path (e.g., /admin/users)"

--- METRICS ---
Lines of code: 461
Component exports: 1

=== Component Analysis: RoleManagement ===
File: front-end/src/views/admin/RoleManagement.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Alert, Card, CardContent } from '@mui/material';
import { IconShield } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: MenuManagement ===
File: front-end/src/views/admin/MenuManagement.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [menuItems, setMenuItems] = useState<MenuItem[]>([]);
    const [loading, setLoading] = useState(true);
    const [saving, setSaving] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [pendingChanges, setPendingChanges] = useState<any[]>([]);
    useEffect(() => {

--- API INTEGRATION ---
        fetchMenuPermissions();
    const fetchMenuPermissions = async () => {
            const response = await fetch('/api/menu-management/permissions', {
                setError(data.message || 'Failed to fetch menu permissions');
            console.error('Error fetching menu permissions:', err);
            const response = await fetch('/api/menu-management/permissions', {
                    fetchMenuPermissions();
                        onClick={fetchMenuPermissions}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 352
Component exports: 1

=== Component Analysis: UserManagement_Fixed ===
File: front-end/src/views/admin/UserManagement_Fixed.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import UserFormModal from 'src/components/UserFormModal';
import { useAuth } from '../../context/AuthContext';
import userService, { User, Church, NewUser, UpdateUser, ResetPasswordData } from '../../services/userService';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [users, setUsers] = useState<User[]>([]);
    const [churches, setChurches] = useState<Church[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [modalOpen, setModalOpen] = useState(false);
    const [modalMode, setModalMode] = useState<'edit' | 'reset-password' | 'delete-confirm'>('edit');
    const [selectedUser, setSelectedUser] = useState<User | null>(null);
    const [modalLoading, setModalLoading] = useState(false);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 659
Component exports: 1

=== Component Analysis: OrthodoxMetricsAdmin ===
File: front-end/src/views/admin/OrthodoxMetricsAdmin.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import {
import {
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { format, formatDistanceToNow } from 'date-fns';
import { devLogDataShape, devLogApiResponse, devLogStateChange } from '../../utils/devLogger';
import { adminAPI } from '../../api/admin.api';

--- PROPS/INTERFACES ---
interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function TabPanel({ children, value, index, ...other }: TabPanelProps) {
    return (
        <div
            role="tabpanel"
            hidden={value !== index}

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [currentTab, setCurrentTab] = useState(0);
    const [selectedClient, setSelectedClient] = useState<any>(null);
    const [showClientDialog, setShowClientDialog] = useState(false);
    const [showBackupDialog, setShowBackupDialog] = useState(false);
    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
    const [actionClientId, setActionClientId] = useState<string>('');
    useEffect(() => {

--- API INTEGRATION ---
    const { data: clients = [], isLoading: clientsLoading, refetch: refetchClients } = useQuery({
        queryFn: adminAPI.clients.getAll,
        refetchInterval: 30000, // Refresh every 30 seconds
        queryFn: adminAPI.system.getSystemStats,
        refetchInterval: 15000, // Refresh every 15 seconds
        queryFn: adminAPI.system.getDatabaseHealth,
        refetchInterval: 20000, // Refresh every 20 seconds
        queryFn: adminAPI.system.getServerMetrics,
        refetchInterval: 10000, // Refresh every 10 seconds
        queryFn: adminAPI.system.getBackups,
        refetchInterval: 60000, // Refresh every minute
        queryFn: adminAPI.metrics.getOrthodoxMetrics,
        refetchInterval: 30000, // Refresh every 30 seconds
            adminAPI.clients.update(Number(clientId), { status }),
        mutationFn: (clientId: string) => adminAPI.clients.testConnection(Number(clientId)),
        mutationFn: adminAPI.backup.run,
                                            onClick={() => refetchClients()}
                            {saasMetricsError.message || 'An unexpected error occurred while fetching metrics data.'}

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 822
Component exports: 1

=== Component Analysis: ChurchAdminPanelWorking ===
File: front-end/src/views/admin/ChurchAdminPanelWorking.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import PageContainer from 'src/components/container/PageContainer';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [churchData, setChurchData] = useState<ChurchData | null>(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    useEffect(() => {

--- API INTEGRATION ---
            const response = await fetch(`/api/admin/church/${churchId}/overview`, {

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 191
Component exports: 1

=== Component Analysis: UserManagement-Fixed ===
File: front-end/src/views/admin/UserManagement-Fixed.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [users, setUsers] = useState<User[]>([]);
    const [churches, setChurches] = useState<Church[]>([]);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [editUserDialogOpen, setEditUserDialogOpen] = useState(false);
    const [deleteUserDialogOpen, setDeleteUserDialogOpen] = useState(false);
    const [viewUserDialogOpen, setViewUserDialogOpen] = useState(false);
    const [selectedUser, setSelectedUser] = useState<User | null>(null);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {

--- API INTEGRATION ---
            fetchUsers();
            fetchChurches();
    const fetchUsers = async () => {
            const response = await fetch('/api/admin/users', {
                throw new Error('Failed to fetch users');
            console.error('Error fetching users:', err);
    const fetchChurches = async () => {
            const response = await fetch('/api/admin/churches', {
                throw new Error('Failed to fetch churches');
            console.error('Error fetching churches:', err);
            const response = await fetch('/api/admin/users', {
                fetchUsers();
            const response = await fetch('/api/admin/users/reset-password', {
            const response = await fetch(`/api/admin/users/${userId}/toggle-status`, {
                fetchUsers();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 627
Component exports: 1

=== Component Analysis: UserManagement_corrupted ===
File: front-end/src/views/admin/UserManagement_corrupted.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import UserFormModal from 'src/components/UserFormModal';
import { useAuth } from '../../context/AuthContext';
import userService, { User, Church, NewUser, UpdateUser, ResetPasswordData } from '../../services/userService';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [users, setUsers] = useState<User[]>([]);
    const [churches, setChurches] = useState<Church[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [modalOpen, setModalOpen] = useState(false);
    const [modalMode, setModalMode] = useState<'edit' | 'reset-password' | 'delete-confirm'>('edit');
    const [selectedUser, setSelectedUser] = useState<User | null>(null);
    const [modalLoading, setModalLoading] = useState(false);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {

--- API INTEGRATION ---
            fetchUsers();
            fetchChurches();
    const fetchUsers = async () => {
            const response = await fetch('/api/admin/users', {
                throw new Error('Failed to fetch users');
            console.error('Error fetching users:', err);
    const fetchChurches = async () => {
            const response = await fetch('/api/admin/churches', {
                throw new Error('Failed to fetch churches');
            console.error('Error fetching churches:', err);
            const response = await fetch('/api/admin/users', {
                fetchUsers();
            const response = await fetch('/api/admin/users/reset-password', {
            const response = await fetch(`/api/admin/users/${userId}/toggle-status`, {
                fetchUsers();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1166
Component exports: 2

=== Component Analysis: SimpleOCRPanel ===
File: front-end/src/views/admin/SimpleOCRPanel.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { CloudUpload } from '@mui/icons-material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 50
Component exports: 1

=== Component Analysis: RecordTemplateManager ===
File: front-end/src/views/admin/RecordTemplateManager.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { templateService } from '../../services/templateService';

--- PROPS/INTERFACES ---
interface RecordTemplateManagerProps {
  currentChurch?: Church;
  isGlobalAdmin?: boolean;
}

const RecordTemplateManager: React.FC<RecordTemplateManagerProps> = ({
  currentChurch,
  isGlobalAdmin = false
}) => {
  const [templates, setTemplates] = useState<Template[]>([]);
  const [globalTemplates, setGlobalTemplates] = useState<Template[]>([]);

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [templates, setTemplates] = useState<Template[]>([]);
  const [globalTemplates, setGlobalTemplates] = useState<Template[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [currentTab, setCurrentTab] = useState(0);
  const [createDialogOpen, setCreateDialogOpen] = useState(false);
  const [editDialogOpen, setEditDialogOpen] = useState(false);
  const [duplicateDialogOpen, setDuplicateDialogOpen] = useState(false);
  const [templateName, setTemplateName] = useState('');
  const [recordType, setRecordType] = useState('custom');
  const [description, setDescription] = useState('');
  const [fields, setFields] = useState<Field[]>([{ field: '', label: '', type: 'string' }]);
  const [includeGlobal, setIncludeGlobal] = useState(true);
  const [selectedTemplate, setSelectedTemplate] = useState<Template | null>(null);
  const [selectedGlobalTemplate, setSelectedGlobalTemplate] = useState<string>('');
  const [newTemplateName, setNewTemplateName] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 663
Component exports: 1

=== Component Analysis: UserManagement ===
File: front-end/src/views/admin/tabs/UserManagement.tsx
Date: Wed Jul 30 12:59:49 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [viewMode, setViewMode] = useState<'list' | 'details' | 'icons' | 'large-icons'>('list');
    const [users, setUsers] = useState<User[]>(mockUsers);
    const [searchTerm, setSearchTerm] = useState('');
    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
    const [selectedUser, setSelectedUser] = useState<string | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 406
Component exports: 1

=== Component Analysis: RoleManagement ===
File: front-end/src/views/admin/tabs/RoleManagement.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [roles, setRoles] = useState<Role[]>(mockRoles);
    const [selectedRole, setSelectedRole] = useState<string | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 317
Component exports: 1

=== Component Analysis: MenuManagement ===
File: front-end/src/views/admin/tabs/MenuManagement.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [menuItems, setMenuItems] = useState<MenuItem[]>(mockMenuItems);
    const [editDialog, setEditDialog] = useState<{
    const [expandedItems, setExpandedItems] = useState<string[]>(['admin', 'churches']);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 584
Component exports: 1

=== Component Analysis: SessionManagement ===
File: front-end/src/views/admin/tabs/SessionManagement.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [sessions, setSessions] = useState<Session[]>(mockSessions);
    const [searchTerm, setSearchTerm] = useState('');
    const [confirmDialog, setConfirmDialog] = useState<{

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 412
Component exports: 1

=== Component Analysis: AdminSettings ===
File: front-end/src/views/admin/AdminSettings.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import BackupSettings from '../settings/BackupSettings';
import ContentSettings from '../settings/ContentSettings';
import ServiceManagement from '../settings/ServiceManagement';
import NotificationManagement from '../../components/admin/NotificationManagement';
import OMBigBook from '../../components/admin/OMBigBook';
import ComponentManager from './components/ComponentManager';
import OMAITaskAssignmentWidget from '../../components/admin/OMAITaskAssignmentWidget';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import { 

--- PROPS/INTERFACES ---
interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function TabPanel(props: TabPanelProps) {
    const { children, value, index, ...other } = props;

    return (
        <div

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [tabValue, setTabValue] = useState(0);
    const [systemInfo, setSystemInfo] = useState<SystemInfo | null>(null);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    useEffect(() => {

--- API INTEGRATION ---
            fetchSystemInfo();
    const fetchSystemInfo = async () => {
            console.error('Error fetching system info:', err);
                                <Button color="inherit" size="small" onClick={fetchSystemInfo}>
                                                onClick={fetchSystemInfo}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 518
Component exports: 1

=== Component Analysis: ComponentManager ===
File: front-end/src/views/admin/components/ComponentManager.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
import {
import {
import { 
import { useAuth } from '../../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
    const [componentsData, setComponentsData] = useState<ComponentsResponse | null>(null);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);
    const [filters, setFilters] = useState<ComponentFilters>({
    const [searchTerm, setSearchTerm] = useState<string>('');
    const [categoryTab, setCategoryTab] = useState<string>('all');
    const [logsDialogOpen, setLogsDialogOpen] = useState<boolean>(false);
    const [selectedComponentLogs, setSelectedComponentLogs] = useState<ComponentLog[]>([]);
    const [selectedComponentName, setSelectedComponentName] = useState<string>('');
    const [toggleConfirmDialog, setToggleConfirmDialog] = useState<{
    const [actionLoading, setActionLoading] = useState<{ [componentId: string]: boolean }>({});
    const [toastOpen, setToastOpen] = useState<boolean>(false);
    const [toastMessage, setToastMessage] = useState<string>('');
    const [toastSeverity, setToastSeverity] = useState<'success' | 'error' | 'info' | 'warning'>('success');
    const [testResultDialog, setTestResultDialog] = useState<{
    useEffect(() => {

--- API INTEGRATION ---
 * - GET /api/admin/components/:id/logs (fetch component logs)
        fetchComponents();
                    const logsResponse = await componentsAPI.getLogs(component.id);
    const fetchComponents = async (newFilters?: Partial<ComponentFilters>) => {
            const data = await componentsAPI.getAll(currentFilters);
            console.log('Components fetched:', data);
            console.error('Error fetching components:', err);
                errorMessage = 'Network error: Unable to connect to the component management API. Please check your connection.';
                'Failed to load components from backend API. Please check the API status or contact support.',
            await componentsAPI.toggle(component.id, newState);
            const logsResponse = await componentsAPI.getLogs(component.id, 100);
            console.error('Error fetching logs:', err);
            const errorMessage = err.response?.data?.message || err.message || 'Failed to fetch logs';
            // Handle logs fetch error
            const testResult = await componentsAPI.runTest(component.id);
                    const logsResponse = await componentsAPI.getLogs(component.id);
                    console.error(`Failed to fetch logs for ${component.name}:`, err);
        fetchComponents({ category: category === 'all' ? 'all' : category, page: 1 });
        fetchComponents({ page });
                    fetchComponents({ search: value, page: 1 });
        [fetchComponents]
        fetchComponents({ [filterType]: value, page: 1 });
                        onClick={fetchComponents}
                    <Button color="inherit" size="small" onClick={fetchComponents}>

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1744
Component exports: 29

=== Component Analysis: OMSiteSurvey ===
File: front-end/src/views/admin/tools/OMSiteSurvey.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../../context/AuthContext';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [tabValue, setTabValue] = useState(0);
  const [surveyRunning, setSurveyRunning] = useState(false);
  const [progress, setProgress] = useState(0);
  const [filesystemData, setFilesystemData] = useState<any>(null);
  const [menuData, setMenuData] = useState<any>(null);
  const [roleData, setRoleData] = useState<any>(null);
  const [crawlerData, setCrawlerData] = useState<any>(null);
  const [databaseData, setDatabaseData] = useState<any>(null);

--- API INTEGRATION ---
          const response = await fetch(step.endpoint, {

--- ROUTING ---
                label={`Orphaned Routes: ${data.summary.orphanedRoutes}`} 
                    <TableCell>Route</TableCell>

--- METRICS ---
Lines of code: 591
Component exports: 6

=== Component Analysis: PageEditor ===
File: front-end/src/views/admin/tools/PageEditor.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {
import ReactQuill from 'react-quill';
import 'react-quill/dist/quill.snow.css';
import axios from 'axios';
import { useAuth } from '../../../context/AuthContext';

--- PROPS/INTERFACES ---
interface PageEditorProps {
  slug?: string;
  contentType?: 'page' | 'blog';
  onSave?: (data: PageData | BlogData) => void;
}

const PageEditor: React.FC<PageEditorProps> = ({ 
  slug = 'new-page', 
  contentType: initialContentType = 'page',
  onSave 
}) => {

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [contentType, setContentType] = useState<'page' | 'blog'>(initialContentType);
  const [activeTab, setActiveTab] = useState(0);
  const [pageData, setPageData] = useState<PageData>({
  const [blogData, setBlogData] = useState<BlogData>({
  const [images, setImages] = useState<ImageItem[]>([]);
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [uploading, setUploading] = useState(false);
  const [imageDialogOpen, setImageDialogOpen] = useState(false);
  const [previewMode, setPreviewMode] = useState(false);
  const [notification, setNotification] = useState<{
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.get(endpoint);
      const response = await axios.get('/api/uploads/list');
      await axios.put(endpoint, currentData);
      const response = await axios.put(endpoint, currentData);
      const response = await axios.post('/api/uploads/image', formData, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 672
Component exports: 1

=== Component Analysis: UserManagement_backup ===
File: front-end/src/views/admin/UserManagement_backup.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import UserFormModal from 'src/components/UserFormModal';
import { useAuth } from '../../context/AuthContext';
import userService, { User, Church, NewUser, UpdateUser, ResetPasswordData } from '../../services/userService';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [users, setUsers] = useState<User[]>([]);
    const [churches, setChurches] = useState<Church[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [modalOpen, setModalOpen] = useState(false);
    const [modalMode, setModalMode] = useState<'edit' | 'reset-password' | 'delete-confirm'>('edit');
    const [selectedUser, setSelectedUser] = useState<User | null>(null);
    const [modalLoading, setModalLoading] = useState(false);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {
    const [page, setPage] = useState(0);
    const [rowsPerPage, setRowsPerPage] = useState(10);
    const [searchTerm, setSearchTerm] = useState('');
    const [roleFilter, setRoleFilter] = useState('all');
    const [churchFilter, setChurchFilter] = useState('all');
    const [activeFilter, setActiveFilter] = useState('all');
    const [tabValue, setTabValue] = useState(0);
    const [createUserDialogOpen, setCreateUserDialogOpen] = useState(false);
    const [newUser, setNewUser] = useState<NewUser>({
    useEffect(() => {

--- API INTEGRATION ---
            fetchUsers();
            fetchChurches();
    const fetchUsers = async () => {
            const response = await fetch('/api/admin/users', {
                throw new Error('Failed to fetch users');
            console.error('Error fetching users:', err);
    const fetchChurches = async () => {
            const response = await fetch('/api/admin/churches', {
                throw new Error('Failed to fetch churches');
            console.error('Error fetching churches:', err);
            const response = await fetch('/api/admin/users', {
                fetchUsers();
            const response = await fetch('/api/admin/users/reset-password', {
            const response = await fetch(`/api/admin/users/${userId}/toggle-status`, {
                fetchUsers();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1165
Component exports: 2

=== Component Analysis: BlogAdmin ===
File: front-end/src/views/admin/BlogAdmin.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import axios from 'axios';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [posts, setPosts] = useState<BlogPost[]>([]);
  const [stats, setStats] = useState<BlogStats>({ total: 0, published: 0, drafts: 0, archived: 0 });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);
  const [selectedPost, setSelectedPost] = useState<BlogPost | null>(null);
  const [actionMenuAnchor, setActionMenuAnchor] = useState<null | HTMLElement>(null);
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.get(`/api/blogs/author/${user?.id}`);
      await axios.delete(`/api/blogs/${selectedPost.slug}`);

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 421
Component exports: 1

=== Component Analysis: SessionManagement ===
File: front-end/src/views/admin/SessionManagement.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import { adminAPI } from '../../api/admin.api';
import { userAPI } from '../../api/user.api';
import { metricsAPI } from '../../api/metrics.api';
import PageContainer from '../../components/container/PageContainer';
import DashboardCard from '../../components/shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [sessions, setSessions] = useState<SessionData[]>([]);
  const [stats, setStats] = useState<SessionStats | null>(null);
  const [loading, setLoading] = useState(true);
  const [search, setSearch] = useState('');
  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'expired'>('all');
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [terminateDialog, setTerminateDialog] = useState<{ open: boolean; session: SessionData | null }>({
  const [lockoutDialog, setLockoutDialog] = useState<{ open: boolean; session: SessionData | null }>({
  const [terminateAllDialog, setTerminateAllDialog] = useState<{ open: boolean; session: SessionData | null }>({
  const [cleanupDialog, setCleanupDialog] = useState(false);
  const [killAllDialog, setKillAllDialog] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');
  const [errorMessage, setErrorMessage] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
  const fetchSessions = async () => {
      const response = await userAPI.sessions.getAll(filters);
      console.error('Failed to fetch sessions:', error);
  const fetchStats = async () => {
      const response = await userAPI.sessions.getStats();
      console.error('Failed to fetch session stats:', error);
      await userAPI.sessions.terminate(session.session_id);
      fetchSessions();
      fetchStats();
        await userAPI.sessions.terminate(session.session_id);
      await adminAPI.users.lockout(session.user_id);
      fetchSessions();
      fetchStats();
      await userAPI.sessions.terminateAllForUser(session.user_id);
      fetchSessions();
      fetchStats();
      const response = await userAPI.sessions.cleanup(7);
      fetchSessions();
      fetchStats();
      const response = await userAPI.sessions.terminateAll();
      fetchSessions();
      fetchStats();
    fetchSessions();
    fetchStats();
                fetchSessions();
                fetchStats();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 687
Component exports: 1

=== Component Analysis: ChurchAdminPanelTest ===
File: front-end/src/views/admin/ChurchAdminPanelTest.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 13
Component exports: 1

=== Component Analysis: AccessControlDashboard ===
File: front-end/src/views/admin/AccessControlDashboard.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import PageContainer from 'src/components/container/PageContainer';
import { useAuth } from 'src/context/AuthContext';
import {
import UserManagement from './tabs/UserManagement';
import RoleManagement from './tabs/RoleManagement';
import SessionManagement from './tabs/SessionManagement';
import MenuManagement from './tabs/MenuManagement';

--- PROPS/INTERFACES ---
interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

function TabPanel(props: TabPanelProps) {
    const { children, value, index, ...other } = props;

    return (
        <div

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [tabValue, setTabValue] = useState(1); // Default to User Management (index 1)

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 162
Component exports: 1

=== Component Analysis: ActivityLogs ===
File: front-end/src/views/admin/ActivityLogs.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import { adminAPI } from '../../api/admin.api';
import { userAPI } from '../../api/user.api';
import { metricsAPI } from '../../api/metrics.api';
import PageContainer from '../../components/container/PageContainer';
import DashboardCard from '../../components/shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activities, setActivities] = useState<ActivityLogData[]>([]);
  const [stats, setStats] = useState<ActivityLogStats | null>(null);
  const [topActions, setTopActions] = useState<Array<{ action: string; count: number }>>([]);
  const [loading, setLoading] = useState(true);
  const [search, setSearch] = useState('');
  const [actionFilter, setActionFilter] = useState('');
  const [userFilter, setUserFilter] = useState('');
  const [dateFrom, setDateFrom] = useState('');
  const [dateTo, setDateTo] = useState('');
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [selectedActivity, setSelectedActivity] = useState<ActivityLogData | null>(null);
  const [viewDialog, setViewDialog] = useState(false);
  const [cleanupDialog, setCleanupDialog] = useState(false);
  const [cleanupDays, setCleanupDays] = useState(90);
  const [successMessage, setSuccessMessage] = useState('');
  const [errorMessage, setErrorMessage] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
  const fetchActivities = async () => {
      const response = await adminAPI.activityLogs.getAll(filters);
      console.error('Failed to fetch activity logs:', error);
    fetchActivities();
    fetchActivities();
      const detailedActivity = await adminAPI.activityLogs.getById(activity.id);
      console.error('Failed to fetch activity details:', error);
      const response = await adminAPI.activityLogs.cleanup(cleanupDays);
      fetchActivities();
              onClick={fetchActivities}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 691
Component exports: 1

=== Component Analysis: Contact ===
File: front-end/src/views/pages/frontend-pages/Contact.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import PageContainer from 'src/components/container/PageContainer';
import HeaderAlert from '../../../components/frontend-pages/shared/header/HeaderAlert';
import HpHeader from '../../../components/frontend-pages/shared/header/HpHeader';
import C2a from '../../../components/frontend-pages/shared/c2a';
import Footer from '../../../components/frontend-pages/shared/footer';
import Banner from '../../../components/frontend-pages/contact/banner';
import Form from '../../../components/frontend-pages/contact/form';
import ScrollToTop from '../../../components/frontend-pages/shared/scroll-to-top';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: Pricing ===
File: front-end/src/views/pages/frontend-pages/Pricing.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import PageContainer from 'src/components/container/PageContainer';
import HeaderAlert from '../../../components/frontend-pages/shared/header/HeaderAlert';
import HpHeader from '../../../components/frontend-pages/shared/header/HpHeader';
import Pricing from '../../../components/frontend-pages/shared/pricing';
import C2a from '../../../components/frontend-pages/shared/c2a';
import Footer from '../../../components/frontend-pages/shared/footer';
import Banner from '../../../components/frontend-pages/pricing/Banner';
import ScrollToTop from '../../../components/frontend-pages/shared/scroll-to-top';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: OrthodoxMetricsDemo ===
File: front-end/src/views/pages/frontend-pages/OrthodoxMetricsDemo.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [currentStep, setCurrentStep] = useState(1);
  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);
  const [isProcessing, setIsProcessing] = useState(false);
  const [processingComplete, setProcessingComplete] = useState(false);
  const [activeTab, setActiveTab] = useState<'baptism' | 'marriage' | 'funeral'>('baptism');
  const [baptismData, setBaptismData] = useState(baptismRecords);
  const [marriageData, setMarriageData] = useState(marriageRecords);
  const [funeralData, setFuneralData] = useState(funeralRecords);
  const [allApproved, setAllApproved] = useState(false);
  const [showConfetti, setShowConfetti] = useState(false);
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [isTypingEmail, setIsTypingEmail] = useState(false);
  const [isTypingPassword, setIsTypingPassword] = useState(false);
  const [isSigningIn, setIsSigningIn] = useState(false);
  const [isSignedIn, setIsSignedIn] = useState(false);
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 845
Component exports: 1

=== Component Analysis: Blog ===
File: front-end/src/views/pages/frontend-pages/Blog.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import PageContainer from 'src/components/container/PageContainer';
import HeaderAlert from '../../../components/frontend-pages/shared/header/HeaderAlert';
import HpHeader from '../../../components/frontend-pages/shared/header/HpHeader';
import C2a from '../../../components/frontend-pages/shared/c2a';
import Footer from '../../../components/frontend-pages/shared/footer';
import Banner from '../../../components/frontend-pages/blog/banner';
import ScrollToTop from '../../../components/frontend-pages/shared/scroll-to-top';
import BlogListing from 'src/components/apps/blog/BlogListing';
import { Container } from '@mui/system';
import { BlogProvider } from 'src/context/BlogContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: Portfolio ===
File: front-end/src/views/pages/frontend-pages/Portfolio.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import PageContainer from 'src/components/container/PageContainer';
import HeaderAlert from '../../../components/frontend-pages/shared/header/HeaderAlert';
import HpHeader from '../../../components/frontend-pages/shared/header/HpHeader';
import C2a from '../../../components/frontend-pages/shared/c2a';
import Footer from '../../../components/frontend-pages/shared/footer';
import Banner from '../../../components/frontend-pages/portfolio/Banner';
import ScrollToTop from '../../../components/frontend-pages/shared/scroll-to-top';
import GalleryCard from '../../../components/apps/userprofile/gallery/GalleryCard';
import { Box, Container } from '@mui/material';
import { UserDataProvider } from "src/context/UserDataContext/index";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: About ===
File: front-end/src/views/pages/frontend-pages/About.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import PageContainer from 'src/components/container/PageContainer';
import HeaderAlert from '../../../components/frontend-pages/shared/header/HeaderAlert';
import HpHeader from '../../../components/frontend-pages/shared/header/HpHeader';
import Leadership from '../../../components/frontend-pages/shared/leadership';
import Reviews from '../../../components/frontend-pages/shared/reviews';
import Pricing from '../../../components/frontend-pages/shared/pricing';
import C2a from '../../../components/frontend-pages/shared/c2a';
import Footer from '../../../components/frontend-pages/shared/footer';
import Banner from '../../../components/frontend-pages/about/banner';
import Process from '../../../components/frontend-pages/about/process';
import KeyMetric from '../../../components/frontend-pages/about/key-metric';
import ScrollToTop from '../../../components/frontend-pages/shared/scroll-to-top';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: BlogPost ===
File: front-end/src/views/pages/frontend-pages/BlogPost.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import PageContainer from 'src/components/container/PageContainer';
import HeaderAlert from '../../../components/frontend-pages/shared/header/HeaderAlert';
import HpHeader from '../../../components/frontend-pages/shared/header/HpHeader';
import C2a from '../../../components/frontend-pages/shared/c2a';
import Footer from '../../../components/frontend-pages/shared/footer';
import Banner from '../../../components/frontend-pages/blog/banner';
import ScrollToTop from '../../../components/frontend-pages/shared/scroll-to-top';
import BlogDetail from 'src/components/apps/blog/detail/BlogDetail';
import { Container } from '@mui/system';
import { BlogProvider } from 'src/context/BlogContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 30
Component exports: 1

=== Component Analysis: Homepage ===
File: front-end/src/views/pages/frontend-pages/Homepage.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useAuth } from '../../../context/AuthContext';
import { useNavigate } from 'react-router-dom';
import {
import Grid from '@mui/material/Grid';
import {
import { styled } from '@mui/material/styles';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [currentLanguage, setCurrentLanguage] = useState(0);
  const [activeTab, setActiveTab] = useState('Baptism');
  const [openFAQ, setOpenFAQ] = useState<number | null>(null);
  const [isProcessing, setIsProcessing] = useState(false);
  const [processingComplete, setProcessingComplete] = useState(false);
  const [showOriginalImages, setShowOriginalImages] = useState(true);
  const [loginLoading, setLoginLoading] = useState(false);
  const [loginError, setLoginError] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 2146
Component exports: 4

=== Component Analysis: Pricing ===
File: front-end/src/views/pages/pricing/Pricing.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { useTheme } from '@mui/material/styles';
import { styled } from '@mui/material/styles';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { IconCheck, IconX } from '@tabler/icons-react';
import BlankCard from '../../../components/shared/BlankCard';
import pck1 from 'src/assets/images/backgrounds/silver.png';
import pck2 from 'src/assets/images/backgrounds/bronze.png';
import pck3 from 'src/assets/images/backgrounds/gold.png';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [show, setShow] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 300
Component exports: 1

=== Component Analysis: AccountSetting ===
File: front-end/src/views/pages/account-setting/AccountSetting.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import { Grid, Tabs, Tab, Box, CardContent, Divider } from '@mui/material';
import AccountTab from '../../../components/pages/account-setting/AccountTab';
import { IconArticle, IconBell, IconLock, IconUserCircle } from '@tabler/icons-react';
import BlankCard from '../../../components/shared/BlankCard';
import NotificationTab from '../../../components/pages/account-setting/NotificationTab';
import BillsTab from '../../../components/pages/account-setting/BillsTab';
import SecurityTab from '../../../components/pages/account-setting/SecurityTab';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState(0);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 129
Component exports: 1

=== Component Analysis: Faq ===
File: front-end/src/views/pages/faq/Faq.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import { Grid } from '@mui/material';
import Questions from '../../../components/pages/faq/Questions';
import StillQuestions from '../../../components/pages/faq/StillQuestions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: Landingpage ===
File: front-end/src/views/pages/landingpage/Landingpage.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import PageContainer from 'src/components/container/PageContainer';
import Banner from '../../../components/landingpage/banner/Banner';
import C2a from '../../../components/landingpage/c2a/C2a';
import C2a2 from '../../../components/landingpage/c2a/C2a2';
import DemoSlider from '../../../components/landingpage/demo-slider/DemoSlider';
import Features from '../../../components/landingpage/features/Features';
import Footer from '../../../components/landingpage/footer/Footer';
import Frameworks from '../../../components/landingpage/frameworks/Frameworks';
import LpHeader from '../../../components/landingpage/header/Header';
import Testimonial from '../../../components/landingpage/testimonial/Testimonial';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: RollbaseCASL ===
File: front-end/src/views/pages/rollbaseCASL/RollbaseCASL.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { defineAbility } from '@casl/ability';
import { Can } from '@casl/react';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Box, Button, List, ListItem, Stack } from '@mui/material';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [userId, setUserId] = React.useState(Object.keys(users)[0]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 163
Component exports: 1

=== Component Analysis: PaginationTable ===
File: front-end/src/views/tables/PaginationTable.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import { useTheme } from '@mui/material/styles';
import {
import FirstPageIcon from '@mui/icons-material/FirstPage';
import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
import LastPageIcon from '@mui/icons-material/LastPage';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-5.jpg';
import ParentCard from 'src/components/shared/ParentCard';
import BlankCard from '../../components/shared/BlankCard';

--- PROPS/INTERFACES ---
interface TablePaginationActionsProps {
  count: number;
  page: number;
  rowsPerPage: number;
  onPageChange: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;
}

function TablePaginationActions(props: TablePaginationActionsProps) {
  const theme = useTheme();
  const { count, page, rowsPerPage, onPageChange } = props;


--- STATE MANAGEMENT ---
  const [page, setPage] = React.useState(0);
  const [rowsPerPage, setRowsPerPage] = React.useState(5);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 366
Component exports: 1

=== Component Analysis: EnhanceTable ===
File: front-end/src/views/tables/EnhanceTable.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { alpha } from '@mui/material/styles';
import {
import { visuallyHidden } from '@mui/utils';
import CustomCheckbox from 'src/components/forms/theme-elements/CustomCheckbox';
import CustomSwitch from 'src/components/forms/theme-elements/CustomSwitch';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import { IconTrash, IconFilter } from '@tabler/icons-react';
import { EnhancedTableData, EnTableType } from 'src/components/tables/tableData';
import BlankCard from '../../components/shared/BlankCard';

--- PROPS/INTERFACES ---
interface EnhancedTableProps {
  numSelected: number;
  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof []) => void;
  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;
  order: Order;
  orderBy: string;
  rowCount: number;
}

function EnhancedTableHead(props: EnhancedTableProps) {
  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;
--
interface EnhancedTableToolbarProps {
  numSelected: number;
}

function EnhancedTableToolbar(props: EnhancedTableToolbarProps) {
  const { numSelected } = props;

  return (
    <Toolbar
      sx={{
        pl: { sm: 2 },

--- STATE MANAGEMENT ---
  const [order, setOrder] = React.useState<Order>('asc');
  const [orderBy, setOrderBy] = React.useState<any>('calories');
  const [selected, setSelected] = React.useState<readonly string[]>([]);
  const [page, setPage] = React.useState(0);
  const [dense, setDense] = React.useState(false);
  const [rowsPerPage, setRowsPerPage] = React.useState(5);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 455
Component exports: 1

=== Component Analysis: SearchTable ===
File: front-end/src/views/tables/SearchTable.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import { Box } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ProductTableList from 'src/components/apps/ecommerce/ProductTableList/ProductTableList';
import { ProductProvider } from 'src/context/EcommerceContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: BasicTable ===
File: front-end/src/views/tables/BasicTable.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import Table2 from '../../components/tables/Table2';
import Table3 from '../../components/tables/Table3';
import Table1 from '../../components/tables/Table1';
import Table4 from '../../components/tables/Table4';
import Table5 from '../../components/tables/Table5';
import BasicTableCode from 'src/components/tables/code/BasicTableCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: FixedHeaderTable ===
File: front-end/src/views/tables/FixedHeaderTable.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import img1 from 'src/assets/images/products/s1.jpg';
import img2 from 'src/assets/images/products/s2.jpg';
import img3 from 'src/assets/images/products/s3.jpg';
import img4 from 'src/assets/images/products/s4.jpg';
import ParentCard from 'src/components/shared/ParentCard';
import BlankCard from 'src/components/shared/BlankCard';
import { IconTrash } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 209
Component exports: 1

=== Component Analysis: CollapsibleTable ===
File: front-end/src/views/tables/CollapsibleTable.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import BlankCard from 'src/components/shared/BlankCard';
import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
import img1 from 'src/assets/images/products/s1.jpg';
import img2 from 'src/assets/images/products/s2.jpg';
import img3 from 'src/assets/images/products/s3.jpg';
import img4 from 'src/assets/images/products/s4.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 246
Component exports: 1

=== Component Analysis: OrthodoxCalendar ===
File: front-end/src/views/orthodox-calendar/OrthodoxCalendar.jsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { FaCalendarDay, FaChurch, FaBookOpen, FaCross, FaStar } from 'react-icons/fa';
import axios from 'axios';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [currentDate, setCurrentDate] = useState(new Date());
  const [selectedDate, setSelectedDate] = useState(new Date());
  const [todayData, setTodayData] = useState(null);
  const [monthData, setMonthData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [view, setView] = useState('today'); // 'today' or 'month'
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.get('/api/liturgical-calendar/today');
      const response = await axios.get(`/api/liturgical-calendar/month/${year}/${month}`);
      const response = await axios.get(`/api/liturgical-calendar/date/${dateStr}`);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 356
Component exports: 1

=== Component Analysis: CandlestickChart ===
File: front-end/src/views/charts/CandlestickChart.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import PageContainer from '../../components/container/PageContainer';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import ParentCard from '../../components/shared/ParentCard';
import { Props } from 'react-apexcharts';
import CandlestickChartCode from 'src/components/charts/Candlestick Chart/code/CandlestickChartCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 147
Component exports: 1

=== Component Analysis: RadialbarChart ===
File: front-end/src/views/charts/RadialbarChart.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { Grid } from '@mui/material';
import { useTheme } from '@mui/material/styles';
import PageContainer from '../../components/container/PageContainer';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import ParentCard from '../../components/shared/ParentCard';
import { Props } from 'react-apexcharts';
import RadialbarChartsCode from 'src/components/charts/Radialbar Charts/code/RadialbarChartsCode';
import RadarChartsCode from 'src/components/charts/Radar Charts/code/RadarChartsCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 131
Component exports: 1

=== Component Analysis: AreaChart ===
File: front-end/src/views/charts/AreaChart.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import PageContainer from '../../components/container/PageContainer';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import ParentCard from '../../components/shared/ParentCard';
import { Props } from 'react-apexcharts';
import AreaChartCode from 'src/components/charts/Area Chart/code/AreaChartCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 103
Component exports: 1

=== Component Analysis: DoughnutChart ===
File: front-end/src/views/charts/DoughnutChart.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Grid } from '@mui/material';
import PageContainer from '../../components/container/PageContainer';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import ParentCard from '../../components/shared/ParentCard';
import { Props } from 'react-apexcharts';
import DoughnutChartsCode from 'src/components/charts/Doughnut Charts/code/DoughnutChartsCode';
import PieChartsCode from 'src/components/charts/Pie Charts/code/PieChartsCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 133
Component exports: 1

=== Component Analysis: GredientChart ===
File: front-end/src/views/charts/GredientChart.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import PageContainer from '../../components/container/PageContainer';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import ParentCard from '../../components/shared/ParentCard';
import { Props } from 'react-apexcharts';
import GradientChartCode from 'src/components/charts/Gradient Chart/code/GradientChartCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 133
Component exports: 1

=== Component Analysis: ColumnChart ===
File: front-end/src/views/charts/ColumnChart.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import PageContainer from '../../components/container/PageContainer';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import ParentCard from '../../components/shared/ParentCard';
import { Props } from 'react-apexcharts';
import ColumnChartCode from 'src/components/charts/Column Chart/code/ColumnChartCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 116
Component exports: 1

=== Component Analysis: LineChart ===
File: front-end/src/views/charts/LineChart.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import PageContainer from '../../components/container/PageContainer';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import ParentCard from '../../components/shared/ParentCard';
import { Props } from 'react-apexcharts';
import LineChartCode from 'src/components/charts/Line Chart/code/LineChartCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 108
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/muicharts/piecharts/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import BasicPieChart from "src/components/muicharts/piecharts/BasicPieChart";
import TwoLevelPieChart from "src/components/muicharts/piecharts/TwoLevelPieChart";
import StraightAnglePieChart from "src/components/muicharts/piecharts/StraightAnglePieChart";
import TwoSimplePieChart from "src/components/muicharts/piecharts/TwoSimplePieChart";
import PieChartWithCustomizedLabel from "src/components/muicharts/piecharts/PieChartWithCustomizedLabel";
import PieChartWithPaddingAngleChart from "src/components/muicharts/piecharts/PieChartWithPaddingAngleChart";
import PieChartWithCenterLabelChart from "src/components/muicharts/piecharts/PieChartWithCenterLabelChart";
import OnSeriesItemClickChart from "src/components/muicharts/piecharts/OnSeriesItemClickChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 107
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/muicharts/gaugecharts/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import BasicGaugesChart from "src/components/muicharts/gaugecharts/BasicGaugesChart";
import ArcDesignChart from "src/components/muicharts/gaugecharts/ArcDesignChart";
import GaugePointerChart from "src/components/muicharts/gaugecharts/GaugePointerChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/muicharts/linecharts/line/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import SimpleLineChart from "src/components/muicharts/linescharts/linechart/SimpleLineChart";
import TinyLineChart from "src/components/muicharts/linescharts/linechart/TinyLineChart";
import DashedLineChart from "src/components/muicharts/linescharts/linechart/DashedLineChart";
import BiaxialLineChart from "src/components/muicharts/linescharts/linechart/BiaxialLineChart";
import LineChartWithReferenceLines from "src/components/muicharts/linescharts/linechart/LineChartWithReferenceLinesChart";
import LinewithforecastChart from "src/components/muicharts/linescharts/linechart/LinewithforecastChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 52
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/muicharts/linecharts/area/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import SimpleAreaChart from "src/components/muicharts/linescharts/areacharts/SimpleAreaChart";
import StackedAreaChart from "src/components/muicharts/linescharts/areacharts/StackedAreaChart";
import TinyAreaChart from "src/components/muicharts/linescharts/areacharts/TinyAreaChart";
import PercentAreaChart from "src/components/muicharts/linescharts/areacharts/PercentAreaChart";
import AreaChartConnectNulls from "src/components/muicharts/linescharts/areacharts/AreaChartConnectNullsChart";
import AreaChartFillByValueChart from "src/components/muicharts/linescharts/areacharts/AreaChartFillByValueChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 52
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/muicharts/sparklinecharts/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import BasicSparkLine from "src/components/muicharts/sparklinecharts/BasicSparkLine";
import AreaSparkLineChart from "src/components/muicharts/sparklinecharts/AreaSparkLineChart";
import BasicSparkLineCustomizationChart from "src/components/muicharts/sparklinecharts/BasicSparkLineCustomizationChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/muicharts/scattercharts/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import BasicScatterChart from "src/components/muicharts/scattercharts/BasicScatterChart";
import ScatterDatasetChart from "src/components/muicharts/scattercharts/ScatterDatasetChart";
import VoronoiInteractionChart from "src/components/muicharts/scattercharts/VoronoiInteractionChart";
import ScatterClickNoSnapChart from "src/components/muicharts/scattercharts/ScatterClickNoSnapChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 41
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/muicharts/barcharts/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import TinyBarChart from 'src/components/muicharts/barcharts/SimpleBarChart'
import StackedBarChart from 'src/components/muicharts/barcharts/StackedBarChart'
import SimpleBarChart from "src/components/muicharts/barcharts/SimpleBarChart";
import MixedBarChart from 'src/components/muicharts/barcharts/MixedBarChart'
import PositiveAndNegativeBarChart from "src/components/muicharts/barcharts/PositiveAndNegativeBarChart";
import BarChartStackedBySignChart from "src/components/muicharts/barcharts/BarChartStackedBySignChart";
import { Grid } from "@mui/material";
import BiaxialBarChart from "src/components/muicharts/barcharts/BiaxialBarChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 76
Component exports: 1

=== Component Analysis: MuiDialog ===
File: front-end/src/views/ui-components/MuiDialog.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import SimpleDialog from 'src/components/material-ui/dialog/SimpleDialog';
import AlertDialog from 'src/components/material-ui/dialog/AlertDialog';
import TransitionDialog from 'src/components/material-ui/dialog/TransitionDialog';
import FormDialog from 'src/components/material-ui/dialog/FormDialog';
import FullscreenDialog from 'src/components/material-ui/dialog/FullscreenDialog';
import MaxWidthDialog from 'src/components/material-ui/dialog/MaxWidthDialog';
import ScrollContentDialog from 'src/components/material-ui/dialog/ScrollContentDialog';
import ResponsiveDialog from 'src/components/material-ui/dialog/ResponsiveDialog';
import SimpleCode from 'src/components/material-ui/dialog/code/SimpleCode';
import AlertCode from 'src/components/material-ui/dialog/code/AlertCode';
import TransitionCode from 'src/components/material-ui/dialog/code/TransitionCode';
import FormCode from 'src/components/material-ui/dialog/code/FormCode';
import FullScreenCode from 'src/components/material-ui/dialog/code/FullScreenCode';
import MaxWidthCode from 'src/components/material-ui/dialog/code/MaxWidthCode';
import ScrollingContentCode from 'src/components/material-ui/dialog/code/ScrollingContentCode';
import ResponsiveFullscreenCode from 'src/components/material-ui/dialog/code/ResponsiveFullscreenCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 145
Component exports: 1

=== Component Analysis: MuiPopover ===
File: front-end/src/views/ui-components/MuiPopover.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Grid from '@mui/material/Grid';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import ClickPopover from 'src/components/material-ui/popover/ClickPopover';
import HoverPopover from 'src/components/material-ui/popover/HoverPopover';
import ClickPopoverCode from 'src/components/material-ui/popover/code/ClickPopoverCode';
import HoverPopoverCode from 'src/components/material-ui/popover/code/HoverPopoverCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: MuiTooltip ===
File: front-end/src/views/ui-components/MuiTooltip.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { styled } from '@mui/material/styles';
import { Grid, IconButton, Button, Stack, Fab, Box } from '@mui/material';
import Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';
import Fade from '@mui/material/Fade';
import Zoom from '@mui/material/Zoom';
import InlineItemCard from "src/components/shared/InlineItemCard";
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import SimpleTooltipCode from 'src/components/material-ui/tooltip/code/SimpleTooltipCode';
import ArrowTooltipCode from 'src/components/material-ui/tooltip/code/ArrowTooltipCode';
import VariableWidthCode from 'src/components/material-ui/tooltip/code/VariableWidthCode';
import TransitionsCode from 'src/components/material-ui/tooltip/code/TransitionsCode';
import PositionsTooltipCode from 'src/components/material-ui/tooltip/code/PositionsTooltipCode';
import { IconPlus, IconTrash } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 213
Component exports: 1

=== Component Analysis: MuiAccordion ===
File: front-end/src/views/ui-components/MuiAccordion.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import BasicCode from 'src/components/material-ui/accordion/code/BasicCode';
import ControlledCode from 'src/components/material-ui/accordion/code/ControlledCode';
import { IconChevronDown } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [expanded, setExpanded] = React.useState<string | false>(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 177
Component exports: 1

=== Component Analysis: MuiTransferList ===
File: front-end/src/views/ui-components/MuiTransferList.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import BasicTransferList from 'src/components/material-ui/transfer-list/BasicTransferList';
import EnhancedTransferList from 'src/components/material-ui/transfer-list/EnhancedTransferList';
import BasicTransferListCode from 'src/components/material-ui/transfer-list/code/BasicTransferListCode';
import EnhancedTransferListCode from 'src/components/material-ui/transfer-list/code/EnhancedTransferListCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 47
Component exports: 1

=== Component Analysis: MuiChip ===
File: front-end/src/views/ui-components/MuiChip.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Avatar, Chip, Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import InlineItemCard from "src/components/shared/InlineItemCard";
import User1 from "src/assets/images/profile/user-1.jpg"
import User2 from "src/assets/images/profile/user-2.jpg"
import User3 from "src/assets/images/profile/user-5.jpg"
import FilledCode from 'src/components/material-ui/chip/code/FilledCode';
import OutlinedCode from 'src/components/material-ui/chip/code/OutlinedCode';
import CustomIconCode from 'src/components/material-ui/chip/code/CustomIconCode';
import CustomOutlinedIcon from 'src/components/material-ui/chip/code/CustomOutlinedIcon';
import DisabledCode from 'src/components/material-ui/chip/code/DisabledCode';
import SizesCode from 'src/components/material-ui/chip/code/SizesCode';
import { IconCheck, IconChecks, IconMoodHappy } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 164
Component exports: 1

=== Component Analysis: MuiList ===
File: front-end/src/views/ui-components/MuiList.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import SimpleList from 'src/components/material-ui/lists/SimpleList';
import NestedList from 'src/components/material-ui/lists/NestedList';
import FolderList from 'src/components/material-ui/lists/FolderList';
import SelectedList from 'src/components/material-ui/lists/SelectedList';
import ControlsList from 'src/components/material-ui/lists/ControlsList';
import SwitchList from 'src/components/material-ui/lists/SwitchList';
import SimpleListCode from 'src/components/material-ui/lists/code/SimpleListCode';
import NestedListCode from 'src/components/material-ui/lists/code/NestedListCode';
import FolderListCode from 'src/components/material-ui/lists/code/FolderListCode';
import SelectedListCode from 'src/components/material-ui/lists/code/SelectedListCode';
import ControlsListCode from 'src/components/material-ui/lists/code/ControlsListCode';
import SwitchListCode from 'src/components/material-ui/lists/code/SwitchListCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 111
Component exports: 1

=== Component Analysis: MuiRating ===
File: front-end/src/views/ui-components/MuiRating.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import { Grid, Rating, Box, Stack } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import { IconContainerProps } from '@mui/material/Rating';
import { IconStar } from '@tabler/icons-react';
import { styled } from '@mui/material/styles';
import FavoriteIcon from '@mui/icons-material/Favorite';
import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';
import SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';
import SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied';
import SentimentSatisfiedIcon from '@mui/icons-material/SentimentSatisfied';
import SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAltOutlined';
import SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState<number | null>(2);
  const [hover, setHover] = React.useState(-1);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 273
Component exports: 1

=== Component Analysis: MuiTypography ===
File: front-end/src/views/ui-components/MuiTypography.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Typography, Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import Heading1Code from 'src/components/material-ui/typography/code/Heading1Code';
import Heading2Code from 'src/components/material-ui/typography/code/Heading2Code';
import Heading3Code from 'src/components/material-ui/typography/code/Heading3Code';
import Heading4Code from 'src/components/material-ui/typography/code/Heading4Code';
import Heading5Code from 'src/components/material-ui/typography/code/Heading5Code';
import Heading6Code from 'src/components/material-ui/typography/code/Heading6Code';
import Subtitle1Code from 'src/components/material-ui/typography/code/Subtitle1Code';
import Subtitle2Code from 'src/components/material-ui/typography/code/Subtitle2Code';
import TextPrimaryCode from 'src/components/material-ui/typography/code/TextPrimaryCode';
import TextSecondaryCode from 'src/components/material-ui/typography/code/TextSecondaryCode';
import TextInfoCode from 'src/components/material-ui/typography/code/TextInfoCode';
import TextWarningCode from 'src/components/material-ui/typography/code/TextWarningCode';
import TextErrorCode from 'src/components/material-ui/typography/code/TextErrorCode';
import TextSuccessCode from 'src/components/material-ui/typography/code/TextSuccessCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 325
Component exports: 1

=== Component Analysis: MuiAlert ===
File: front-end/src/views/ui-components/MuiAlert.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { IconX } from "@tabler/icons-react";
import { Grid, Stack, Button, IconButton, Collapse, Alert, AlertTitle } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import FilledCode from "src/components/material-ui/alert/code/FilledCode";
import OutlinedCode from "src/components/material-ui/alert/code/OutlinedCode";
import DescriptionCode from "src/components/material-ui/alert/code/DescriptionCode";
import ActionCode from "src/components/material-ui/alert/code/ActionCode";
import TransitionCode from "src/components/material-ui/alert/code/TransitionCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 174
Component exports: 1

=== Component Analysis: MuiAvatar ===
File: front-end/src/views/ui-components/MuiAvatar.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Avatar, AvatarGroup, Badge, Stack } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import User1 from 'src/assets/images/profile/user-1.jpg';
import User2 from 'src/assets/images/profile/user-2.jpg';
import User3 from 'src/assets/images/profile/user-3.jpg';
import User4 from 'src/assets/images/profile/user-4.jpg';
import User5 from 'src/assets/images/profile/user-5.jpg';
import { IconMoodSmile } from '@tabler/icons-react';
import VariantCode from "src/components/material-ui/avatar/code/VariantCode";
import GroupedCode from "src/components/material-ui/avatar/code/GroupedCode";
import GroupedSizeCode from "src/components/material-ui/avatar/code/GroupedSizeCode";
import WithBadgeCode from "src/components/material-ui/avatar/code/WithBadgeCode";
import SizesCode from "src/components/material-ui/avatar/code/SizesCode";
import ImageAvatarsCode from "src/components/material-ui/avatar/code/ImageAvatarsCode";
import LetterAvatarsCode from "src/components/material-ui/avatar/code/LetterAvatarsCode";
import IconAvatarsCode from "src/components/material-ui/avatar/code/IconAvatarsCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 237
Component exports: 1

=== Component Analysis: MuiTabs ===
File: front-end/src/views/ui-components/MuiTabs.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import { Grid, Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import TextCode from 'src/components/material-ui/tabs/code/TextCode';
import IconCode from 'src/components/material-ui/tabs/code/IconCode';
import IconWithLabelCode from 'src/components/material-ui/tabs/code/IconWithLabelCode';
import IconBottomCode from 'src/components/material-ui/tabs/code/IconBottomCode';
import IconLeftCode from 'src/components/material-ui/tabs/code/IconLeftCode';
import IconRightCode from 'src/components/material-ui/tabs/code/IconRightCode';
import ScrollableCode from 'src/components/material-ui/tabs/code/ScrollableCode';
import VerticalCode from 'src/components/material-ui/tabs/code/VerticalCode';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 310
Component exports: 1

=== Component Analysis: Unauthorized ===
File: front-end/src/views/authentication/Unauthorized.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Button, Container } from '@mui/material';
import { useNavigate } from 'react-router-dom';
import { IconShieldX } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: TwoSteps2 ===
File: front-end/src/views/authentication/auth2/TwoSteps2.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Box, Card, Typography } from '@mui/material';
import Logo from 'src/layouts/full/shared/logo/Logo';
import PageContainer from 'src/components/container/PageContainer';
import AuthTwoSteps from '../authForms/AuthTwoSteps';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: Register2 ===
File: front-end/src/views/authentication/auth2/Register2.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Box, Card, Typography, Stack } from '@mui/material';
import { Link } from 'react-router-dom';
import PageContainer from 'src/components/container/PageContainer';
import Logo from 'src/layouts/full/shared/logo/Logo';
import AuthRegister from '../authForms/AuthRegister';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                    component={Link}

--- METRICS ---
Lines of code: 75
Component exports: 1

=== Component Analysis: Login2 ===
File: front-end/src/views/authentication/auth2/Login2.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Link } from 'react-router-dom';
import { Grid, Box, Card, Stack, Typography } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import Logo from 'src/layouts/full/shared/logo/Logo';
import AuthLogin from '../authForms/AuthLogin';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                      component={Link}

--- METRICS ---
Lines of code: 76
Component exports: 1

=== Component Analysis: ForgotPassword2 ===
File: front-end/src/views/authentication/auth2/ForgotPassword2.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Box, Card, Typography } from '@mui/material';
import Logo from 'src/layouts/full/shared/logo/Logo';
import PageContainer from 'src/components/container/PageContainer';
import AuthForgotPassword from '../authForms/AuthForgotPassword';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 60
Component exports: 1

=== Component Analysis: Login ===
File: front-end/src/views/authentication/auth1/Login.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Link } from 'react-router-dom';
import { Grid, Box, Stack, Typography } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import img1 from 'src/assets/images/backgrounds/login-bg.svg';
import Logo from 'src/layouts/full/shared/logo/Logo';
import AuthLogin from '../authForms/AuthLogin';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                  component={Link}

--- METRICS ---
Lines of code: 103
Component exports: 1

=== Component Analysis: ForgotPassword ===
File: front-end/src/views/authentication/auth1/ForgotPassword.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Box, Typography } from '@mui/material';
import Logo from 'src/layouts/full/shared/logo/Logo';
import PageContainer from 'src/components/container/PageContainer';
import img1 from 'src/assets/images/backgrounds/login-bg.svg';
import AuthForgotPassword from '../authForms/AuthForgotPassword';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 88
Component exports: 1

=== Component Analysis: Register ===
File: front-end/src/views/authentication/auth1/Register.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Link } from 'react-router-dom';
import { Grid, Box, Typography, Stack } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import img1 from 'src/assets/images/backgrounds/login-bg.svg';
import Logo from 'src/layouts/full/shared/logo/Logo';
import AuthRegister from '../authForms/AuthRegister';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                  component={Link}

--- METRICS ---
Lines of code: 105
Component exports: 1

=== Component Analysis: TwoSteps ===
File: front-end/src/views/authentication/auth1/TwoSteps.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Box, Typography } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import img1 from 'src/assets/images/backgrounds/login-bg.svg';
import Logo from 'src/layouts/full/shared/logo/Logo';
import AuthTwoSteps from '../authForms/AuthTwoSteps';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 90
Component exports: 1

=== Component Analysis: OrthodoxLogin ===
File: front-end/src/views/authentication/auth1/OrthodoxLogin.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { Box, Typography, TextField, Button, Checkbox, FormControlLabel, styled } from '@mui/material';
import { useAuth } from '../../../context/AuthContext';
import { useNavigate } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [rememberMe, setRememberMe] = useState(false);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState('');
    const [floatingTexts, setFloatingTexts] = useState<Array<{ id: number, text: string, style: any }>>([]);
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 465
Component exports: 1

=== Component Analysis: AuthLogin ===
File: front-end/src/views/authentication/authForms/AuthLogin.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { Link, useNavigate } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import { loginType } from 'src/types/auth/auth';
import CustomCheckbox from '../../../components/forms/theme-elements/CustomCheckbox';
import CustomTextField from '../../../components/forms/theme-elements/CustomTextField';
import CustomFormLabel from '../../../components/forms/theme-elements/CustomFormLabel';
import AuthSocialButtons from './AuthSocialButtons';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [formData, setFormData] = useState({
  const [formErrors, setFormErrors] = useState<{ [key: string]: string }>({});

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link, useNavigate } from 'react-router-dom';
  const navigate = useNavigate();
              component={Link}

--- METRICS ---
Lines of code: 239
Component exports: 1

=== Component Analysis: AuthSocialButtons ===
File: front-end/src/views/authentication/authForms/AuthSocialButtons.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import icon1 from 'src/assets/images/svgs/google-icon.svg';
import icon2 from 'src/assets/images/svgs/facebook-icon.svg';
import CustomSocialButton from '../../../components/forms/theme-elements/CustomSocialButton';
import { Avatar, Box, Stack } from '@mui/material';
import { signInType } from 'src/types/auth/auth';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: AuthRegister ===
File: front-end/src/views/authentication/authForms/AuthRegister.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Button, Divider, Stack } from '@mui/material';
import { Link } from 'react-router-dom';
import CustomTextField from '../../../components/forms/theme-elements/CustomTextField';
import CustomFormLabel from '../../../components/forms/theme-elements/CustomFormLabel';
import { registerType } from 'src/types/auth/auth';
import AuthSocialButtons from './AuthSocialButtons';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
      <Button color="primary" variant="contained" size="large" fullWidth component={Link} to="/auth/login">

--- METRICS ---
Lines of code: 56
Component exports: 1

=== Component Analysis: AuthForgotPassword ===
File: front-end/src/views/authentication/authForms/AuthForgotPassword.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Button, Stack } from '@mui/material';
import { Link } from 'react-router-dom';
import CustomTextField from '../../../components/forms/theme-elements/CustomTextField';
import CustomFormLabel from '../../../components/forms/theme-elements/CustomFormLabel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
      <Button color="primary" variant="contained" size="large" fullWidth component={Link} to="/">
      <Button color="primary" size="large" fullWidth component={Link} to="/auth/login">

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: AuthTwoSteps ===
File: front-end/src/views/authentication/authForms/AuthTwoSteps.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Button, Stack } from '@mui/material';
import { Link } from 'react-router-dom';
import CustomTextField from '../../../components/forms/theme-elements/CustomTextField';
import CustomFormLabel from '../../../components/forms/theme-elements/CustomFormLabel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                component={Link}
                    component={Link}

--- METRICS ---
Lines of code: 61
Component exports: 1

=== Component Analysis: Maintenance ===
File: front-end/src/views/authentication/Maintenance.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import { Box, Container, Typography, Button } from '@mui/material';
import { Link } from 'react-router-dom';
import MaintenanceImg from 'src/assets/images/backgrounds/maintenance.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
      <Button color="primary" variant="contained" component={Link} to="/" disableElevation>

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: Error ===
File: front-end/src/views/authentication/Error.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import { Box, Container, Typography, Button } from '@mui/material';
import { Link, useNavigate } from 'react-router-dom';
import { useEffect, useState } from 'react';
import OrthodoxErrorImg from 'src/assets/images/backgrounds/orthodox-404.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useEffect, useState } from 'react';
  const [redirectPath, setRedirectPath] = useState('/');
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link, useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 99
Component exports: 1

=== Component Analysis: AdvancedRecordsDemo ===
File: front-end/src/views/AdvancedRecordsDemo.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useMemo } from 'react';
import {
import {
import { 
import { 
import { devLogStateChange } from '../utils/devLogger';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div

--- STATE MANAGEMENT ---
import React, { useState, useMemo } from 'react';
  const [currentTab, setCurrentTab] = useState(0);
  const [selectedRecordType, setSelectedRecordType] = useState<RecordType>('baptism');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 439
Component exports: 1

=== Component Analysis: BlogEdit ===
File: front-end/src/views/social/blog/BlogEdit.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { useNavigate, useParams } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import PageContainer from '../../../components/container/PageContainer';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import { socialAPI } from '../../../api/social.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [post, setPost] = useState<BlogPost | null>(null);
  const [formData, setFormData] = useState({
  const [tagInput, setTagInput] = useState('');
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
      fetchPost();
  const fetchPost = async () => {
      const response = await socialAPI.blog.getPost(Number(id));
      console.error('Error fetching post:', err);
      await socialAPI.blog.updatePost(Number(id), formData);
      await socialAPI.blog.deletePost(Number(id));

--- ROUTING ---
import { useNavigate, useParams } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 387
Component exports: 1

=== Component Analysis: BlogView ===
File: front-end/src/views/social/blog/BlogView.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate, useParams } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import PageContainer from '../../../components/container/PageContainer';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import { format } from 'date-fns';
import { socialAPI } from '../../../api/social.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [post, setPost] = useState<BlogPost | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [commentText, setCommentText] = useState('');
  const [addingComment, setAddingComment] = useState(false);
  const [reactionMenuAnchor, setReactionMenuAnchor] = useState<null | HTMLElement>(null);
  const [isBookmarked, setIsBookmarked] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      fetchPost();
  const fetchPost = async () => {
      const response = await socialAPI.blog.getPost(Number(id));
      console.error('Error fetching post:', err);
        await socialAPI.blog.removeReaction(Number(id));
        await socialAPI.blog.reactToPost(Number(id), { reaction_type: reactionType });
      await socialAPI.blog.addComment(Number(id), {
      // Refetch post to get updated comments
      await fetchPost();

--- ROUTING ---
import { useNavigate, useParams } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 512
Component exports: 1

=== Component Analysis: BlogCreate ===
File: front-end/src/views/social/blog/BlogCreate.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import PageContainer from '../../../components/container/PageContainer';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import { socialAPI } from '../../../api/social.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [formData, setFormData] = useState({
  const [tagInput, setTagInput] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

--- API INTEGRATION ---
      await socialAPI.blog.createPost(formData);

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 220
Component exports: 1

=== Component Analysis: BlogList ===
File: front-end/src/views/social/blog/BlogList.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import PageContainer from '../../../components/container/PageContainer';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import { format } from 'date-fns';
import { socialAPI } from '../../../api/social.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [posts, setPosts] = useState<BlogPost[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [filter, setFilter] = useState<'all' | 'my' | 'friends'>('all');
  useEffect(() => {

--- API INTEGRATION ---
    fetchPosts();
  const fetchPosts = async () => {
      const response = await socialAPI.blog.getPosts(params);
      console.error('Error fetching posts:', err);
      await socialAPI.blog.likePost(postId);

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 377
Component exports: 1

=== Component Analysis: FriendsList ===
File: front-end/src/views/social/friends/FriendsList.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import PageContainer from '../../../components/container/PageContainer';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import { format } from 'date-fns';
import { socialAPI } from '../../../api/social.api';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;
  return (
    <div
      role="tabpanel"

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [tabValue, setTabValue] = useState(0);
  const [friends, setFriends] = useState<Friend[]>([]);
  const [requests, setRequests] = useState<FriendRequest[]>([]);
  const [searchResults, setSearchResults] = useState<SearchUser[]>([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [actionLoading, setActionLoading] = useState<number | null>(null);
  const [confirmDialog, setConfirmDialog] = useState<{
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      fetchFriends();
      fetchRequests();
  const fetchFriends = async () => {
      const response = await socialAPI.friends.getAll();
      console.error('Error fetching friends:', err);
  const fetchRequests = async () => {
      const response = await socialAPI.friends.getRequests();
      console.error('Error fetching requests:', err);
      const response = await socialAPI.friends.search(searchQuery);
      await socialAPI.friends.sendRequest(userId);
      await socialAPI.friends.respondToRequest(requestId, { action });
      await fetchRequests();
        await fetchFriends();
      await socialAPI.friends.remove(friendId);
      const response = await socialAPI.chat.startConversation(friendId);

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 747
Component exports: 1

=== Component Analysis: SocialChat ===
File: front-end/src/views/social/chat/SocialChat.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {
import { useNavigate, useLocation } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import PageContainer from '../../../components/container/PageContainer';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import { format, isToday, isYesterday, formatDistanceToNow } from 'date-fns';
import { socialAPI } from '../../../api/social.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [conversations, setConversations] = useState<Conversation[]>([]);
  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);
  const [messages, setMessages] = useState<Message[]>([]);
  const [messageText, setMessageText] = useState('');
  const [loading, setLoading] = useState(false);
  const [sendingMessage, setSendingMessage] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [editingMessage, setEditingMessage] = useState<number | null>(null);
  const [editText, setEditText] = useState('');
  const [reactionMenuAnchor, setReactionMenuAnchor] = useState<{
  const [searchQuery, setSearchQuery] = useState('');
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
    fetchConversations();
      fetchMessages();
  const fetchConversations = async () => {
      const response = await socialAPI.chat.getConversations();
      console.error('Error fetching conversations:', err);
  const fetchMessages = async () => {
      const response = await socialAPI.chat.getMessages(selectedConversation.id);
      console.error('Error fetching messages:', err);
        const response = await socialAPI.chat.getConversation(conversationId);
        console.error('Error fetching conversation:', err);
      await socialAPI.chat.markAsRead(selectedConversation.id);
      const response = await socialAPI.chat.sendMessage(selectedConversation.id, {
      await socialAPI.chat.editMessage(messageId, {
      await socialAPI.chat.deleteMessage(messageId);
      await socialAPI.chat.reactToMessage(messageId, {

--- ROUTING ---
import { useNavigate, useLocation } from 'react-router-dom';
  const navigate = useNavigate();
  const location = useLocation();

--- METRICS ---
Lines of code: 756
Component exports: 1

=== Component Analysis: NotificationCenter ===
File: front-end/src/views/social/notifications/NotificationCenter.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../../context/AuthContext';
import PageContainer from '../../../components/container/PageContainer';
import Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';
import { format, formatDistanceToNow, isToday, isYesterday } from 'date-fns';
import { socialAPI } from '../../../api/social.api';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;
  return (
    <div
      role="tabpanel"

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [tabValue, setTabValue] = useState(0);
  const [notifications, setNotifications] = useState<Notification[]>([]);
  const [settings, setSettings] = useState<NotificationSettings | null>(null);
  const [loading, setLoading] = useState(false);
  const [settingsLoading, setSettingsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [settingsOpen, setSettingsOpen] = useState(false);
  const [selectedNotifications, setSelectedNotifications] = useState<number[]>([]);
  const [menuAnchor, setMenuAnchor] = useState<{
  useEffect(() => {

--- API INTEGRATION ---
    fetchNotifications();
    fetchSettings();
  const fetchNotifications = async () => {
      const response = await socialAPI.notifications.getAll(filters);
      console.error('Error fetching notifications:', err);
  const fetchSettings = async () => {
      const response = await socialAPI.notifications.getSettings();
      console.error('Error fetching notification settings:', err);
      await socialAPI.notifications.markAsRead(notificationId);
      await socialAPI.notifications.markAllAsRead();
      await socialAPI.notifications.delete(notificationId);
        selectedNotifications.map(id => socialAPI.notifications.delete(id))
      await socialAPI.notifications.updateSettings(newSettings);
                onClick={fetchNotifications}

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 760
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/columnvisibility/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ReactColumnVisibilityTable from 'src/components/react-tables/column-visiblity/page'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/sticky/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import StickyTable from "src/components/react-tables/sticky/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/dense/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ReactDenseTable from 'src/components/react-tables/dense/page';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 29
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/editable/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import Editable from "src/components/react-tables/editable/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/filtering/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import FilteringTable from "src/components/react-tables/filter/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/row-selection/page.tsx
Date: Wed Jul 30 12:59:50 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import RowSelection from "src/components/react-tables/row-selection/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/sorting/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import SortingTable from "src/components/react-tables/sorting/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 27
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/drag-drop/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import Rowdragdrop from 'src/components/react-tables/drag-drop/Rowdragdrop';
import Columndragdrop from 'src/components/react-tables/drag-drop/Columndragdrop'
import { Grid } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/pagination/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import PaginationTable from "src/components/react-tables/pagination/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/empty/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import EmptyTable from "src/components/react-tables/empty/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/expanding/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ExpandingTable from "src/components/react-tables/expanding/page";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/react-tables/basic/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ReactBasicTables from 'src/components/react-tables/basic/page';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 30
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/mui-trees/simpletree/simpletree-selection/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import MultiSelectTreeView from "src/components/muitrees/simpletree/MultiSelectTreeView";
import CheckboxSelection from "src/components/muitrees/simpletree/CheckboxSelection";
import ControlledSelectiontree from "src/components/muitrees/simpletree/ControlledSelectiontree";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/mui-trees/simpletree/simpletree-focus/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import ApiMethodFocusItem from "src/components/muitrees/simpletree/ApiMethodFocusItem";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/mui-trees/simpletree/simpletree-expansion/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import ControlledExpansionTree from "src/components/muitrees/simpletree/ControlledExpansionTree";
import ApiMethodSetItemExpansion from "src/components/muitrees/simpletree/ApiMethodSetItemExpansion";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/mui-trees/simpletree/simpletree-items/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import BasicSimpleTreeView from "src/components/muitrees/simpletree/BasicSimpleTreeView";
import TrackitemclicksTree from "src/components/muitrees/simpletree/TrackitemclicksTree";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/views/mui-trees/simpletree/simpletree-customization/page.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { Grid } from "@mui/material";
import BasicCustomIcons from "src/components/muitrees/simpletree/BasicCustomIcons";
import CustomTreeItemView from "src/components/muitrees/simpletree/CustomTreeItemView";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: BlogFeed ===
File: front-end/src/views/blog/BlogFeed.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

--- PROPS/INTERFACES ---
interface BlogFeedProps {
  visibility?: 'public' | 'internal' | 'church-only';
  showInternalPosts?: boolean;
}

const BlogFeed: React.FC<BlogFeedProps> = ({ 
  visibility = 'public',
  showInternalPosts = false 
}) => {
  const navigate = useNavigate();
  

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [posts, setPosts] = useState<BlogPost[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [sortBy, setSortBy] = useState('created_at');
  const [sortOrder, setSortOrder] = useState('DESC');
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [totalPosts, setTotalPosts] = useState(0);
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.get(`/api/blogs?${params}`);

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 341
Component exports: 1

=== Component Analysis: MuiRadio ===
File: front-end/src/views/forms/form-elements/MuiRadio.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Grid from '@mui/material/Grid';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ColorLabelRadio from "src/components/forms/form-elements/radio/ColorLabel";
import DefaultRadio from "src/components/forms/form-elements/radio/Default";
import ColorsRadio from "src/components/forms/form-elements/radio/Colors";
import SizesRadio from "src/components/forms/form-elements/radio/Sizes";
import CustomExRadio from "src/components/forms/form-elements/radio/Custom";
import PositionRadio from "src/components/forms/form-elements/radio/Position";
import CustomExRadioCode from 'src/components/forms/form-elements/radio/code/CustomExRadioCode';
import ColorLabelRadioCode from 'src/components/forms/form-elements/radio/code/ColorLabelRadioCode';
import DefaultRadioCode from 'src/components/forms/form-elements/radio/code/DefaultRadioCode';
import ColorsRadioCode from 'src/components/forms/form-elements/radio/code/ColorsRadioCode';
import SizesRadioCode from 'src/components/forms/form-elements/radio/code/SizesRadioCode';
import PositionRadioCode from 'src/components/forms/form-elements/radio/code/PositionRadioCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 139
Component exports: 1

=== Component Analysis: MuiAutoComplete ===
File: front-end/src/views/forms/form-elements/MuiAutoComplete.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Grid from '@mui/material/Grid';
import ComboBoxAutocomplete from 'src/components/forms/form-elements/autoComplete/ComboBoxAutocomplete';
import CountrySelectAutocomplete from 'src/components/forms/form-elements/autoComplete/CountrySelectAutocomplete';
import ControlledStateAutocomplete from 'src/components/forms/form-elements/autoComplete/ControlledStateAutocomplete';
import FreeSoloAutocomplete from 'src/components/forms/form-elements/autoComplete/FreeSoloAutocomplete';
import MultipleValuesAutocomplete from 'src/components/forms/form-elements/autoComplete/MultipleValuesAutocomplete';
import CheckboxesAutocomplete from 'src/components/forms/form-elements/autoComplete/CheckboxesAutocomplete';
import SizesAutocomplete from 'src/components/forms/form-elements/autoComplete/SizesAutocomplete';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import ComboBoxCode from 'src/components/forms/form-elements/autoComplete/code/ComboBoxCode';
import CountrySelectCode from 'src/components/forms/form-elements/autoComplete/code/CountrySelectCode';
import ControlledStateCode from 'src/components/forms/form-elements/autoComplete/code/ControlledStateCode';
import FreeSoloCode from 'src/components/forms/form-elements/autoComplete/code/FreeSoloCode';
import MultipleValuesCode from 'src/components/forms/form-elements/autoComplete/code/MultipleValuesCode';
import CheckboxesCode from 'src/components/forms/form-elements/autoComplete/code/CheckboxesCode';
import SizesCode from 'src/components/forms/form-elements/autoComplete/code/SizesCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 134
Component exports: 1

=== Component Analysis: MuiDateTime ===
File: front-end/src/views/forms/form-elements/MuiDateTime.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import dayjs, { Dayjs } from 'dayjs';
import Grid from '@mui/material/Grid';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'
import { MobileDateTimePicker } from '@mui/x-date-pickers/MobileDateTimePicker';
import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';
import { TimePicker } from '@mui/x-date-pickers/TimePicker';
import { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers'
import BasicDateTimeCode from 'src/components/forms/form-elements/date-time/code/BasicDateTimeCode';
import DifferentDesignCode from 'src/components/forms/form-elements/date-time/code/DifferentDesignCode';
import TimepickerCode from 'src/components/forms/form-elements/date-time/code/TimepickerCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState<Dayjs | null>(null);
  const [value2, setValue2] = React.useState<Dayjs | null>(null);
  const [value3, setValue3] = React.useState<Dayjs | null>(dayjs('2018-01-01T00:00:00.000Z'));

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 161
Component exports: 1

=== Component Analysis: MuiCheckbox ===
File: front-end/src/views/forms/form-elements/MuiCheckbox.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import Grid from '@mui/material/Grid';
import PositionCheckbox from "src/components/forms/form-elements/checkbox/Position";
import SizesCheckbox from "src/components/forms/form-elements/checkbox/Sizes";
import DefaultcolorsCheckbox from "src/components/forms/form-elements/checkbox/DefaultColors"
import CustomEleCheckbox from "src/components/forms/form-elements/checkbox/Custom";
import DefaultCheckbox from "src/components/forms/form-elements/checkbox/Default";
import ColorsCheckbox from "src/components/forms/form-elements/checkbox/Colors";
import CustomEleCheckboxCode from 'src/components/forms/form-elements/checkbox/code/CustomEleCheckboxCode';
import ColorsCheckboxCode from 'src/components/forms/form-elements/checkbox/code/ColorsCheckboxCode';
import DefaultCheckboxCode from 'src/components/forms/form-elements/checkbox/code/DefaultCheckboxCode';
import DefaultcolorsCheckboxCode from 'src/components/forms/form-elements/checkbox/code/DefaultcolorsCheckboxCode';
import SizesCheckboxCode from 'src/components/forms/form-elements/checkbox/code/SizesCheckboxCode';
import PositionCheckboxCode from 'src/components/forms/form-elements/checkbox/code/PositionCheckboxCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 141
Component exports: 1

=== Component Analysis: MuiSlider ===
File: front-end/src/views/forms/form-elements/MuiSlider.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Box, Slider, Typography, SliderThumb, SliderValueLabelProps, Stack } from '@mui/material';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import CustomRangeSlider from 'src/components/forms/theme-elements/CustomRangeSlider';
import CustomSlider from 'src/components/forms/theme-elements/CustomSlider';
import { IconVolume, IconVolume2 } from '@tabler/icons-react';
import CustomSliderCode from 'src/components/forms/form-elements/slider/code/CustomSliderCode';
import VolumesliderCode from 'src/components/forms/form-elements/slider/code/VolumesliderCode';
import RangesliderCode from 'src/components/forms/form-elements/slider/code/RangesliderCode';
import DefaultsliderCode from 'src/components/forms/form-elements/slider/code/DefaultsliderCode';
import DisabledSliderCode from 'src/components/forms/form-elements/slider/code/DisabledSliderCode';
import DiscreteSliderCode from 'src/components/forms/form-elements/slider/code/DiscreteSliderCode';
import TemperatureRangeCode from 'src/components/forms/form-elements/slider/code/TemperatureRangeCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState(30);
  const [value2, setValue2] = React.useState([20, 37]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 251
Component exports: 1

=== Component Analysis: MuiButton ===
File: front-end/src/views/forms/form-elements/MuiButton.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Grid from '@mui/material/Grid';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import DefaultButtons from 'src/components/forms/form-elements/button/DefaultButtons';
import ColorButtons from 'src/components/forms/form-elements/button/ColorButtons';
import IconLoadingButtons from 'src/components/forms/form-elements/button/IconLoadingButtons';
import SizeButton from 'src/components/forms/form-elements/button/SizeButton';
import OutlinedIconButtons from 'src/components/forms/form-elements/button/OutlinedIconButtons';
import OutlinedSizeButton from 'src/components/forms/form-elements/button/OutlinedSizeButton';
import TextDefaultButtons from 'src/components/forms/form-elements/button/TextDefaultButtons';
import TextColorButtons from 'src/components/forms/form-elements/button/TextColorButtons';
import TextIconButtons from 'src/components/forms/form-elements/button/TextIconButtons';
import TextSizeButton from 'src/components/forms/form-elements/button/TextSizeButton';
import IconColorButtons from 'src/components/forms/form-elements/button/IconColorButtons';
import IconSizeButtons from 'src/components/forms/form-elements/button/IconSizeButtons';
import FabDefaultButton from 'src/components/forms/form-elements/button/FabDefaultButton';
import FabColorButtons from 'src/components/forms/form-elements/button/FabColorButtons';
import FabSizeButtons from 'src/components/forms/form-elements/button/FabSizeButtons';
import DefaultButtonGroup from 'src/components/forms/form-elements/button/DefaultButtonGroup';
import SizeButtonGroup from 'src/components/forms/form-elements/button/SizeButtonGroup';
import VerticalButtonGroup from 'src/components/forms/form-elements/button/VerticalButtonGroup';
import ColorButtonGroup from 'src/components/forms/form-elements/button/ColorButtonGroup';
import TextButtonGroup from 'src/components/forms/form-elements/button/TextButtonGroup';
import OutlinedColorButtons from '../../../components/forms/form-elements/button/OutlinedColorButtons';
import DefaultCode from 'src/components/forms/form-elements/button/code/DefaultCode';
import ColorsCode from 'src/components/forms/form-elements/button/code/ColorsCode';
import LoadingButtonsCode from 'src/components/forms/form-elements/button/code/LoadingButtonsCode';
import SizesCode from 'src/components/forms/form-elements/button/code/SizesCode';
import OutlinedCode from 'src/components/forms/form-elements/button/code/OutlinedCode';
import OutlinedIconCode from 'src/components/forms/form-elements/button/code/OutlinedIconCode';
import OutlineSizeCode from 'src/components/forms/form-elements/button/code/OutlineSizeCode';
import TextCode from 'src/components/forms/form-elements/button/code/TextCode';
import TextColorCode from 'src/components/forms/form-elements/button/code/TextColorCode';
import TextIconColor from 'src/components/forms/form-elements/button/code/TextIconColor';
import TextSizesCode from 'src/components/forms/form-elements/button/code/TextSizesCode';
import IconColorCode from 'src/components/forms/form-elements/button/code/IconColorCode';
import IconSizesCode from 'src/components/forms/form-elements/button/code/IconSizesCode';
import FABCode from 'src/components/forms/form-elements/button/code/FABCode';
import FABColorCode from 'src/components/forms/form-elements/button/code/FABColorCode';
import FABSizeCode from 'src/components/forms/form-elements/button/code/FABSizeCode';
import DefaultButtonGroupCode from 'src/components/forms/form-elements/button/code/DefaultButtonGroupCode';
import SizeButtonGroupCode from 'src/components/forms/form-elements/button/code/SizeButtonGroupCode';
import VerticalButtonGroupCode from 'src/components/forms/form-elements/button/code/VerticalButtonGroupCode';
import TextButtonGroupCode from 'src/components/forms/form-elements/button/code/TextButtonGroupCode';
import ColorButtonGroupCode from 'src/components/forms/form-elements/button/code/ColorButtonGroupCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 337
Component exports: 1

=== Component Analysis: MuiSwitch ===
File: front-end/src/views/forms/form-elements/MuiSwitch.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Grid from '@mui/material/Grid';
import ParentCard from 'src/components/shared/ParentCard';
import ChildCard from 'src/components/shared/ChildCard';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import CustomExSwitch from 'src/components/forms/form-elements/switch/Custom';
import DefaultSwitch from 'src/components/forms/form-elements/switch/Default';
import DefaultLabelSwitch from 'src/components/forms/form-elements/switch/DefaultLabel';
import SizesSwitch from 'src/components/forms/form-elements/switch/Sizes';
import ColorsSwitch from 'src/components/forms/form-elements/switch/Colors';
import PositionSwitch from 'src/components/forms/form-elements/switch/Position';
import CustomSwitchCode from 'src/components/forms/form-elements/switch/code/ColorsSwitchCode';
import DefaultSwitchCode from 'src/components/forms/form-elements/switch/code/DefaultSwitchCode';
import DefaultLabelSwitchCode from 'src/components/forms/form-elements/switch/code/DefaultLabelSwitchCode';
import SizesSwitchCode from 'src/components/forms/form-elements/switch/code/SizesSwitchCode';
import ColorsSwitchCode from 'src/components/forms/form-elements/switch/code/ColorsSwitchCode';
import PositionSwitchCode from 'src/components/forms/form-elements/switch/code/PositionSwitchCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 134
Component exports: 1

=== Component Analysis: FormValidation ===
File: front-end/src/views/forms/FormValidation.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import ChildCard from 'src/components/shared/ChildCard';
import BlankCard from 'src/components/shared/BlankCard';
import Logo from "src/layouts/full/shared/logo/Logo";
import FVLogin from 'src/components/forms/form-validation/FVLogin';
import FVRegister from 'src/components/forms/form-validation/FVRegister';
import FVOnLeave from 'src/components/forms/form-validation/FVOnLeave';
import FVRadio from 'src/components/forms/form-validation/FVRadio';
import FVCheckbox from 'src/components/forms/form-validation/FVCheckbox';
import FVSelect from 'src/components/forms/form-validation/FVSelect';
import OnLeaveCode from "src/components/forms/form-validation/code/OnLeaveCode";
import SelectCode from "src/components/forms/form-validation/code/SelectCode";
import RadioCode from "src/components/forms/form-validation/code/RadioCode";
import CheckboxCode from "src/components/forms/form-validation/code/CheckboxCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 109
Component exports: 1

=== Component Analysis: TiptapEdit ===
File: front-end/src/views/forms/from-tiptap/TiptapEdit.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { useEditor } from "@tiptap/react";
import StarterKit from "@tiptap/starter-kit";
import {
import './Tiptap.css';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 1

=== Component Analysis: TiptapEditor ===
File: front-end/src/views/forms/from-tiptap/TiptapEditor.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import TiptapEdit from './TiptapEdit';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: FormCustom ===
File: front-end/src/views/forms/FormCustom.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { SliderThumb } from '@mui/material/Slider';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';
import { TimePicker } from '@mui/x-date-pickers/TimePicker';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import CustomSlider from 'src/components/forms/theme-elements/CustomSlider';
import CustomRangeSlider from 'src/components/forms/theme-elements/CustomRangeSlider';
import CustomSwitch from 'src/components/forms/theme-elements/CustomSwitch';
import CustomDisabledButton from 'src/components/forms/theme-elements/CustomDisabledButton';
import CustomOutlinedButton from 'src/components/forms/theme-elements/CustomOutlinedButton';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomCheckbox from 'src/components/forms/theme-elements/CustomCheckbox';
import CustomRadio from 'src/components/forms/theme-elements/CustomRadio';
import ParentCard from 'src/components/shared/ParentCard';
import { IconVolume, IconVolume2 } from '@tabler/icons-react';
import FormCustomCode from 'src/components/forms/form-custom/code/FormCustomCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [age, setAge] = React.useState('1');
  const [select1, setSelect] = React.useState('1');
  const [select2, setSelect2] = React.useState('1');
  const [value, setValue] = React.useState<any | null>(null);
  const [value2, setValue2] = React.useState<any | null>(null);
  const [value3, setValue3] = React.useState(30);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 470
Component exports: 1

=== Component Analysis: FormHorizontal ===
File: front-end/src/views/forms/FormHorizontal.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import BasicLayout from '../../components/forms/form-horizontal/BasicLayout';
import BasicIcons from '../../components/forms/form-horizontal/BasicIcons';
import FormSeparator from '../../components/forms/form-horizontal/FormSeparator';
import FormLabelAlignment from '../../components/forms/form-horizontal/FormLabelAlignment';
import CollapsibleForm from '../../components/forms/form-horizontal/CollapsibleForm';
import FormTabs from '../../components/forms/form-horizontal/FormTabs';
import BasicLayoutCode from 'src/components/forms/form-horizontal/code/BasicIconsCode';
import BasicIconsCode from 'src/components/forms/form-horizontal/code/BasicIconsCode';
import FormSeparatorCode from 'src/components/forms/form-horizontal/code/FormSeparatorCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 71
Component exports: 1

=== Component Analysis: FormLayouts ===
File: front-end/src/views/forms/FormLayouts.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 103
Component exports: 1

=== Component Analysis: FormWizard ===
File: front-end/src/views/forms/FormWizard.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import FormWizardCode from 'src/components/forms/form-wizard/code/FormWizardCode';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomCheckbox from 'src/components/forms/theme-elements/CustomCheckbox';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [activeStep, setActiveStep] = React.useState(0);
  const [skipped, setSkipped] = React.useState(new Set());

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 189
Component exports: 1

=== Component Analysis: FormVertical ===
File: front-end/src/views/forms/FormVertical.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import ParentCard from 'src/components/shared/ParentCard';
import BasicLayout from '../../components/forms/form-vertical/BasicLayout';
import BasicIcons from '../../components/forms/form-vertical/BasicIcons';
import FormSeparator from '../../components/forms/form-vertical/FormSeparator';
import CollapsibleForm from '../../components/forms/form-vertical/CollapsibleForm';
import FormTabs from '../../components/forms/form-vertical/FormTabs';
import BasicLayoutCode from 'src/components/forms/form-vertical/code/BasicLayoutCode';
import BasicIconsCode from 'src/components/forms/form-vertical/code/BasicIconsCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 75
Component exports: 1

=== Component Analysis: Spinner ===
File: front-end/src/views/spinner/Spinner.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { FC } from "react";
import "./spinner.css";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 13
Component exports: 1

=== Component Analysis: UnifiedRecordsPage ===
File: front-end/src/views/records/UnifiedRecordsPage.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import SSPPOCRecordsPage from './SSPPOCRecordsPage';
import { useParams, useNavigate, useLocation } from 'react-router-dom';
import AnalyticsDashboard from '../../pages/AnalyticsDashboard';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [tabValue, setTabValue] = useState(getInitialTab);
  const [isCollapsed, setIsCollapsed] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useParams, useNavigate, useLocation } from 'react-router-dom';
  const navigate = useNavigate();
  const location = useLocation();

--- METRICS ---
Lines of code: 192
Component exports: 1

=== Component Analysis: BaptismRecordsPage ===
File: front-end/src/views/records/BaptismRecordsPage.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
import {
import {
import { useTableStyleStore } from '../../store/useTableStyleStore';
import { churchService, Church } from '../../services/churchService';
import recordService from '../../services/recordService';
import { TableControlPanel } from '../../components/TableControlPanel';
import { ColorPaletteSelector } from '../../components/ColorPaletteSelector';
import { AGGridViewOnly } from '../../components/AGGridViewOnly/AGGridViewOnly';
import { ChurchRecord, RecordType as ChurchRecordType } from '../../types/church-records-advanced.types';
import ImportRecordsButton from '../../components/ImportRecordsButton';
import { AdvancedGridDialog } from '../../components/AdvancedGridDialog';
import { FIELD_DEFINITIONS, RECORD_TYPES } from '../../records/constants.js';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
  const [records, setRecords] = useState<BaptismRecord[]>([]);
  const [churches, setChurches] = useState<Church[]>([]);
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);
  const [page, setPage] = useState<number>(0);
  const [rowsPerPage, setRowsPerPage] = useState<number>(10);
  const [searchTerm, setSearchTerm] = useState<string>('');
  const [selectedChurch, setSelectedChurch] = useState<number>(0);
  const [selectedRecordType, setSelectedRecordType] = useState<string>('baptism');
  const [sortConfig, setSortConfig] = useState<SortConfig>({ key: 'dateOfBaptism', direction: 'desc' });
  const [dialogOpen, setDialogOpen] = useState<boolean>(false);
  const [editingRecord, setEditingRecord] = useState<BaptismRecord | null>(null);
  const [snackbarOpen, setSnackbarOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState('');
  const [priestOptions, setPriestOptions] = useState<string[]>([]);
  const [themeDrawerOpen, setThemeDrawerOpen] = useState(false);
  const [selectedElement, setSelectedElement] = useState<'header' | 'row' | 'cell' | null>(null);
  const [useAgGrid, setUseAgGrid] = useState(false);
  const [advancedGridOpen, setAdvancedGridOpen] = useState(false);
  const [isFiltersCollapsed, setIsFiltersCollapsed] = useState<boolean>(false);
  const [toastOpen, setToastOpen] = useState<boolean>(false);
  const [toastMessage, setToastMessage] = useState<string>('');
  const [toastSeverity, setToastSeverity] = useState<'success' | 'error' | 'info'>('success');
  useEffect(() => {
  useEffect(() => {
  const [formData, setFormData] = useState<Partial<BaptismRecord> & { customPriest?: boolean }>({
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
  const fetchChurches = async () => {
      const churchData = await churchService.fetchChurches();
      console.error('❌ Error fetching churches:', err);
      setError('Failed to fetch churches');
  const fetchRecords = async (recordType: string, churchId?: number) => {
        recordData = await churchService.fetchChurchRecords(churchId, selectedType.apiEndpoint, {
        const response = await fetch(`/api/${selectedType.apiEndpoint}-records?limit=1000&search=${encodeURIComponent(searchTerm)}`);
          throw new Error('Failed to fetch records from API');
      console.error(`❌ Error fetching ${recordType} records:`, err);
      setError(err instanceof Error ? err.message : 'Failed to fetch records');
  const fetchPriestOptions = async (recordType: string) => {
      const response = await fetch(`/api/${selectedType.apiEndpoint}-records/dropdown-options/clergy?table=${tableName}`);
      console.error('❌ Error fetching priest options:', err);
    fetchChurches();
    // Automatically fetch baptism records on page load
    fetchRecords('baptism', selectedChurch);
      fetchRecords(selectedRecordType, selectedChurch);
      fetchPriestOptions(selectedRecordType); // Fetch priest options when record type changes
    // Note: Church filtering is now handled by API call in fetchRecords
    // No need to filter by church here since fetchRecords already handles it
                fetchRecords(selectedRecordType, selectedChurch);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1765
Component exports: 2

=== Component Analysis: ChurchRecordsPage ===
File: front-end/src/views/records/ChurchRecordsPage.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
import {
import {
import { useParams, useNavigate, useLocation } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import SSPPOCRecordsPage from './SSPPOCRecordsPage';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
  const [selectedChurch, setSelectedChurch] = useState<Church | null>(null);
  const [availableChurches, setAvailableChurches] = useState<Church[]>([]);
  const [recordTables, setRecordTables] = useState<RecordTable[]>([]);
  const [selectedRecordType, setSelectedRecordType] = useState<string>('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/admin/churches?is_active=1', {
        throw new Error('Failed to fetch churches');
      const response = await fetch('/api/churches', {
        throw new Error('Failed to fetch user church');
      const response = await fetch(`/api/admin/church-database/${churchDbId}/record-counts`, {
        console.error('Failed to fetch record tables');

--- ROUTING ---
  Link,
import { useParams, useNavigate, useLocation } from 'react-router-dom';
  const navigate = useNavigate();
  const location = useLocation();
          <Link
          </Link>

--- METRICS ---
Lines of code: 531
Component exports: 1

=== Component Analysis: SSPPOCRecordsPage ===
File: front-end/src/views/records/SSPPOCRecordsPage.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
import {
import {
import { useTableStyleStore } from '../../store/useTableStyleStore';
import { churchService, Church } from '../../services/churchService';
import recordService from '../../services/recordService';
import { metricsAPI } from '../../api/metrics.api';
import { TableControlPanel } from '../../components/TableControlPanel';
import { ColorPaletteSelector } from '../../components/ColorPaletteSelector';
import { AGGridViewOnly } from '../../components/AGGridViewOnly/AGGridViewOnly';
import { ChurchRecord, RecordType as ChurchRecordType } from '../../types/church-records-advanced.types';
import ImportRecordsButton from '../../components/ImportRecordsButton';
import { AdvancedGridDialog } from '../../components/AdvancedGridDialog';
import { FIELD_DEFINITIONS, RECORD_TYPES } from '../../records/constants.js';
import { TableThemeSelector } from '../../components/TableThemeSelector';
import '../../styles/table-themes.css';
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
interface SSPPOCRecordsPageProps {
  churchId?: number;
  churchDbId?: number; 
  recordType?: string;
  sortConfig?: {
    field: string;
    direction: 'asc' | 'desc';
  };
}

const SSPPOCRecordsPage: React.FC<SSPPOCRecordsPageProps> = ({ 

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
  const [records, setRecords] = useState<SSPPOCRecord[]>([]);
  const [selectedRecordType, setSelectedRecordType] = useState<'baptism' | 'marriage' | 'funeral' | undefined>(
  const [selectedChurch, setSelectedChurch] = useState<number>(churchDbId || 0);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [churches, setChurches] = useState<Church[]>([]);
  const [priestOptions, setPriestOptions] = useState<string[]>([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [page, setPage] = useState(0);
  const [rowsPerPage, setRowsPerPage] = useState(10);
  const [sortConfig, setSortConfig] = useState<SortConfig>(
  const [useAgGrid, setUseAgGrid] = useState(false);
  const [isFiltersCollapsed, setIsFiltersCollapsed] = useState(false);
  const [selectedTheme, setSelectedTheme] = useState<string>('default');
  const [isAdvancedGridOpen, setIsAdvancedGridOpen] = useState(false);
  const [isAddRecordOpen, setIsAddRecordOpen] = useState(false);
  const [editingRecord, setEditingRecord] = useState<SSPPOCRecord | null>(null);
  const [viewingRecord, setViewingRecord] = useState<SSPPOCRecord | null>(null);
  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);
  const [recordToDelete, setRecordToDelete] = useState<SSPPOCRecord | null>(null);
  const [viewMode, setViewMode] = useState(false);
  const [dialogOpen, setDialogOpen] = useState<boolean>(false);
  const [snackbarOpen, setSnackbarOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState('');
  const [themeDrawerOpen, setThemeDrawerOpen] = useState(false);
  const [selectedElement, setSelectedElement] = useState<'header' | 'row' | 'cell' | null>(null);
  const [advancedGridOpen, setAdvancedGridOpen] = useState(false);
  const [tableThemeClass, setTableThemeClass] = useState<string>('table-theme-ocean-serenity');
  const [toastOpen, setToastOpen] = useState<boolean>(false);
  const [toastMessage, setToastMessage] = useState<string>('');
  const [toastSeverity, setToastSeverity] = useState<'success' | 'error' | 'info'>('success');
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {
  const [formData, setFormData] = useState<Partial<SSPPOCRecord> & { customPriest?: boolean }>({
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
  const fetchChurches = async () => {
      const churchData = await churchService.fetchChurches();
      console.error('❌ SSPPOCRecordsPage: Error fetching churches:', err);
  const fetchRecords = async (recordType: string, churchId?: number) => {
        recordData = await churchService.fetchChurchRecords(churchId, selectedType.apiEndpoint, {
          data = await metricsAPI.records.getBaptismRecords(filters);
          data = await metricsAPI.records.getMarriageRecords(filters);
          data = await metricsAPI.records.getFuneralRecords(filters);
          throw new Error('Failed to fetch records from API');
      console.error(`❌ Error fetching ${recordType} records:`, err);
      setError(err instanceof Error ? err.message : 'Failed to fetch records');
  const fetchPriestOptions = async (recordType: string) => {
      const data = await metricsAPI.records.getDropdownOptions(selectedType.apiEndpoint, 'clergy', tableName);
      console.error('❌ Error fetching priest options:', err);
    console.log('🔄 SSPPOCRecordsPage: Initial church fetch');
    fetchChurches();
      fetchRecords(selectedRecordType || 'baptism', selectedChurch);
      fetchPriestOptions(selectedRecordType || 'baptism'); // Fetch priest options when record type changes
    // Note: Church filtering is now handled by API call in fetchRecords
    // No need to filter by church here since fetchRecords already handles it
          fetchRecords(selectedRecordType || 'baptism', selectedChurch);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 2029
Component exports: 2

=== Component Analysis: GitOpsDemo ===
File: front-end/src/views/demo/GitOpsDemo.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [showConfigDialog, setShowConfigDialog] = useState(false);
  const [showPRDialog, setShowPRDialog] = useState(false);
  const [selectedPR, setSelectedPR] = useState<any>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 474
Component exports: 1

=== Component Analysis: AutoFixDemo ===
File: front-end/src/views/demo/AutoFixDemo.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { 
import { 
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [textValue, setTextValue] = useState('');
  const [switchValue, setSwitchValue] = useState(false);
  const [selectedChip, setSelectedChip] = useState('React');
  const [showIssues, setShowIssues] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 381
Component exports: 1

=== Component Analysis: OcrScanPreviewDemo ===
File: front-end/src/views/demo/OcrScanPreviewDemo.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Box, Button, Typography, Paper } from '@mui/material';
import OcrScanPreview from '../components/OcrScanPreview';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [showPreview, setShowPreview] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 134
Component exports: 1

=== Component Analysis: SiteEditorDemo ===
File: front-end/src/views/demo/SiteEditorDemo.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [textValue, setTextValue] = useState('Sample text for editing');
  const [switchValue, setSwitchValue] = useState(false);
  const [selectedChip, setSelectedChip] = useState('React');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 349
Component exports: 1

=== Component Analysis: VisualTestDemo ===
File: front-end/src/views/demo/VisualTestDemo.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import VisualRegressionDashboard from '../../components/VisualRegressionDashboard';
import VRTSettingsPanel from '../../components/VRTSettingsPanel';

--- PROPS/INTERFACES ---
interface VisualTestDemoProps {}

interface TestScenario {
  id: string;
  name: string;
  description: string;
  severity: 'critical' | 'major' | 'moderate' | 'minor';
  category: 'layout' | 'color' | 'accessibility' | 'responsive' | 'performance';
  enabled: boolean;
  component: string;
  expectedIssues: string[];

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [testScenarios, setTestScenarios] = useState<TestScenario[]>([
  const [vrtDashboardOpen, setVrtDashboardOpen] = useState(false);
  const [vrtSettingsOpen, setVrtSettingsOpen] = useState(false);
  const [testResults, setTestResults] = useState<any[]>([]);
  const [isRunningTests, setIsRunningTests] = useState(false);
  const [selectedComponent, setSelectedComponent] = useState<string>('UserCard');
  const [testConfig, setTestConfig] = useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 645
Component exports: 4

=== Component Analysis: WidgetBanners ===
File: front-end/src/views/widgets/banners/WidgetBanners.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import WelcomeCard from '../../../components/dashboards/ecommerce/WelcomeCard';
import Banner1 from '../../../components/widgets/banners/Banner1';
import Banner2 from '../../../components/widgets/banners/Banner2';
import Banner3 from '../../../components/widgets/banners/Banner3';
import Banner4 from '../../../components/widgets/banners/Banner4';
import Banner5 from '../../../components/widgets/banners/Banner5';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 78
Component exports: 1

=== Component Analysis: WidgetCards ===
File: front-end/src/views/widgets/cards/WidgetCards.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import PaymentGateways from '../../../components/dashboards/ecommerce/PaymentGateways';
import RecentTransactions from '../../../components/dashboards/ecommerce/RecentTransactions';
import TopCards from '../../..//components/dashboards/modern/TopCards';
import UpcomingAcitivity from '../../../components/widgets/cards/UpcomingActivity';
import ComplexCard from '../../../components/widgets/cards/ComplexCard';
import MusicCard from '../../../components/widgets/cards/MusicCard';
import EcommerceCard from '../../../components/widgets/cards/EcommerceCard';
import FollowerCard from '../../../components/widgets/cards/FollowerCard';
import FriendCard from '../../../components/widgets/cards/FriendCard';
import ProfileCard from '../../../components/widgets/cards/ProfileCard';
import Settings from '../../../components/widgets/cards/Settings';
import GiftCard from '../../../components/widgets/cards/GiftCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 105
Component exports: 1

=== Component Analysis: WidgetCharts ===
File: front-end/src/views/widgets/charts/WidgetCharts.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid } from '@mui/material';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import PageContainer from 'src/components/container/PageContainer';
import YearlyBreakup from '../../../components/dashboards/modern/YearlyBreakup';
import Projects from '../../../components/dashboards/modern/Projects';
import Customers from '../../../components/dashboards/modern/Customers';
import SalesTwo from '../../../components/dashboards/ecommerce/SalesTwo';
import MonthlyEarnings from '../../../components/dashboards/ecommerce/MonthlyEarnings';
import SalesOverview from '../../../components/dashboards/ecommerce/SalesOverview';
import RevenueUpdates from '../../../components/dashboards/ecommerce/RevenueUpdates';
import YearlySales from '../../../components/dashboards/ecommerce/YearlySales';
import MostVisited from '../../../components/widgets/charts/MostVisited';
import PageImpressions from '../../../components/widgets/charts/PageImpressions';
import Followers from '../../../components/widgets/charts/Followers';
import Views from '../../../components/widgets/charts/Views';
import Earned from '../../../components/widgets/charts/Earned';
import CurrentValue from '../../../components/widgets/charts/CurrentValue';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 134
Component exports: 1

=== Component Analysis: BackupSettings ===
File: front-end/src/views/settings/BackupSettings.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import PageContainer from '../../components/container/PageContainer';
import BlankCard from '../../components/shared/BlankCard';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';
import { adminAPI } from '../../api/admin.api';
import { useAuth } from '../../context/AuthContext';
import NFSBackupConfig from '../../components/admin/NFSBackupConfig';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [activeTab, setActiveTab] = useState(0);
    const [settings, setSettings] = useState<BackupSettings>({
    const [backupFiles, setBackupFiles] = useState<BackupFile[]>([]);
    const [loading, setLoading] = useState(false);
    const [saving, setSaving] = useState(false);
    const [backupInProgress, setBackupInProgress] = useState(false);
    const [alert, setAlert] = useState<{ type: 'success' | 'error' | 'info'; message: string } | null>(null);
    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);
    const [selectedBackup, setSelectedBackup] = useState<string | null>(null);
    const [storageInfo, setStorageInfo] = useState({
    useEffect(() => {

--- API INTEGRATION ---
            const response = await adminAPI.backup.getSettings();
            const response = await adminAPI.backup.getFiles();
            const response = await adminAPI.backup.getStorage();
            const response = await adminAPI.backup.updateSettings(settings);
            const response = await adminAPI.backup.run();
            const response = await adminAPI.backup.download(backupId);
            const response = await adminAPI.backup.delete(backupId);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 714
Component exports: 1

=== Component Analysis: ContentSettings ===
File: front-end/src/views/settings/ContentSettings.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import ImageGridExtractor from './ImageGridExtractor';
import { adminAPI } from '../../api/admin.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [globalImages, setGlobalImages] = useState<GlobalImage[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [uploadDialogOpen, setUploadDialogOpen] = useState(false);
    const [uploadType, setUploadType] = useState<'profile' | 'banner'>('profile');
      const [uploading, setUploading] = useState(false);
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const [imageName, setImageName] = useState('');
  const [gridExtractorOpen, setGridExtractorOpen] = useState(false);
  const [gridExtractorType, setGridExtractorType] = useState<'profile' | 'banner'>('profile');
  const [snackbarOpen, setSnackbarOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState('');
    useEffect(() => {

--- API INTEGRATION ---
            fetchGlobalImages();
    const fetchGlobalImages = async () => {
            const response = await adminAPI.globalImages.getAll();
            const response = await adminAPI.globalImages.upload(formData);
            const response = await adminAPI.globalImages.update(Number(image.id), { action: 'delete' });
      await fetchGlobalImages();
                    <Button color="inherit" size="small" onClick={fetchGlobalImages}>

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 465
Component exports: 1

=== Component Analysis: MenuSettings ===
File: front-end/src/views/settings/MenuSettings.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useMenuVisibility } from '../../contexts/MenuVisibilityContext';
import PageContainer from '../../components/container/PageContainer';
import BlankCard from '../../components/shared/BlankCard';
import Breadcrumb from '../../layouts/full/shared/breadcrumb/Breadcrumb';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [searchTerm, setSearchTerm] = useState('');
    const [expandedSections, setExpandedSections] = useState<string[]>(['Dashboard', 'Applications', 'Administration', 'Church Tools', 'Settings']);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 363
Component exports: 1

=== Component Analysis: BackendDetails ===
File: front-end/src/views/settings/services/BackendDetails.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [diagnostics, setDiagnostics] = useState<DiagnosticsData | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [currentTab, setCurrentTab] = useState(0);
  const [healthChecks, setHealthChecks] = useState<HealthCheck[]>([]);
  const [controlLoading, setControlLoading] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [logAutoRefresh, setLogAutoRefresh] = useState(false);
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
  const fetchDiagnostics = async () => {
      const response = await fetch('/api/server/status/backend');
        setError(result.message || 'Failed to fetch diagnostics');
      console.error('Diagnostics fetch failed:', error);
      const response = await fetch('/api/server/control/health-check', {
      const response = await fetch('/api/server/control/restart', {
          fetchDiagnostics();
        fetchDiagnostics();
    fetchDiagnostics();
        <Button onClick={fetchDiagnostics} sx={{ ml: 2 }}>
            onClick={fetchDiagnostics}

--- ROUTING ---
  Route as RouteIcon,
interface Route {
    list: Route[];
            <Tab label="Routes & Middleware" icon={<RouteIcon />} />
            {/* Routes & Middleware Tab */}
                        Express Routes ({diagnostics.application.routes.total})

--- METRICS ---
Lines of code: 778
Component exports: 1

=== Component Analysis: JITTerminalAccess ===
File: front-end/src/views/settings/JITTerminalAccess.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import JITTerminal from '../../components/terminal/JITTerminal';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [sessions, setSessions] = useState<JITSession[]>([]);
  const [config, setConfig] = useState<JITConfig>({
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [showCreateDialog, setShowCreateDialog] = useState(false);
  const [showTerminal, setShowTerminal] = useState(false);
  const [currentSessionId, setCurrentSessionId] = useState<string | null>(null);
  const [reauthPassword, setReauthPassword] = useState('');
  const [copySuccess, setCopySuccess] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/jit/config');
      const response = await fetch('/api/jit/sessions');
      const response = await fetch('/api/jit/config', {
      const response = await fetch('/api/jit/start-session', {
      const response = await fetch('/api/jit/end-session', {
      const response = await fetch(`/api/jit/session-log/${sessionId}`);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 656
Component exports: 1

=== Component Analysis: ServiceManagement ===
File: front-end/src/views/settings/ServiceManagement.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import { useNotifications } from '../../contexts/NotificationContext';
import { adminAPI } from '../../api/admin.api';
import BackendDetails from './services/BackendDetails';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [services, setServices] = useState<ServiceStatus[]>([]);
    const [systemHealth, setSystemHealth] = useState<SystemHealth | null>(null);
    const [recentActions, setRecentActions] = useState<ServiceAction[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [autoRefresh, setAutoRefresh] = useState(true);
    const [confirmDialog, setConfirmDialog] = useState<{
    const [frontendBuilding, setFrontendBuilding] = useState(false);
    const [buildProgress, setBuildProgress] = useState<{
    const [logsDialog, setLogsDialog] = useState<{
    const [expandedActions, setExpandedActions] = useState<Set<number>>(new Set());
    const [removedActions, setRemovedActions] = useState<Set<number>>(new Set());
    const [omaiSettings, setOmaiSettings] = useState<OMaiSettings>({
    const [omaiStatus, setOmaiStatus] = useState<OMaiStatus | null>(null);
    const [omaiLogs, setOmaiLogs] = useState<OMaiLogEntry[]>([]);
    const [omaiLogsLoading, setOmaiLogsLoading] = useState(false);
    const [omaiSettingsLoading, setOmaiSettingsLoading] = useState(false);
    const [omaiSettingsSaving, setOmaiSettingsSaving] = useState(false);
    const [omaiLogsDialog, setOmaiLogsDialog] = useState(false);
    const [omaiSettingsDialog, setOmaiSettingsDialog] = useState(false);
    const [omaiLogsTab, setOmaiLogsTab] = useState(0);
    const [omaiSettingsTab, setOmaiSettingsTab] = useState(0);
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {
    // OMAI specific useEffect hooks
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
    // const { fetchNotifications, fetchCounts } = useNotifications(); // DISABLED
            fetchServiceStatus();
            fetchSystemHealth();
            fetchRecentActions();
            fetchServiceStatus();
            fetchSystemHealth();
                fetchOmaiLogs();
            fetchOmaiLogs();
    const fetchServiceStatus = async () => {
            const response = await adminAPI.services.getStatus();
                const omaiResponse = await adminAPI.services.getOmaiStatus();
                console.error('Failed to fetch OMAI status:', omaiError);
                // Create a default OMAI service entry if fetch fails
    const fetchSystemHealth = async () => {
            const response = await adminAPI.services.getHealth();
            console.error('Failed to fetch system health:', err);
    const fetchRecentActions = async () => {
            const response = await adminAPI.services.getRecentActions();
            console.error('Failed to fetch recent actions:', err);
                const response = await adminAPI.services.getBackendLogs(50);
                            // fetchNotifications(); // DISABLED
                            // fetchCounts(); // DISABLED
                            fetchNotifications();
                            fetchCounts();
            const response = await adminAPI.services.rebuildFrontend();
                fetchNotifications();
                fetchCounts();
                fetchRecentActions();
            const response = await adminAPI.services.getServiceLogs(serviceName, 100);
                throw new Error(errorData.message || 'Failed to fetch logs');
            setError(err.message || 'Failed to fetch service logs');
    const fetchOmaiStatus = async () => {
            const response = await adminAPI.services.getOmaiStatus();
            console.error('Failed to fetch OMAI status:', err);
    const fetchOmaiLogs = async () => {
            const response = await adminAPI.services.getOmaiLogs(omaiSettings.maxLogEntries);
            console.error('Failed to fetch OMAI logs:', err);
    const fetchOmaiSettings = async () => {
            const response = await adminAPI.services.getOmaiSettings();
            console.error('Failed to fetch OMAI settings:', err);
            const response = await adminAPI.services.updateOmaiSettings(omaiSettings);
                fetchOmaiStatus();
                const response = await adminAPI.services.performAction(serviceName, action);
                    fetchServiceStatus();
                    fetchSystemHealth();
            const response = await adminAPI.services.performOmaiAction(action);
                fetchOmaiStatus();
                fetchOmaiLogs();
                    <Button color="inherit" size="small" onClick={fetchServiceStatus}>
                                        fetchServiceStatus();
                                        fetchSystemHealth();
                        onClick={fetchOmaiLogs}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 2142
Component exports: 1

=== Component Analysis: ImageGridExtractor ===
File: front-end/src/views/settings/ImageGridExtractor.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface ImageGridExtractorProps {
    open: boolean;
    onClose: () => void;
    onImagesExtracted: (images: ExtractedImage[], type: 'profile' | 'banner') => void;
    type: 'profile' | 'banner';
}

const ImageGridExtractor: React.FC<ImageGridExtractorProps> = ({
    open,
    onClose,
    onImagesExtracted,

--- STATE MANAGEMENT ---
import React, { useState, useRef } from 'react';
    const [sourceImage, setSourceImage] = useState<string | null>(null);
    const [extractedImages, setExtractedImages] = useState<ExtractedImage[]>([]);
    const [isProcessing, setIsProcessing] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [gridSize, setGridSize] = useState<{ rows: number; cols: number }>({ rows: 3, cols: 3 });

--- API INTEGRATION ---
            const response = await fetch('/api/admin/global-images/save-extracted', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 460
Component exports: 1

=== Component Analysis: App ===
File: front-end/src/App.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { CssBaseline, ThemeProvider } from '@mui/material';
import { ThemeSettings } from './theme/Theme';
import RTL from './layouts/full/shared/customizer/RTL';
import { RouterProvider } from 'react-router-dom';
import router from './routes/Router';
import { CustomizerContext } from './context/CustomizerContext';
import { ChurchRecordsProvider } from './context/ChurchRecordsContext';
import { AuthProvider } from './context/AuthContext';
import { MenuVisibilityProvider } from './contexts/MenuVisibilityContext';
import { NotificationProvider } from './contexts/NotificationContext';
import { WebSocketProvider } from './context/WebSocketContext';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { ReactQueryDevtools } from '@tanstack/react-query-devtools';
import { useContext, useEffect } from 'react';
import { ErrorBoundary } from './components/ErrorBoundary';
import FilterErrorBoundary from './components/ErrorBoundary/FilterErrorBoundary';
import { setupAxiosInterceptors } from './utils/axiosInterceptor';
import './styles/orthodox-fonts.css';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext, useEffect } from 'react';
  const { activeDir, activeMode } = useContext(CustomizerContext);
  useEffect(() => {

--- API INTEGRATION ---
import { setupAxiosInterceptors } from './utils/axiosInterceptor';
  // Set up global axios interceptors for 401 error handling
    console.log('🚀 Setting up global axios interceptors...');

--- ROUTING ---
import { RouterProvider } from 'react-router-dom';
import router from './routes/Router';
                          <RouterProvider router={router} />

--- METRICS ---
Lines of code: 83
Component exports: 1

=== Component Analysis: main ===
File: front-end/src/main.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { Suspense } from 'react';
import { CustomizerContextProvider } from './context/CustomizerContext';
import ReactDOM from 'react-dom/client';
import App from './App';
import Spinner from './views/spinner/Spinner';
import './utils/i18n';
import 'bootstrap/dist/css/bootstrap.min.css';
import { setupGlobalErrorHandlers } from './utils/globalErrorHandler';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 0
0

=== Component Analysis: BlankLayout ===
File: front-end/src/layouts/blank/BlankLayout.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { Outlet } from "react-router";
import LoadingBar from '../../LoadingBar';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 11
Component exports: 1

=== Component Analysis: Header ===
File: front-end/src/layouts/full/horizontal/header/Header.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { IconMenu2, IconMoon, IconSun } from '@tabler/icons-react';
import Notifications from 'src/layouts/full/vertical/header/Notification';
import Profile from 'src/layouts/full/vertical/header/Profile';
import Search from 'src/layouts/full/vertical/header/Search';
import Language from 'src/layouts/full/vertical/header/Language';
import Navigation from 'src/layouts/full/vertical/header/Navigation';
import Logo from 'src/layouts/full/shared/logo/Logo';
import config from 'src/context/config';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const { isLayout, setIsMobileSidebar, isMobileSidebar, activeMode, setActiveMode } = React.useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 105
Component exports: 1

=== Component Analysis: Navigation ===
File: front-end/src/layouts/full/horizontal/navbar/Navigation.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { useMediaQuery, Box, Drawer, Container, Theme } from '@mui/material';
import NavListing from './NavListing/NavListing';
import Logo from '../../shared/logo/Logo';
import SidebarItems from '../../vertical/sidebar/SidebarItems';
import { useContext } from 'react';
import { CustomizerContext } from 'src/context/CustomizerContext';
import config from 'src/context/config';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from 'react';
  const { isLayout, isMobileSidebar, setIsMobileSidebar } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: NavListing ===
File: front-end/src/layouts/full/horizontal/navbar/NavListing/NavListing.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import Menudata from '../Menudata';
import { useLocation } from 'react-router-dom';
import { Box, List, Theme, useMediaQuery } from '@mui/material';
import NavItem from '../NavItem/NavItem';
import NavCollapse from '../NavCollapse/NavCollapse';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isCollapse, isSidebarHover } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const { pathname } = useLocation();

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: NavCollapse ===
File: front-end/src/layouts/full/horizontal/navbar/NavCollapse/NavCollapse.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { useTheme } from '@mui/material/styles';
import { useLocation } from 'react-router-dom';
import { ListItemIcon, styled, ListItemText, Box, ListItemButton } from '@mui/material';
import NavItem from '../NavItem/NavItem';
import { IconChevronDown } from '@tabler/icons-react';
import { CustomizerContext } from "src/context/CustomizerContext";

--- PROPS/INTERFACES ---
type NavGroupProps = {
  [x: string]: any;
  navlabel?: boolean;
  subheader?: string;
  title?: string;
  icon?: any;
  href?: any;
};

interface NavCollapseProps {
  menu: NavGroupProps;
  level: number;
  pathWithoutLastPart: any;
  pathDirect: any;
  hideMenu: any;
  onClick: any;
}

// FC Component For Dropdown Menu
const NavCollapse = ({ menu, level, pathWithoutLastPart, pathDirect, hideMenu }: NavCollapseProps) => {

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const [open, setOpen] = React.useState(false);
  const { isBorderRadius } = useContext(CustomizerContext);
  React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const { pathname } = useLocation();

--- METRICS ---
Lines of code: 149
Component exports: 1

=== Component Analysis: NavItem ===
File: front-end/src/layouts/full/horizontal/navbar/NavItem/NavItem.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { NavLink } from 'react-router-dom';
import { ListItemIcon, List, styled, ListItemText, useTheme, ListItemButton } from '@mui/material';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isBorderRadius } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { NavLink } from 'react-router-dom';
    component: item?.external ? 'a' : NavLink,

--- METRICS ---
Lines of code: 100
Component exports: 1

=== Component Analysis: FullLayout ===
File: front-end/src/layouts/full/FullLayout.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { FC, useContext } from 'react';
import { styled, Container, Box, useTheme } from '@mui/material';
import { Outlet } from 'react-router-dom';
import Header from './vertical/header/Header';
import Sidebar from './vertical/sidebar/Sidebar';
import Customizer from './shared/customizer/Customizer';
import Navigation from '../full/horizontal/navbar/Navigation';
import HorizontalHeader from '../full/horizontal/header/Header';
import ScrollToTop from '../../components/shared/ScrollToTop';
import { CustomizerContext } from 'src/context/CustomizerContext';
import config from 'src/context/config';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { FC, useContext } from 'react';
  const { activeLayout, isLayout, activeMode, isCollapse } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 99
Component exports: 1

=== Component Analysis: SidebarItems ===
File: front-end/src/layouts/full/vertical/sidebar/SidebarItems.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { useLocation } from 'react-router-dom';
import { Box, List, useMediaQuery } from '@mui/material';
import NavItem from './NavItem';
import NavCollapse from './NavCollapse';
import NavGroup from './NavGroup/NavGroup';
import { useFilteredMenuItems } from '../../../../hooks/useFilteredMenuItems';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isSidebarHover, isCollapse, isMobileSidebar, setIsMobileSidebar } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const { pathname } = useLocation();

--- METRICS ---
Lines of code: 61
Component exports: 1

=== Component Analysis: Profile ===
File: front-end/src/layouts/full/vertical/sidebar/SidebarProfile/Profile.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { Box, Avatar, Typography, IconButton, Tooltip, useMediaQuery } from '@mui/material';
import img1 from 'src/assets/images/profile/user-1.jpg';
import { IconPower } from '@tabler/icons-react';
import { Link } from 'react-router-dom';
import { CustomizerContext } from 'src/context/CustomizerContext';
import { useContext } from 'react';
import { useAuth } from 'src/context/AuthContext';
import { useProfileSync } from 'src/hooks/useProfileSync';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from 'react';
  const { isSidebarHover, isCollapse } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                component={Link}

--- METRICS ---
Lines of code: 65
Component exports: 1

=== Component Analysis: Sidebar ===
File: front-end/src/layouts/full/vertical/sidebar/Sidebar.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { useMediaQuery, Box, Drawer, useTheme } from '@mui/material';
import SidebarItems from './SidebarItems';
import Logo from '../../shared/logo/Logo';
import Scrollbar from 'src/components/custom-scroll/Scrollbar';
import { Profile } from './SidebarProfile/Profile';
import config from 'src/context/config';
import { CustomizerContext } from 'src/context/CustomizerContext';
import { useContext } from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from 'react';
  } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 133
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/layouts/full/vertical/sidebar/NavCollapse/index.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { useState } from 'react';
import { useLocation } from 'react-router-dom';
import {
import NavItem from '../NavItem';
import { IconChevronDown, IconChevronUp } from '@tabler/icons-react';
import { useTranslation } from 'react-i18next';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
type NavGroupProps = {
  [x: string]: any;
  navlabel?: boolean;
  subheader?: string;
  title?: string;
  icon?: any;
  href?: any;
};

interface NavCollapseProps {
  menu: NavGroupProps;
  level: number;
  pathWithoutLastPart: any;
  pathDirect: any;
  hideMenu: any;
  onClick: (event: React.MouseEvent<HTMLElement>) => void;
}

// FC Component For Dropdown Menu
const NavCollapse = ({

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
import { useState } from 'react';
  const { isBorderRadius } = useContext(CustomizerContext);
  const [open, setOpen] = useState(true);
  React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const { pathname } = useLocation();

--- METRICS ---
Lines of code: 153
Component exports: 1

=== Component Analysis: NavGroup ===
File: front-end/src/layouts/full/vertical/sidebar/NavGroup/NavGroup.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { ListSubheader, styled, Theme } from '@mui/material';
import { IconDots } from '@tabler/icons-react';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/layouts/full/vertical/sidebar/NavItem/index.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { NavLink } from 'react-router-dom';
import {
import { useTranslation } from 'react-i18next';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isBorderRadius } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { NavLink } from 'react-router-dom';
    component: item?.external ? 'a' : NavLink,

--- METRICS ---
Lines of code: 134
Component exports: 1

=== Component Analysis: QuickLinks ===
File: front-end/src/layouts/full/vertical/header/QuickLinks.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { Typography, Stack } from '@mui/material';
import * as dropdownData from './data';
import { Link } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
const QuickLinks = () => {
      <Typography variant="h5">Quick Links</Typography>
        {dropdownData.pageLinks.map((pagelink, index) => {
              <Link to={pagelink.href} key={index} className="hover-text-primary">
              </Link>
export default QuickLinks;

--- METRICS ---
Lines of code: 54
Component exports: 1

=== Component Analysis: Message ===
File: front-end/src/layouts/full/vertical/header/Message.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import {
import * as dropdownData from './data';
import { IconChecks, IconClock, IconMessageDots } from '@tabler/icons-react';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [anchorEl2, setAnchorEl2] = useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 140
Component exports: 1

=== Component Analysis: CartItem ===
File: front-end/src/layouts/full/vertical/header/CartItem.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { Box, Typography, Avatar, Stack, ButtonGroup, Button } from '@mui/material';
import { Link } from 'react-router-dom';
import { IconMinus, IconPlus } from '@tabler/icons-react';
import emptyCart from 'src/assets/images/products/empty-shopping-cart.svg';
import { ProductContext } from 'src/context/EcommerceContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  } = useContext(ProductContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
          <Button component={Link} to="/apps/ecommerce/shop" variant="contained">

--- METRICS ---
Lines of code: 98
Component exports: 1

=== Component Analysis: Notification ===
File: front-end/src/layouts/full/vertical/header/Notification.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { NotificationBell } from '../../../../components/notifications/NotificationBell';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 7
Component exports: 1

=== Component Analysis: Profile ===
File: front-end/src/layouts/full/vertical/header/Profile.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import {
import * as dropdownData from './data';
import { useAuth } from '../../../../context/AuthContext';
import { useProfileSync } from '../../../../hooks/useProfileSync';
import { IconMail } from '@tabler/icons-react';
import ProfileImg from 'src/assets/images/profile/user-1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [anchorEl2, setAnchorEl2] = useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link, useNavigate } from 'react-router-dom';
  const navigate = useNavigate();
              <Link to={profile.href}>
              </Link>

--- METRICS ---
Lines of code: 180
Component exports: 1

=== Component Analysis: Header ===
File: front-end/src/layouts/full/vertical/header/Header.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { IconButton, Box, AppBar, useMediaQuery, Toolbar, styled, Stack } from '@mui/material';
import config from 'src/context/config'
import { useContext } from "react";
import { IconMenu2 } from '@tabler/icons-react';
import Notifications from './Notification';
import Profile from './Profile';
import Search from './Search';
import Language from './Language';
import Navigation from './Navigation';
import MobileRightSidebar from './MobileRightSidebar';
import OrthodoxThemeToggle from 'src/components/shared/OrthodoxThemeToggle';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from "react";
  const { setIsCollapse, isCollapse, isMobileSidebar, setIsMobileSidebar } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 92
Component exports: 1

=== Component Analysis: AppLinks ===
File: front-end/src/layouts/full/vertical/header/AppLinks.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { Avatar, Box, Typography, Grid, Stack } from '@mui/material';
import * as dropdownData from './data';
import { Link } from 'react-router-dom';
import { useMenuVisibility } from '../../../../contexts/MenuVisibilityContext';
import { useAuth } from 'src/context/AuthContext';
import { getAppsLink } from './data';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
import { getAppsLink } from './data';
const AppLinks = () => {
  // Use filtered appsLink based on user role
  const visibleApps = getAppsLink(user);
          <Link to={links.href} className="hover-text-primary">
          </Link>
export default AppLinks;

--- METRICS ---
Lines of code: 95
Component exports: 1

=== Component Analysis: Navigation ===
File: front-end/src/layouts/full/vertical/header/Navigation.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import { Box, Menu, Typography, Button, Divider, Grid } from '@mui/material';
import { Link } from 'react-router-dom';
import { IconChevronDown, IconHelp } from '@tabler/icons-react';
import AppLinks from './AppLinks';
import QuickLinks from './QuickLinks';
import { useMenuVisibility } from '../../../../contexts/MenuVisibilityContext';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [anchorEl2, setAnchorEl2] = useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
import AppLinks from './AppLinks';
import QuickLinks from './QuickLinks';
              <AppLinks />
                <Link to="/faq">
                </Link>
              <QuickLinks />
      <Button color="inherit" sx={{ color: (theme) => theme.palette.text.secondary }} variant="text" to="/apps/chats" component={Link}>
      <Button color="inherit" sx={{ color: (theme) => theme.palette.text.secondary }} variant="text" to="/apps/liturgical-calendar" component={Link}>
      <Button color="inherit" sx={{ color: (theme) => theme.palette.text.secondary }} variant="text" to="/apps/email" component={Link}>

--- METRICS ---
Lines of code: 131
Component exports: 1

=== Component Analysis: MobileRightSidebar ===
File: front-end/src/layouts/full/vertical/header/MobileRightSidebar.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { Link } from 'react-router-dom';
import AppLinks from './AppLinks';
import QuickLinks from './QuickLinks';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [showDrawer, setShowDrawer] = useState(false);
  const [open, setOpen] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
import AppLinks from './AppLinks';
import QuickLinks from './QuickLinks';
          <ListItemButton component={Link} to="/apps/chats">
          <ListItemButton component={Link} to="/apps/liturgical-calendar">
          <ListItemButton component={Link} to="/apps/email">
              <AppLinks />
        <QuickLinks />

--- METRICS ---
Lines of code: 144
Component exports: 1

=== Component Analysis: Language ===
File: front-end/src/layouts/full/vertical/header/Language.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { Avatar, IconButton, Menu, MenuItem, Typography, Stack } from '@mui/material';
import FlagUs from 'src/assets/images/flag/icon-flag-us.svg';
import FlagGr from 'src/assets/images/flag/icon-flag-gr.svg';
import FlagRo from 'src/assets/images/flag/icon-flag-ro.svg';
import FlagRu from 'src/assets/images/flag/icon-flag-ru.svg';
import { useTranslation } from 'react-i18next';
import { useEffect } from 'react';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
import { useEffect } from 'react';
  const [anchorEl, setAnchorEl] = React.useState(null);
  const { isLanguage, setIsLanguage } = useContext(CustomizerContext);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 97
Component exports: 1

=== Component Analysis: Search ===
File: front-end/src/layouts/full/vertical/header/Search.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import {
import { IconSearch, IconX } from '@tabler/icons-react';
import Menuitems from '../sidebar/MenuItems';
import { Link } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [showDrawer2, setShowDrawer2] = useState(false);
  const [search, setSerach] = useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
  const filterRoutes = (rotr: any, cSearch: string) => {
  const searchData = filterRoutes(Menuitems, search);
            Quick Page Links
                      <ListItemButton sx={{ py: 0.5, px: 1 }} to={menu?.href} component={Link}>
                              component={Link}

--- METRICS ---
Lines of code: 135
Component exports: 1

=== Component Analysis: Cart ===
File: front-end/src/layouts/full/vertical/header/Cart.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useContext } from 'react';
import { sum } from 'lodash';
import { IconShoppingCart, IconX } from '@tabler/icons-react';
import { Box, Typography, Badge, Drawer, IconButton, Button, Stack } from '@mui/material';
import { Link } from 'react-router-dom';
import CartItems from './CartItem';
import { ProductContext } from 'src/context/EcommerceContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useContext } from 'react';
  } = useContext(ProductContext);
  const [showDrawer, setShowDrawer] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                component={Link}

--- METRICS ---
Lines of code: 120
Component exports: 1

=== Component Analysis: RTL ===
File: front-end/src/layouts/full/shared/customizer/RTL.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import createCache from '@emotion/cache';
import { CacheProvider } from '@emotion/react';
import rtlPlugin from 'stylis-plugin-rtl';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: Customizer ===
File: front-end/src/layouts/full/shared/customizer/Customizer.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { FC, useState, useContext } from 'react';
import {
import Box, { BoxProps } from '@mui/material/Box';
import { IconX, IconSettings, IconCheck } from '@tabler/icons-react';
import Scrollbar from 'src/components/custom-scroll/Scrollbar';
import WbSunnyTwoToneIcon from '@mui/icons-material/WbSunnyTwoTone';
import DarkModeTwoToneIcon from '@mui/icons-material/DarkModeTwoTone';
import SwipeLeftAltTwoToneIcon from '@mui/icons-material/SwipeLeftAltTwoTone';
import SwipeRightAltTwoToneIcon from '@mui/icons-material/SwipeRightAltTwoTone';
import AspectRatioTwoToneIcon from '@mui/icons-material/AspectRatioTwoTone';
import CallToActionTwoToneIcon from '@mui/icons-material/CallToActionTwoTone';
import ViewSidebarTwoToneIcon from '@mui/icons-material/ViewSidebarTwoTone';
import WebAssetTwoToneIcon from '@mui/icons-material/WebAssetTwoTone';
import { ViewComfyTwoTone, PaddingTwoTone, BorderOuter } from '@mui/icons-material';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { FC, useState, useContext } from 'react';
  const [showDrawer, setShowDrawer] = useState(false);
  } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 412
Component exports: 1

=== Component Analysis: Logo ===
File: front-end/src/layouts/full/shared/logo/Logo.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import { FC, useContext } from 'react';
import { Link } from 'react-router-dom';
import { ReactComponent as LogoDark } from 'src/assets/images/logos/dark-logo.svg';
import { ReactComponent as LogoDarkRTL } from 'src/assets/images/logos/dark-rtl-logo.svg';
import { ReactComponent as LogoLight } from 'src/assets/images/logos/light-logo.svg';
import { ReactComponent as LogoLightRTL } from 'src/assets/images/logos/light-logo-rtl.svg';
import { styled } from '@mui/material';
import config from 'src/context/config';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { FC, useContext } from 'react';
  const { isCollapse, isSidebarHover, activeDir, activeMode } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
  const LinkStyled = styled(Link)(() => ({
      <LinkStyled to="/" style={{
      </LinkStyled>
    <LinkStyled to="/" style={{
    </LinkStyled>

--- METRICS ---
Lines of code: 61
Component exports: 1

=== Component Analysis: Breadcrumb ===
File: front-end/src/layouts/full/shared/breadcrumb/Breadcrumb.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography, Box, Breadcrumbs, Link, Theme } from '@mui/material';
import { NavLink } from 'react-router-dom';
import { IconCircle } from '@tabler/icons-react';
import OrthodoxChurchIcon from 'src/components/shared/OrthodoxChurchIcon';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Grid, Typography, Box, Breadcrumbs, Link, Theme } from '@mui/material';
import { NavLink } from 'react-router-dom';
                <Link underline="none" color="inherit" component={NavLink} to={item.to}>
                </Link>

--- METRICS ---
Lines of code: 105
Component exports: 1

=== Component Analysis: Welcome ===
File: front-end/src/layouts/full/shared/welcome/Welcome.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 10
Component exports: 1

=== Component Analysis: Loadable ===
File: front-end/src/layouts/full/shared/loadable/Loadable.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { Suspense } from 'react';
import Spinner from 'src/views/spinner/Spinner';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: QuestionnaireRunner ===
File: front-end/src/modules/OMLearn/QuestionnaireRunner.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useParams, useNavigate } from 'react-router-dom';
import { useSurveyResults } from './SurveyResultsContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [responses, setResponses] = useState<SurveyResponse[]>([]);
  const [currentAnswer, setCurrentAnswer] = useState<string>('');
  const [currentReasoning, setCurrentReasoning] = useState<string>('');
  const [survey, setSurvey] = useState<Survey | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [showReasoning, setShowReasoning] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 499
Component exports: 1

=== Component Analysis: SurveyResultsContext ===
File: front-end/src/modules/OMLearn/SurveyResultsContext.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

--- PROPS/INTERFACES ---
interface SurveyResultsProviderProps {
  children: ReactNode;
}

const STORAGE_KEY = 'omlearn_survey_results';

export const SurveyResultsProvider: React.FC<SurveyResultsProviderProps> = ({ children }) => {
  const [sessions, setSessions] = useState<SurveySession[]>([]);

  // Load data from localStorage on mount
  useEffect(() => {

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
  const [sessions, setSessions] = useState<SurveySession[]>([]);
  useEffect(() => {
  useEffect(() => {
  const context = useContext(SurveyResultsContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 241
Component exports: 5

=== Component Analysis: OMLearn ===
File: front-end/src/modules/OMLearn/OMLearn.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import { Box } from '@mui/material';
import OMLearnDashboard from './OMLearnDashboard';
import QuestionnaireRunner from './QuestionnaireRunner';
import { SurveyResultsProvider } from './SurveyResultsContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Routes, Route, Navigate } from 'react-router-dom';
        <Routes>
          <Route path="/" element={<OMLearnDashboard />} />
          <Route path="/survey/:gradeGroupId" element={<QuestionnaireRunner />} />
          <Route path="*" element={<Navigate to="/" replace />} />
        </Routes>

--- METRICS ---
Lines of code: 21
Component exports: 1

=== Component Analysis: OMLearnDashboard ===
File: front-end/src/modules/OMLearn/OMLearnDashboard.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [selectedGradeGroup, setSelectedGradeGroup] = useState<string | null>(null);
  const [gradeGroups, setGradeGroups] = useState<GradeGroup[]>([
  const [overallProgress, setOverallProgress] = useState<SurveyProgress[]>([]);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 309
Component exports: 1

=== Component Analysis: RecordTable ===
File: front-end/src/records/RecordTable.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useRef } from 'react';
import { Table, Button, Spinner, OverlayTrigger, Tooltip } from 'react-bootstrap';
import { 
import { FIELD_DEFINITIONS, RECORD_TYPES } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 271
Component exports: 1

=== Component Analysis: RecordHistoryModal ===
File: front-end/src/records/RecordHistoryModal.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Modal, Button, Spinner } from 'react-bootstrap';
import { FaHistory } from 'react-icons/fa';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 96
Component exports: 1

=== Component Analysis: RecordPagination ===
File: front-end/src/records/RecordPagination.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Pagination as BootstrapPagination } from 'react-bootstrap';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 95
Component exports: 1

=== Component Analysis: RecordFormModal ===
File: front-end/src/records/RecordFormModal.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Modal, Button, Form, Row, Col, Spinner } from 'react-bootstrap';
import { Formik } from 'formik';
import * as Yup from 'yup';
import { FaFileAlt } from 'react-icons/fa';
import { FIELD_DEFINITIONS, RECORD_TYPES } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 386
Component exports: 1

=== Component Analysis: RecordFilters ===
File: front-end/src/records/RecordFilters.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Form, Row, Col, Button } from 'react-bootstrap';
import { FaUndo } from 'react-icons/fa';
import { FIELD_DEFINITIONS } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 102
Component exports: 1

=== Component Analysis: RecordSearch ===
File: front-end/src/records/RecordSearch.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Row, Col, Form, Button } from 'react-bootstrap';
import { FaSearch, FaFilter, FaPlus } from 'react-icons/fa';
import { THEME_COLORS } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 137
Component exports: 1

=== Component Analysis: CertificatePreviewer ===
File: front-end/src/records/CertificatePreviewer.tsx
Date: Wed Jul 30 12:59:51 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { Modal, Button, Spinner, Alert } from 'react-bootstrap';
import { FaDownload, FaUndo } from 'react-icons/fa';
import { FIELD_DEFINITIONS } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 650
Component exports: 1

=== Component Analysis: ImportModal ===
File: front-end/src/records/ImportModal.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';
import { RECORD_TYPES } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 117
Component exports: 1

=== Component Analysis: RecordManager ===
File: front-end/src/records/RecordManager.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useRef } from 'react';
import { Card, Container } from 'react-bootstrap';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import RecordHeader from './RecordHeader';
import RecordSearch from './RecordSearch';
import RecordFilters from './RecordFilters';
import RecordTable from './RecordTable';
import RecordFormModal from './RecordFormModal';
import RecordHistoryModal from './RecordHistoryModal';
import CertificatePreviewer from './CertificatePreviewer';
import ImportModal from './ImportModal';
import DeleteConfirmationModal from './DeleteConfirmationModal';
import RecordPagination from './RecordPagination';
import useRecordManager from './useRecordManager';
import { RECORD_TYPES, THEME_COLORS, CSV_HEADERS } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 320
Component exports: 1

=== Component Analysis: RecordHeader ===
File: front-end/src/records/RecordHeader.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Row, Col, Button, Dropdown, OverlayTrigger, Tooltip } from 'react-bootstrap';
import { FaLock, FaUnlock, FaDownload, FaCloudUploadAlt, FaSignOutAlt, FaFileExcel, FaFilePdf } from 'react-icons/fa';
import { PDFDownloadLink } from '@react-pdf/renderer';
import { RECORD_TYPES, THEME_COLORS } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
// import { CSVLink } from 'react-csv';
import { PDFDownloadLink } from '@react-pdf/renderer';
                  <Dropdown.Item as={PDFDownloadLink} document={<PDFDocument records={records} />} fileName={`${recordType}_records.pdf`}>

--- METRICS ---
Lines of code: 168
Component exports: 1

=== Component Analysis: DeleteConfirmationModal ===
File: front-end/src/records/DeleteConfirmationModal.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Modal, Button } from 'react-bootstrap';
import { FaTrash } from 'react-icons/fa';
import { FIELD_DEFINITIONS, RECORD_TYPES } from './constants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 81
Component exports: 1

=== Component Analysis: DynamicMenuContext ===
File: front-end/src/contexts/DynamicMenuContext.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
import { useAuth } from '../context/AuthContext';
import MenuService, { MenuItem } from '../services/menuService';

--- PROPS/INTERFACES ---
interface DynamicMenuProviderProps {
    children: ReactNode;
}

export const DynamicMenuProvider: React.FC<DynamicMenuProviderProps> = ({ children }) => {
    const [menuItems, setMenuItems] = useState<MenuItem[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const { user, authenticated } = useAuth();

    const loadMenuItems = async () => {

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
    const [menuItems, setMenuItems] = useState<MenuItem[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    useEffect(() => {
    const context = useContext(DynamicMenuContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 100
Component exports: 3

=== Component Analysis: MenuVisibilityContext ===
File: front-end/src/contexts/MenuVisibilityContext.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

--- PROPS/INTERFACES ---
interface MenuVisibilityProviderProps {
    children: ReactNode;
}

export const MenuVisibilityProvider: React.FC<MenuVisibilityProviderProps> = ({ children }) => {
    const [visibleMenus, setVisibleMenus] = useState<MenuVisibilityState>(DEFAULT_MENU_VISIBILITY);
    const [extrasEnabled, setExtrasEnabled] = useState<boolean>(false); // Extras disabled by default
    const [isLoaded, setIsLoaded] = useState(false);

    // Load from localStorage after component mounts
    useEffect(() => {

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
    const [visibleMenus, setVisibleMenus] = useState<MenuVisibilityState>(DEFAULT_MENU_VISIBILITY);
    const [extrasEnabled, setExtrasEnabled] = useState<boolean>(false); // Extras disabled by default
    const [isLoaded, setIsLoaded] = useState(false);
    useEffect(() => {
    useEffect(() => {
    const context = useContext(MenuVisibilityContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 262
Component exports: 2

=== Component Analysis: NotificationContext ===
File: front-end/src/contexts/NotificationContext.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
import { useAuth } from '../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
    const context = useContext(NotificationContext);
    const [notifications, setNotifications] = useState<NotificationType[]>([]);
    const [counts, setCounts] = useState<NotificationCounts>({
    const [preferences, setPreferences] = useState<NotificationPreference[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
    fetchNotifications: (options?: {
    fetchCounts: () => Promise<void>;
    fetchPreferences: () => Promise<void>;
    const fetchNotifications = useCallback(async (options = {}) => {
            const response = await fetch(`/api/notifications?${params.toString()}`, {
                throw new Error('Failed to fetch notifications');
                setError(data.message || 'Failed to fetch notifications');
            setError(err.message || 'Failed to fetch notifications');
    const fetchCounts = useCallback(async () => {
            const response = await fetch('/api/notifications/counts', {
                throw new Error('Failed to fetch notification counts');
            console.error('Error fetching notification counts:', err);
    const fetchPreferences = useCallback(async () => {
            const response = await fetch('/api/notifications/preferences', {
                throw new Error('Failed to fetch notification preferences');
            console.error('Error fetching notification preferences:', err);
            const response = await fetch(`/api/notifications/${id}/read`, {
                fetchCounts(); // Refresh counts
    }, [fetchCounts]);
            const response = await fetch('/api/notifications/read-all', {
                fetchCounts(); // Refresh counts
    }, [fetchCounts]);
            const response = await fetch(`/api/notifications/${id}`, {
                fetchCounts(); // Refresh counts
    }, [fetchCounts]);
            const response = await fetch('/api/notifications/preferences', {
        fetchCounts(); // Refresh counts
    }, [fetchCounts]);
        fetchCounts(); // Refresh counts
    }, [fetchCounts]);
        fetchCounts(); // Refresh counts
    }, [fetchCounts]);
            fetchNotifications();
            fetchCounts();
            fetchPreferences();
    }, [authenticated, fetchNotifications, fetchCounts, fetchPreferences]);
            fetchCounts();
    }, [authenticated, fetchCounts]);
        fetchNotifications,
        fetchCounts,
        fetchPreferences,

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 421
Component exports: 5

=== Component Analysis: LightThemeColors ===
File: front-end/src/theme/LightThemeColors.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 106
Component exports: 1

=== Component Analysis: DefaultColors ===
File: front-end/src/theme/DefaultColors.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 135
Component exports: 1

=== Component Analysis: Components ===
File: front-end/src/theme/Components.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import './DefaultColors';
import { Theme } from '@mui/material/styles';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 515
Component exports: 1

=== Component Analysis: Theme ===
File: front-end/src/theme/Theme.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import _ from 'lodash';
import { createTheme } from '@mui/material/styles';
import { useContext, useEffect } from 'react';
import components from './Components';
import typography from './Typography';
import { shadows, darkshadows } from './Shadows';
import { DarkThemeColors } from './DarkThemeColors';
import { LightThemeColors } from './LightThemeColors';
import { baseDarkTheme, baselightTheme } from './DefaultColors';
import * as locales from '@mui/material/locale';
import { CustomizerContext } from '../context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext, useEffect } from 'react';
  const { activeMode, isBorderRadius } = useContext(CustomizerContext);
  const { activeTheme, activeDir } = useContext(CustomizerContext);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 2

=== Component Analysis: Shadows ===
File: front-end/src/theme/Shadows.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: Typography ===
File: front-end/src/theme/Typography.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: DarkThemeColors ===
File: front-end/src/theme/DarkThemeColors.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 111
Component exports: 1

=== Component Analysis: ThemeColors ===
File: front-end/src/theme/ThemeColors.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 84
Component exports: 1

=== Component Analysis: Test ===
File: front-end/src/Test.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 8
Component exports: 1

=== Component Analysis: LoadingBar ===
File: front-end/src/LoadingBar.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useState, useEffect } from 'react';
import TopLoadingBar from 'react-top-loading-bar';
import { useLocation } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState, useEffect } from 'react';
    const [progress, setProgress] = useState(0);
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useLocation } from 'react-router-dom';
    const location = useLocation(); // page navigation.

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: Banner ===
File: front-end/src/components/frontend-pages/pricing/Banner.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography, Container, Grid } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 52
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/contact/form/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Container, Grid, MenuItem, Button } from '@mui/material';
import CustomFormLabel from '../../../forms/theme-elements/CustomFormLabel';
import CustomTextField from '../../../forms/theme-elements/CustomTextField';
import CustomSelect from '../../../forms/theme-elements/CustomSelect';
import Address from './Address';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [number, setNumber] = React.useState('one');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 146
Component exports: 1

=== Component Analysis: Address ===
File: front-end/src/components/frontend-pages/contact/form/Address.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography, Divider } from '@mui/material';
import { styled } from '@mui/material/styles';
import Shape1 from 'src/assets/images/frontend-pages/contact/shape1.png';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/contact/banner/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography, Container, Grid } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 70
Component exports: 1

=== Component Analysis: Banner ===
File: front-end/src/components/frontend-pages/portfolio/Banner.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography, Container, Grid } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 52
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/blog/banner/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography, Container, Grid } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 1

=== Component Analysis: ContentArea ===
File: front-end/src/components/frontend-pages/about/key-metric/ContentArea.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: Key ===
File: front-end/src/components/frontend-pages/about/key-metric/Key.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Grid, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 67
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/about/key-metric/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Container, Grid } from '@mui/material';
import ContentArea from './ContentArea';
import Key from './Key';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 42
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/about/banner/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Stack, Typography, Container, Grid, Button } from '@mui/material';
import { Link } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
              <Button variant="contained" size="large" component={Link} to="/auth/register">

--- METRICS ---
Lines of code: 67
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/about/process/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Stack, Typography, Grid, Container, Divider } from '@mui/material';
import Icon1 from 'src/assets/images/svgs/icon-briefcase.svg';
import FeatureApp from 'src/assets/images/frontend-pages/homepage/feature-apps.png';
import IconBubble from 'src/assets/images/svgs/icon-speech-bubble.svg';
import IconFav from 'src/assets/images/svgs/icon-favorites.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 145
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/homepage/exceptional-feature/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography, Container } from '@mui/material';
import { styled } from '@mui/material/styles';
import { useTheme } from '@mui/material/styles';
import IconColor from 'src/assets/images/frontend-pages/icons/icon-color.svg';
import IconSidebar from 'src/assets/images/frontend-pages/icons/icon-sidebar.svg';
import IconPages from 'src/assets/images/frontend-pages/icons/icon-pages.svg';
import IconComponents from 'src/assets/images/frontend-pages/icons/icon-components.svg';
import IconFramework from 'src/assets/images/frontend-pages/icons/icon-framework.svg';
import IconIcons from 'src/assets/images/frontend-pages/icons/icon-icons.svg';
import IconResponsive from 'src/assets/images/frontend-pages/icons/icon-responsive.svg';
import IconSass from 'src/assets/images/frontend-pages/icons/icon-sass.svg';
import IconCustomize from 'src/assets/images/frontend-pages/icons/icon-customize.svg';
import IconChart from 'src/assets/images/frontend-pages/icons/icon-chart.svg';
import IconTable from 'src/assets/images/frontend-pages/icons/icon-table.svg';
import IconUpdate from 'src/assets/images/frontend-pages/icons/icon-update.svg';
import IconSupport from 'src/assets/images/frontend-pages/icons/icon-support.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 311
Component exports: 1

=== Component Analysis: DozensCarousel ===
File: front-end/src/components/frontend-pages/homepage/powerful-dozens/DozensCarousel.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import './carousel.css';
import { Box } from '@mui/material';
import Demo1 from 'src/assets/images/landingpage/demos/demo-main.jpg';
import Demo2 from 'src/assets/images/landingpage/demos/demo-dark.jpg';
import Demo3 from 'src/assets/images/landingpage/demos/demo-rtl.jpg';
import Demo4 from 'src/assets/images/landingpage/demos/demo-horizontal.jpg';
import App1 from 'src/assets/images/landingpage/apps/app-chat.jpg';
import App2 from 'src/assets/images/landingpage/apps/app-email.jpg';
import { NavLink } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { NavLink } from 'react-router-dom';
          <NavLink to="/dashboards/modern">
          </NavLink>
          <NavLink to="/dashboards/ecommerce">
          </NavLink>
          <NavLink to="/dashboards/modern">
          </NavLink>
          <NavLink to="/dashboards/modern">
          </NavLink>
          <NavLink to="/apps/chats">
          </NavLink>
          <NavLink to="/apps/email">
          </NavLink>

--- METRICS ---
Lines of code: 157
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/homepage/powerful-dozens/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography, Container } from '@mui/material';
import DozensCarousel from './DozensCarousel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 105
Component exports: 1

=== Component Analysis: FeatureTitle ===
File: front-end/src/components/frontend-pages/homepage/features/FeatureTitle.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: Features ===
File: front-end/src/components/frontend-pages/homepage/features/Features.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Stack, Typography, Grid, Container } from '@mui/material';
import FeatureTitle from './FeatureTitle';
import icon1 from 'src/assets/images/svgs/icon-briefcase.svg';
import FeatureApp from 'src/assets/images/frontend-pages/homepage/feature-apps.png';
import LogoIcon from 'src/assets/images/logos/logoIcon.svg';
import Screen1 from 'src/assets/images/frontend-pages/homepage/screen1.png';
import IconBubble from 'src/assets/images/svgs/icon-speech-bubble.svg';
import IconFav from 'src/assets/images/svgs/icon-favorites.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 152
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/homepage/faq/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography, Grid, Container, Link } from '@mui/material';
import { styled } from '@mui/material/styles';
import { IconMinus, IconPlus } from '@tabler/icons-react';
import { useTheme } from '@mui/material/styles';
import Accordion from '@mui/material/Accordion';
import AccordionSummary from '@mui/material/AccordionSummary';
import AccordionDetails from '@mui/material/AccordionDetails';
import { useState } from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [expanded, setExpanded] = useState(true);
  const [expanded2, setExpanded2] = useState(false);
  const [expanded3, setExpanded3] = useState(false);
  const [expanded4, setExpanded4] = useState(false);
  const [expanded5, setExpanded5] = useState(false);
  const [expanded6, setExpanded6] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Box, Typography, Grid, Container, Link } from '@mui/material';
            <Link
            </Link>
            <Link
            </Link>

--- METRICS ---
Lines of code: 265
Component exports: 1

=== Component Analysis: Banner ===
File: front-end/src/components/frontend-pages/homepage/banner/Banner.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import useMediaQuery from '@mui/material/useMediaQuery';
import Tooltip from '@mui/material/Tooltip';
import Dialog from '@mui/material/Dialog';
import DialogActions from '@mui/material/DialogActions';
import DialogContent from '@mui/material/DialogContent';
import icon1 from 'src/assets/images/frontend-pages/icons/icon-react.svg';
import icon2 from 'src/assets/images/frontend-pages/icons/icon-mui.svg';
import icon3 from 'src/assets/images/frontend-pages/icons/icon-next.svg';
import icon4 from 'src/assets/images/frontend-pages/icons/icon-ts.svg';
import icon5 from 'src/assets/images/frontend-pages/icons/logos_swr.svg';
import icon6 from 'src/assets/images/frontend-pages/icons/icon-tabler.svg';
import BannerTopLeft from 'src/assets/images/frontend-pages/homepage/banner-top-left.svg';
import BannerBottomPart from 'src/assets/images/frontend-pages/homepage/bottom-part.svg';
import BannerTopRight from 'src/assets/images/frontend-pages/homepage/banner-top-right.svg';
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';
import user3 from 'src/assets/images/profile/user-3.jpg';
import iconPlay from 'src/assets/images/frontend-pages/homepage/icon-play.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 438
Component exports: 1

=== Component Analysis: LiturgicalFlowBackground ===
File: front-end/src/components/frontend-pages/homepage/banner/LiturgicalFlowBackground.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Container, styled, keyframes } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 233
Component exports: 1

=== Component Analysis: LiturgicalFlowBackgroundTailwind ===
File: front-end/src/components/frontend-pages/homepage/banner/LiturgicalFlowBackgroundTailwind.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
interface LiturgicalFlowBackgroundTailwindProps {
  className?: string;
}

const LiturgicalFlowBackgroundTailwind: React.FC<LiturgicalFlowBackgroundTailwindProps> = ({ 
  className = '' 
}) => {
  return (
    <div className={`relative min-h-96 flex items-center justify-center overflow-hidden ${className}`}>
      {/* Animated Liturgical Color Background */}
      <div 

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 116
Component exports: 1

=== Component Analysis: AnimatedBanner ===
File: front-end/src/components/frontend-pages/homepage/banner/AnimatedBanner.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { motion } from 'framer-motion';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [currentIndex, setCurrentIndex] = useState(0);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 252
Component exports: 1

=== Component Analysis: MultilingualShowcase ===
File: front-end/src/components/frontend-pages/homepage/multilingual-showcase/MultilingualShowcase.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { 
import { 
import { motion } from 'framer-motion';
import { generateSVGThumbnail } from 'src/utils/thumbnailGenerator';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 236
Component exports: 1

=== Component Analysis: TabWorkflows ===
File: front-end/src/components/frontend-pages/homepage/defend-focus/TabWorkflows.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Divider, Typography, Grid, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { IconMinus, IconPlus } from '@tabler/icons-react';
import Accordion from '@mui/material/Accordion';
import AccordionSummary from '@mui/material/AccordionSummary';
import AccordionDetails from '@mui/material/AccordionDetails';
import { useState } from 'react';
import IconAcc from 'src/assets/images/frontend-pages/homepage/accordian1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [expanded, setExpanded] = useState(true);
  const [expanded2, setExpanded2] = useState(false);
  const [expanded3, setExpanded3] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 160
Component exports: 1

=== Component Analysis: TabPayments ===
File: front-end/src/components/frontend-pages/homepage/defend-focus/TabPayments.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Divider, Typography, Grid, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { IconMinus, IconPlus } from '@tabler/icons-react';
import Accordion from '@mui/material/Accordion';
import AccordionSummary from '@mui/material/AccordionSummary';
import AccordionDetails from '@mui/material/AccordionDetails';
import { useState } from 'react';
import IconAcc from 'src/assets/images/frontend-pages/homepage/accordian1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [expanded, setExpanded] = useState(true);
  const [expanded2, setExpanded2] = useState(false);
  const [expanded3, setExpanded3] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 163
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/homepage/defend-focus/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import { Box, Divider, Container } from '@mui/material';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { styled } from '@mui/material/styles';
import { IconAppWindow, IconArrowRampLeft, IconUserCircle, IconWallet } from '@tabler/icons-react';
import { useTheme } from '@mui/material/styles';
import TabTeamScheduling from './TabTeamScheduling';
import TabPayments from './TabPayments';
import TabEmbedding from './TabEmbedding';
import TabWorkflows from './TabWorkflows';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 127
Component exports: 1

=== Component Analysis: TabTeamScheduling ===
File: front-end/src/components/frontend-pages/homepage/defend-focus/TabTeamScheduling.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Divider, Typography, Grid, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { IconMinus, IconPlus } from '@tabler/icons-react';
import Accordion from '@mui/material/Accordion';
import AccordionSummary from '@mui/material/AccordionSummary';
import AccordionDetails from '@mui/material/AccordionDetails';
import { useState } from 'react';
import IconAcc from 'src/assets/images/frontend-pages/homepage/accordian1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [expanded, setExpanded] = useState(true);
  const [expanded2, setExpanded2] = useState(false);
  const [expanded3, setExpanded3] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 163
Component exports: 1

=== Component Analysis: TabEmbedding ===
File: front-end/src/components/frontend-pages/homepage/defend-focus/TabEmbedding.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Divider, Typography, Grid, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { IconMinus, IconPlus } from '@tabler/icons-react';
import Accordion from '@mui/material/Accordion';
import AccordionSummary from '@mui/material/AccordionSummary';
import AccordionDetails from '@mui/material/AccordionDetails';
import { useState } from 'react';
import IconAcc from 'src/assets/images/frontend-pages/homepage/accordian1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [expanded, setExpanded] = useState(true);
  const [expanded2, setExpanded2] = useState(false);
  const [expanded3, setExpanded3] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 165
Component exports: 1

=== Component Analysis: WhyChooseUsEnhanced ===
File: front-end/src/components/frontend-pages/homepage/why-choose-us/WhyChooseUsEnhanced.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useState } from "react";
import {
import {
import { motion } from 'framer-motion';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from "react";
  const [flipped, setFlipped] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 297
Component exports: 1

=== Component Analysis: BaptismRecordViewerMagnifier ===
File: front-end/src/components/frontend-pages/homepage/baptism-record-viewer/BaptismRecordViewerMagnifier.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Box, Typography, Container, Paper, Chip } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [hoveredField, setHoveredField] = useState<string | null>(null);
  const [mousePos, setMousePos] = useState<{ x: number; y: number }>({ x: 0, y: 0 });

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 267
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/shared/scroll-to-top/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useEffect, useState } from 'react';
import { IconArrowUp } from '@tabler/icons-react';
import { Fab } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useEffect, useState } from 'react';
  const [isVisible, setIsVisible] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/shared/footer/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Grid, Typography, Container, Divider, Stack, Tooltip } from '@mui/material';
import { Link, NavLink } from 'react-router-dom';
import IconFacebook from 'src/assets/images/frontend-pages/icons/icon-facebook.svg';
import IconTwitter from 'src/assets/images/frontend-pages/icons/icon-twitter.svg';
import IconInstagram from 'src/assets/images/frontend-pages/icons/icon-instagram.svg';
import LogoIcon from 'src/assets/images/logos/logoIcon.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link, NavLink } from 'react-router-dom';
const footerLinks = [
        {footerLinks.map((footerlink, i) => (
                  <Link to={`${child.link}`}>
                  </Link>
              <NavLink to="#">
              </NavLink>
              <NavLink to="#">
              </NavLink>
              <NavLink to="#">
              </NavLink>
          <Typography component={Link} color="primary.main" to="/">

--- METRICS ---
Lines of code: 230
Component exports: 1

=== Component Analysis: PricingCard ===
File: front-end/src/components/frontend-pages/shared/pricing/PricingCard.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography, Chip, CardContent, Divider, Stack, Button } from '@mui/material';
import BlankCard from '../../../shared/BlankCard';
import IconCheck from 'src/assets/images/frontend-pages/icons/icon-check.svg';
import IconClose from 'src/assets/images/frontend-pages/icons/icon-close.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 212
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/shared/pricing/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography, Container } from '@mui/material';
import PricingCard from './PricingCard';
import PaymentMethods from './PaymentMethods';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 48
Component exports: 1

=== Component Analysis: PaymentMethods ===
File: front-end/src/components/frontend-pages/shared/pricing/PaymentMethods.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Link, Typography, Tooltip } from '@mui/material';
import IconVisa from 'src/assets/images/frontend-pages/payments/icon-visa.svg';
import IconMasterCard from 'src/assets/images/frontend-pages/payments/icon-mastercard.svg';
import IconAmericanExpress from 'src/assets/images/frontend-pages/payments/icon-american-express.svg';
import IconDiscover from 'src/assets/images/frontend-pages/payments/icon-discover.svg';
import IconPaypal from 'src/assets/images/frontend-pages/payments/icon-paypal.svg';
import IcoMasetro from 'src/assets/images/frontend-pages/payments/icon-masetro.svg';
import IconJcb from 'src/assets/images/frontend-pages/payments/icon-jcb.svg';
import IconDiners from 'src/assets/images/frontend-pages/payments/icon-diners.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Box, Link, Typography, Tooltip } from '@mui/material';
        <Link href="#">
        </Link>
        <Link href="#">
        </Link>
        <Link href="#">
        </Link>
        <Link href="#">
        </Link>
        <Link href="#">
        </Link>
        <Link href="#">
        </Link>
        <Link href="#">
        </Link>
        <Link href="#">
        </Link>

--- METRICS ---
Lines of code: 72
Component exports: 1

=== Component Analysis: HpHeader ===
File: front-end/src/components/frontend-pages/shared/header/HpHeader.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import AppBar from '@mui/material/AppBar';
import Button from '@mui/material/Button';
import Container from '@mui/material/Container';
import Drawer from '@mui/material/Drawer';
import IconButton from '@mui/material/IconButton';
import Stack from '@mui/material/Stack';
import Toolbar from '@mui/material/Toolbar';
import useMediaQuery from '@mui/material/useMediaQuery';
import { styled } from '@mui/material/styles';
import Logo from '../../../../layouts/full/shared/logo/Logo';
import Navigations from './Navigations';
import MobileSidebar from './MobileSidebar';
import { IconMenu2 } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 92
Component exports: 1

=== Component Analysis: HeaderAlert ===
File: front-end/src/components/frontend-pages/shared/header/HeaderAlert.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import { Box, Stack, Typography, Chip, IconButton } from '@mui/material';
import { styled } from '@mui/material/styles';
import useMediaQuery from '@mui/material/useMediaQuery';
import { IconX } from '@tabler/icons-react';
import NotificationRight from 'src/assets/images/frontend-pages/homepage/notification-right.png';
import NotificationTopRight from 'src/assets/images/frontend-pages/homepage/notification-top-right.png';
import NotificationLeft from 'src/assets/images/frontend-pages/homepage/notification-left.png';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [isAlertVisible, setIsAlertVisible] = useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 113
Component exports: 1

=== Component Analysis: MobileSidebar ===
File: front-end/src/components/frontend-pages/shared/header/MobileSidebar.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box';
import Button from '@mui/material/Button';
import Stack from '@mui/material/Stack';
import Logo from '../../../../layouts/full/shared/logo/Logo';
import { NavLinks } from './Navigations';
import { Chip } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { NavLinks } from './Navigations';
          {NavLinks.map((navlink, i) => (

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: Navigations ===
File: front-end/src/components/frontend-pages/shared/header/Navigations.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import Button from '@mui/material/Button';
import { styled } from '@mui/material/styles';
import { Chip } from '@mui/material';
import { NavLink } from 'react-router-dom';
import { useLocation } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { NavLink } from 'react-router-dom';
import { useLocation } from 'react-router-dom';
export const NavLinks = [
  const location = useLocation();
      {NavLinks.map((navlink, i) => (
          <NavLink to={navlink.to}>
          </NavLink>

--- METRICS ---
Lines of code: 88
Component exports: 2

=== Component Analysis: ReviewCarousel ===
File: front-end/src/components/frontend-pages/shared/reviews/ReviewCarousel.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useState, useRef } from 'react';
import { Avatar, CardContent, Divider, Stack, Typography, Box, Paper } from '@mui/material';
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import { IconChevronLeft, IconChevronRight } from '@tabler/icons-react';
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';
import user3 from 'src/assets/images/profile/user-3.jpg';
import user4 from 'src/assets/images/profile/user-4.jpg';
import user5 from 'src/assets/images/profile/user-5.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState, useRef } from 'react';
  const [, setOldSlide] = useState(0);
  const [activeSlide, setActiveSlide] = useState(1);
  const [, setActiveSlide2] = useState(1);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 163
Component exports: 1

=== Component Analysis: ContentArea ===
File: front-end/src/components/frontend-pages/shared/reviews/ContentArea.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Typography } from '@mui/material';
import LogoIcon from 'src/assets/images/logos/logoIcon.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 42
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/shared/reviews/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Container } from '@mui/material';
import ContentArea from './ContentArea';
import ReviewCarousel from './ReviewCarousel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 48
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/shared/c2a/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography, Container, Stack, Button } from '@mui/material';
import useMediaQuery from '@mui/material/useMediaQuery';
import DesignCol from 'src/assets/images/frontend-pages/homepage/design-collection.png';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 109
Component exports: 1

=== Component Analysis: Contact ===
File: front-end/src/components/frontend-pages/shared/leadership/Contact.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Stack, Typography, Link, AvatarGroup, Container, Avatar } from '@mui/material';
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Box, Stack, Typography, Link, AvatarGroup, Container, Avatar } from '@mui/material';
          <Link
          </Link>

--- METRICS ---
Lines of code: 47
Component exports: 1

=== Component Analysis: LeaderShipCarousel ===
File: front-end/src/components/frontend-pages/shared/leadership/LeaderShipCarousel.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography } from '@mui/material';
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import { styled } from '@mui/material/styles';
import { IconArrowLeft, IconArrowRight } from '@tabler/icons-react';
import './carousel.css';
import { useTheme } from '@mui/material/styles';
import user1 from 'src/assets/images/frontend-pages/homepage/user1.jpg';
import user2 from 'src/assets/images/frontend-pages/homepage/user2.jpg';
import user3 from 'src/assets/images/frontend-pages/homepage/user3.jpg';
import user4 from 'src/assets/images/frontend-pages/homepage/user4.jpg';
import user5 from 'src/assets/images/frontend-pages/homepage/user5.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 255
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/frontend-pages/shared/leadership/index.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography, Container } from '@mui/material';
import 'slick-carousel/slick/slick.css';
import LeaderShipCarousel from './LeaderShipCarousel';
import Contact from './Contact';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 1

=== Component Analysis: ContactList ===
File: front-end/src/components/apps/contacts/ContactList.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useEffect, useState } from 'react';
import { List } from '@mui/material';
import { ContactContext } from 'src/context/ConatactContext/index'
import Scrollbar from 'src/components/custom-scroll/Scrollbar';
import ContactListItem from './ContactListItem';
import type { ContactType } from 'src/types/apps/contact';

--- PROPS/INTERFACES ---
type Props = {
  showrightSidebar: () => void;
};

const ContactList = ({ showrightSidebar }: Props) => {

  const {
    selectedDepartment,
    contacts,
    deleteContact,
    starredContacts,

--- STATE MANAGEMENT ---
import React, { useContext, useEffect, useState } from 'react';
  }: any = useContext(ContactContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 103
Component exports: 1

=== Component Analysis: ContactListItem ===
File: front-end/src/components/apps/contacts/ContactListItem.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import { IconStar, IconTrash } from '@tabler/icons-react';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
type Props = {
  onContactClick: (event: React.MouseEvent<HTMLElement>) => void;
  onStarredClick: React.MouseEventHandler<SVGElement>;
  onDeleteClick: React.MouseEventHandler<SVGElement>;
  id: string | number;
  firstname: string;
  lastname: string;
  image: string;
  department: string;
  starred: boolean;
  active: any;

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isBorderRadius } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 93
Component exports: 1

=== Component Analysis: ContactFilter ===
File: front-end/src/components/apps/contacts/ContactFilter.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import Scrollbar from 'src/components/custom-scroll/Scrollbar';
import { IconMail, IconSend, IconBucket, IconFolder } from '@tabler/icons-react';
import ContactAdd from './ContactAdd';
import { ContactContext } from "src/context/ConatactContext";
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isBorderRadius } = useContext(CustomizerContext);
  const { setSelectedDepartment, updateSearchTerm, selectedDepartment } = useContext(ContactContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 137
Component exports: 1

=== Component Analysis: ContactAdd ===
File: front-end/src/components/apps/contacts/ContactAdd.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import { ContactContext } from "src/context/ConatactContext";
import user1 from '../../../assets/images/profile/user-1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const [modal, setModal] = React.useState(false);
  const { addContact } = useContext(ContactContext);
  const [values, setValues] = React.useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 234
Component exports: 1

=== Component Analysis: ContactSearch ===
File: front-end/src/components/apps/contacts/ContactSearch.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { Box, Fab, TextField, InputAdornment } from '@mui/material';
import { ContactContext } from 'src/context/ConatactContext/index'
import { IconMenu2, IconSearch } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
type Props = {
  onClick: (event: React.MouseEvent<HTMLElement>) => void;
};

const ContactSearch = ({ onClick }: Props) => {

  const { updateSearchTerm, searchTerm } = useContext(ContactContext);

  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    updateSearchTerm(e.target.value);
  }

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { updateSearchTerm, searchTerm } = useContext(ContactContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 1

=== Component Analysis: ContactDetails ===
File: front-end/src/components/apps/contacts/ContactDetails.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { ChangeEvent, useContext, useEffect, useState } from 'react';
import {
import BlankCard from '../../shared/BlankCard';
import { ContactType } from 'src/types/apps/contact';
import { IconPencil, IconStar, IconTrash, IconDeviceFloppy } from '@tabler/icons-react';
import Scrollbar from 'src/components/custom-scroll/Scrollbar';
import emailIcon from 'src/assets/images/breadcrumb/emailSv.png';
import { ContactContext } from 'src/context/ConatactContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { ChangeEvent, useContext, useEffect, useState } from 'react';
  const [isEditMode, setIsEditMode] = useState<boolean>(false);
  const [formData, setFormData] = useState<ContactType | any | null>(null);
  } = useContext(ContactContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 352
Component exports: 1

=== Component Analysis: ProductTemplate ===
File: front-end/src/components/apps/ecommerce/productAdd/ProductTemplate.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import Box from '@mui/material/Box';
import { Grid, MenuItem, Typography } from '@mui/material';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [age, setAge] = useState('0');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: Pricing ===
File: front-end/src/components/apps/ecommerce/productAdd/Pricing.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import Box from '@mui/material/Box';
import { Typography, FormControlLabel, RadioGroup, Stack, useTheme } from '@mui/material';
import Grid from '@mui/material/Grid';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import { MenuItem } from '@mui/material';
import CustomRadio from 'src/components/forms/theme-elements/CustomRadio';
import CustomSlider from 'src/components/forms/theme-elements/CustomSlider';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [age, setAge] = useState('0');
  const [selectedValue, setSelectedValue] = useState('');
  const [value3, setValue3] = useState(30);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 186
Component exports: 1

=== Component Analysis: Thumbnail ===
File: front-end/src/components/apps/ecommerce/productAdd/Thumbnail.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import Box from "@mui/material/Box";
import { Typography, useTheme, Chip } from "@mui/material";
import { useDropzone } from "react-dropzone";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 62
Component exports: 1

=== Component Analysis: ProductDetails ===
File: front-end/src/components/apps/ecommerce/productAdd/ProductDetails.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import Box from "@mui/material/Box";
import { Autocomplete, Button, Grid, Typography } from "@mui/material";
import CustomFormLabel from "src/components/forms/theme-elements/CustomFormLabel";
import CustomTextField from "src/components/forms/theme-elements/CustomTextField";
import { IconPlus } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 84
Component exports: 1

=== Component Analysis: VariationCard ===
File: front-end/src/components/apps/ecommerce/productAdd/VariationCard.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import Box from '@mui/material/Box';
import { Button, Grid, Tooltip, MenuItem } from '@mui/material';
import { Typography } from '@mui/material';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import { IconX } from '@tabler/icons-react';
import { IconPlus } from '@tabler/icons-react';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [age, setAge] = useState('0');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: GeneralCard ===
File: front-end/src/components/apps/ecommerce/productAdd/GeneralCard.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box';
import { Typography } from '@mui/material';
import Grid from '@mui/material/Grid';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import TiptapEdit from 'src/views/forms/from-tiptap/TiptapEdit';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 43
Component exports: 1

=== Component Analysis: Status ===
File: front-end/src/components/apps/ecommerce/productAdd/Status.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import Box from '@mui/material/Box';
import { Grid, Typography } from '@mui/material';
import { MenuItem, Avatar } from '@mui/material';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [status, setStatus] = useState(0);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: Media ===
File: front-end/src/components/apps/ecommerce/productAdd/Media.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import Box from "@mui/material/Box";
import { Chip, Typography, useTheme } from "@mui/material";
import { useDropzone } from "react-dropzone";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: ProductTableList ===
File: front-end/src/components/apps/ecommerce/ProductTableList/ProductTableList.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useState } from 'react';
import { alpha, useTheme } from '@mui/material/styles';
import { format } from 'date-fns';
import {
import { visuallyHidden } from '@mui/utils';
import CustomCheckbox from '../../../forms/theme-elements/CustomCheckbox';
import CustomSwitch from '../../../forms/theme-elements/CustomSwitch';
import { IconDotsVertical, IconFilter, IconSearch, IconTrash } from '@tabler/icons-react';
import { ProductType } from 'src/types/apps/eCommerce';
import { ProductContext } from "src/context/EcommerceContext";

--- PROPS/INTERFACES ---
interface EnhancedTableProps {
  numSelected: number;
  onRequestSort: (event: React.MouseEvent<unknown>, property: any) => void;
  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;
  order: Order;
  orderBy: string;
  rowCount: number;
}

function EnhancedTableHead(props: EnhancedTableProps) {
  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;
--
interface EnhancedTableToolbarProps {
  numSelected: number;
  handleSearch: React.ChangeEvent<HTMLInputElement> | any;
  search: string;
}

const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {
  const { numSelected, handleSearch, search } = props;

  return (
    <Toolbar

--- STATE MANAGEMENT ---
import React, { useContext, useState } from 'react';
  }: any = useContext(ProductContext);
  const [order, setOrder] = React.useState<Order>('asc');
  const [orderBy, setOrderBy] = React.useState<any>('calories');
  const [selected, setSelected] = React.useState<readonly string[]>([]);
  const [page, setPage] = React.useState(0);
  const [dense, setDense] = React.useState(false);
  const [rowsPerPage, setRowsPerPage] = React.useState(5);
  const [rows, setRows] = React.useState<any>(filteredAndSortedProducts || []);
  const [search, setSearch] = React.useState('');
  React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 461
Component exports: 1

=== Component Analysis: ProductDesc ===
File: front-end/src/components/apps/ecommerce/productDetail/ProductDesc.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { IconPencil } from '@tabler/icons-react';
import ChildCard from 'src/components/shared/ChildCard';

--- PROPS/INTERFACES ---
interface ProductCardProps {
  like: number;
  star: number;
  value?: number;
}

interface TabProps {
  children: React.ReactNode;
  index: number;
  value?: number;
}

// progress
function ProgressBar({ like, star, value, ...others }: ProductCardProps) {
  return (
    <Box display={'flex'} alignItems="center" gap="20px">
      <Box sx={{ minWidth: 50 }}>

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState(0);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 202
Component exports: 1

=== Component Analysis: ProductDetail ===
File: front-end/src/components/apps/ecommerce/productDetail/ProductDetail.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useContext, useState } from 'react';
import { useParams } from 'react-router-dom';
import { Link } from 'react-router-dom';
import {
import { ProductContext } from "src/context/EcommerceContext";
import { IconCheck, IconMinus, IconPlus } from '@tabler/icons-react';
import AlertCart from '../productCart/AlertCart';
import { ProductType } from 'src/types/apps/eCommerce';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext, useState } from 'react';
  const { products, addToCart } = useContext(ProductContext);
  const [scolor, setScolor] = useState(product ? product.colors[0] : '');
  const [count, setCount] = useState(1);
  const [cartalert, setCartalert] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
            <Link to="/" color="inherit">
            </Link>
                component={Link}
          <Link to="/" color="inherit">
          </Link>

--- METRICS ---
Lines of code: 217
Component exports: 1

=== Component Analysis: ProductRelated ===
File: front-end/src/components/apps/ecommerce/productDetail/ProductRelated.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { useEffect, useState } from 'react';
import { Box, Stack, Typography, CardContent, Grid, Rating, Skeleton } from '@mui/material';
import { Link } from 'react-router-dom';
import BlankCard from '../../../shared/BlankCard';
import ProductsData from "src/api/eCommerce/ProductsData";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useEffect, useState } from 'react';
  const [isLoading, setLoading] = useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                  <Typography component={Link} to={`/apps/ecommerce/detail/${product.id}`}>

--- METRICS ---
Lines of code: 73
Component exports: 1

=== Component Analysis: ProductCarousel ===
File: front-end/src/components/apps/ecommerce/productDetail/ProductCarousel.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useEffect, useRef } from 'react';
import { Box } from '@mui/material';
import { useParams } from 'react-router-dom';
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import './Carousel.css';
import SliderData from './SliderData';
import { ProductContext } from "src/context/EcommerceContext";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect, useRef } from 'react';
  const { products } = useContext(ProductContext);
  const [state, setState] = React.useState<any>({ nav1: null, nav2: null });
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 98
Component exports: 1

=== Component Analysis: ProductFilter ===
File: front-end/src/components/apps/ecommerce/productGrid/ProductFilter.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import { ProductContext } from "src/context/EcommerceContext";
import {
import { ProductFiterType } from 'src/types/apps/eCommerce';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  } = useContext(ProductContext);
  const { isBorderRadius } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 306
Component exports: 1

=== Component Analysis: ProductSidebar ===
File: front-end/src/components/apps/ecommerce/productGrid/ProductSidebar.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Drawer, Theme, useMediaQuery } from '@mui/material';
import ProductFilter from './ProductFilter';

--- PROPS/INTERFACES ---
interface Props {
  isMobileSidebarOpen: boolean;
  onSidebarClose: (event: React.SyntheticEvent | Event) => void;
}

const ProductSidebar = ({ isMobileSidebarOpen, onSidebarClose }: Props) => {
  const lgUp = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'));

  return (
    <Drawer
      open={isMobileSidebarOpen}

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: ProductSearch ===
File: front-end/src/components/apps/ecommerce/productGrid/ProductSearch.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { TextField, InputAdornment } from '@mui/material';
import { IconSearch } from '@tabler/icons-react';
import { ProductContext } from "src/context/EcommerceContext";
import { useContext } from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from 'react';
  const { searchProducts } = useContext(ProductContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 38
Component exports: 1

=== Component Analysis: ProductList ===
File: front-end/src/components/apps/ecommerce/productGrid/ProductList.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useContext } from 'react';
import {
import { Link } from 'react-router-dom';
import { ProductContext } from "src/context/EcommerceContext";
import ProductSearch from './ProductSearch';
import { IconBasket, IconMenu2 } from '@tabler/icons-react';
import AlertCart from '../productCart/AlertCart';
import emptyCart from 'src/assets/images/products/empty-shopping-cart.svg';
import BlankCard from '../../../shared/BlankCard';

--- PROPS/INTERFACES ---
interface Props {
  onClick: (event: React.SyntheticEvent | Event) => void;
}

const ProductList = ({ onClick }: Props) => {


  const { filteredAndSortedProducts, addToCart, filterReset } =
    useContext(ProductContext);

  const lgUp = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'));

--- STATE MANAGEMENT ---
import React, { useEffect, useContext } from 'react';
    useContext(ProductContext);
  const [cartalert, setCartalert] = React.useState(false);
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                    <Typography component={Link} to={`/apps/ecommerce/detail/${product.id}`}>

--- METRICS ---
Lines of code: 191
Component exports: 1

=== Component Analysis: ThirdStep ===
File: front-end/src/components/apps/ecommerce/productCheckout/ThirdStep.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Grid, Paper, Radio, Stack, Typography } from '@mui/material';
import Paypal from 'src/assets/images/svgs/paypal.svg';
import payment from 'src/assets/images/products/payment.svg';
import mastercard from 'src/assets/images/svgs/mastercard.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [selectedValue, setSelectedValue] = React.useState('Free delivery');
  const [selectedPyament, setSelectedPyament] = React.useState('paypal');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 167
Component exports: 1

=== Component Analysis: FirstStep ===
File: front-end/src/components/apps/ecommerce/productCheckout/FirstStep.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography, Stack } from '@mui/material';
import React from 'react';
import ChildCard from '../../../shared/ChildCard';

--- PROPS/INTERFACES ---
interface Props {
  total: number;
  Discount: number;
}

const FirstStep = ({ total, Discount }: Props) => {
  return (
    <>
      <Box my={3}>
        <ChildCard>
          <Box p={2}>

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: HorizontalStepper ===
File: front-end/src/components/apps/ecommerce/productCheckout/HorizontalStepper.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Box from '@mui/material/Box';
import Stepper from '@mui/material/Stepper';
import Step from '@mui/material/Step';
import StepLabel from '@mui/material/StepLabel';
import Button from '@mui/material/Button';
import { Link } from 'react-router-dom';

--- PROPS/INTERFACES ---
interface Props {
  children: any | any[]
  steps: any[];
  activeStep: number;
  handleReset: (event: React.SyntheticEvent | Event) => void;
  finalStep: any | any[]
}



const HorizontalStepper = ({ children, steps, activeStep, handleReset, finalStep }: Props) => {

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
            <Button variant="contained" color="success" component={Link} to="/apps/ecommerce/shop">

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: SecondStep ===
File: front-end/src/components/apps/ecommerce/productCheckout/SecondStep.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Typography, Grid, Button, Paper } from '@mui/material';
import { IconDeviceMobile } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
interface Props {
  nexStep: (event: React.SyntheticEvent | Event) => void;
}

const SecondStep = ({ nexStep }: Props) => {
  return (<>
    <Grid container spacing={3} mb={3} mt={1}>
      {Myaddress.map((address) => (
        <Grid
          key={address.id}
          size={{

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 66
Component exports: 1

=== Component Analysis: FinalStep ===
File: front-end/src/components/apps/ecommerce/productCheckout/FinalStep.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import { Box, Typography } from '@mui/material';
import payment from 'src/assets/images/products/payment-complete.gif';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: ProductCheckout ===
File: front-end/src/components/apps/ecommerce/productCheckout/ProductCheckout.tsx
Date: Wed Jul 30 12:59:52 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { sum } from 'lodash';
import { Box, Stack, Button } from '@mui/material';
import AddToCart from '../productCart/AddToCart';
import { IconArrowBack } from '@tabler/icons-react';
import HorizontalStepper from './HorizontalStepper';
import FirstStep from './FirstStep';
import SecondStep from './SecondStep';
import ThirdStep from './ThirdStep';
import FinalStep from './FinalStep';
import { ProductType } from 'src/types/apps/eCommerce';
import { ProductContext } from "src/context/EcommerceContext";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { cartItems } = useContext(ProductContext);
  const [activeStep, setActiveStep] = React.useState(0);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 117
Component exports: 1

=== Component Analysis: ProductTemplate ===
File: front-end/src/components/apps/ecommerce/productEdit/ProductTemplate.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import Box from '@mui/material/Box';
import { Grid, MenuItem, Typography } from '@mui/material';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [age, setAge] = useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: CustomersReviews ===
File: front-end/src/components/apps/ecommerce/productEdit/CustomersReviews.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import {
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';
import user3 from 'src/assets/images/profile/user-3.jpg';
import user4 from 'src/assets/images/profile/user-4.jpg';
import user5 from 'src/assets/images/profile/user-5.jpg';
import user6 from 'src/assets/images/profile/user-6.jpg';
import user7 from 'src/assets/images/profile/user-7.jpg';
import user8 from 'src/assets/images/profile/user-8.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 161
Component exports: 1

=== Component Analysis: Pricing ===
File: front-end/src/components/apps/ecommerce/productEdit/Pricing.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import Box from '@mui/material/Box';
import { Typography, FormControlLabel, RadioGroup, Stack, useTheme } from '@mui/material';
import { Grid } from '@mui/material';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import { MenuItem } from '@mui/material';
import CustomRadio from 'src/components/forms/theme-elements/CustomRadio';
import CustomSlider from 'src/components/forms/theme-elements/CustomSlider';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [age, setAge] = React.useState('1');
  const [selectedValue, setSelectedValue] = useState('percentage');
  const [value3, setValue3] = React.useState(30);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 183
Component exports: 1

=== Component Analysis: Thumbnail ===
File: front-end/src/components/apps/ecommerce/productEdit/Thumbnail.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef } from 'react';
import Box from '@mui/material/Box';
import { Typography } from '@mui/material';
import img4 from 'src/assets/images/blog/blog-img1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useRef } from 'react';
  const [imageFile, setImageFile] = useState<File | null>(null);
  const [imageUrl, setImageUrl] = useState<string | null>(img4);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 76
Component exports: 1

=== Component Analysis: ProductAvgSales ===
File: front-end/src/components/apps/ecommerce/productEdit/ProductAvgSales.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import { Chip, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 110
Component exports: 1

=== Component Analysis: ProductDetails ===
File: front-end/src/components/apps/ecommerce/productEdit/ProductDetails.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box';
import { Autocomplete, Button, Grid, Typography } from '@mui/material';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import { IconPlus } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 82
Component exports: 1

=== Component Analysis: VariationCard ===
File: front-end/src/components/apps/ecommerce/productEdit/VariationCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import Box from '@mui/material/Box';
import { Button, Grid, Tooltip, MenuItem } from '@mui/material';
import { Typography } from '@mui/material';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import { IconX } from '@tabler/icons-react';
import { IconPlus } from '@tabler/icons-react';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [age, setAge] = useState('4');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: GeneralCard ===
File: front-end/src/components/apps/ecommerce/productEdit/GeneralCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box';
import { Typography } from '@mui/material';
import { Grid } from '@mui/material';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import TiptapEdit from 'src/views/forms/from-tiptap/TiptapEdit';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 48
Component exports: 1

=== Component Analysis: Status ===
File: front-end/src/components/apps/ecommerce/productEdit/Status.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import Box from '@mui/material/Box';
import { Grid, Typography } from '@mui/material';
import { MenuItem, Avatar } from '@mui/material';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [status, setStatus] = useState(2);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: Media ===
File: front-end/src/components/apps/ecommerce/productEdit/Media.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import Box from "@mui/material/Box";
import { Chip, Typography, useTheme } from "@mui/material";
import { useDropzone } from "react-dropzone";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: AlertCart ===
File: front-end/src/components/apps/ecommerce/productCart/AlertCart.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import { Snackbar, Alert } from '@mui/material';

--- PROPS/INTERFACES ---
interface Props {
  handleClose: (event: React.SyntheticEvent | any) => void;
  openCartAlert: boolean;
}

const AlertCart = ({ handleClose, openCartAlert }: Props) => {
  return (
    <React.Fragment>
      <Snackbar
        open={openCartAlert}
        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: AddToCart ===
File: front-end/src/components/apps/ecommerce/productCart/AddToCart.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import { Link } from 'react-router-dom';
import { IconMinus, IconPlus, IconTrash } from '@tabler/icons-react';
import emptyCart from 'src/assets/images/products/empty-shopping-cart.svg';
import { ProductContext } from 'src/context/EcommerceContext/index';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  } = useContext(ProductContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
          <Button component={Link} to="/apps/ecommerce/shop" variant="contained">

--- METRICS ---
Lines of code: 118
Component exports: 1

=== Component Analysis: EmailSearch ===
File: front-end/src/components/apps/email/EmailSearch.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { Box, Fab, TextField, InputAdornment } from '@mui/material';
import { IconMenu2, IconSearch } from '@tabler/icons-react';
import { EmailContext } from 'src/context/EmailContext';

--- PROPS/INTERFACES ---
interface Props {
  onClick: React.MouseEventHandler<HTMLButtonElement>;
}

const EmailSearch = ({ onClick }: Props) => {

  const { setSearchQuery, searchQuery } = useContext(EmailContext);

  const handleSearchChange = (event: { target: { value: string; }; }) => {
    const query = event.target.value.toLowerCase();
    setSearchQuery(query);

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { setSearchQuery, searchQuery } = useContext(EmailContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: EmailActions ===
File: front-end/src/components/apps/email/EmailActions.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Button, ButtonGroup } from '@mui/material';
import { IconFolder, IconActivity, IconTag } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: EmailCompose ===
File: front-end/src/components/apps/email/EmailCompose.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import { TransitionProps } from '@mui/material/transitions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [open, setOpen] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 101
Component exports: 1

=== Component Analysis: EmailContent ===
File: front-end/src/components/apps/email/EmailContent.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useContext } from 'react';
import {
import { IconStar, IconAlertCircle, IconTrash } from '@tabler/icons-react';
import emailIcon from 'src/assets/images/breadcrumb/emailSv.png';
import { EmailContext } from "src/context/EmailContext";
import TiptapEdit from 'src/views/forms/from-tiptap/TiptapEdit'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useContext } from 'react';
    useContext(EmailContext);
  const [show, setShow] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 200
Component exports: 1

=== Component Analysis: EmailList ===
File: front-end/src/components/apps/email/EmailList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useEffect, useState } from 'react';
import { List } from '@mui/material';
import EmailListItem from './EmailListItem';
import Scrollbar from 'src/components/custom-scroll/Scrollbar';
import { EmailContext } from 'src/context/EmailContext';

--- PROPS/INTERFACES ---
interface Props {
  showrightSidebar: React.MouseEventHandler;
}

const EmailList = ({ showrightSidebar }: Props) => {

  const { emails, setSelectedEmail, deleteEmail, filter, toggleStar, toggleImportant, searchQuery } = useContext(EmailContext);


  const [checkedItems, setCheckedItems] = useState<{ [key: number]: boolean }>({});
  const [selectedEmailId, setSelectedEmailId] = useState(emails.length > 0 ? emails[0].id : null);

--- STATE MANAGEMENT ---
import React, { useContext, useEffect, useState } from 'react';
  const { emails, setSelectedEmail, deleteEmail, filter, toggleStar, toggleImportant, searchQuery } = useContext(EmailContext);
  const [checkedItems, setCheckedItems] = useState<{ [key: number]: boolean }>({});
  const [selectedEmailId, setSelectedEmailId] = useState(emails.length > 0 ? emails[0].id : null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 93
Component exports: 1

=== Component Analysis: EmailFilter ===
File: front-end/src/components/apps/email/EmailFilter.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import { EmailContext } from "src/context/EmailContext";
import EmailCompose from './EmailCompose';
import Scrollbar from 'src/components/custom-scroll/Scrollbar';
import {
import { GeneralIcon } from 'src/types/apps/icon';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isBorderRadius } = useContext(CustomizerContext);
  const { setFilter, filter } = useContext(EmailContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 186
Component exports: 1

=== Component Analysis: EmailListItem ===
File: front-end/src/components/apps/email/EmailListItem.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import CustomCheckbox from 'src/components/forms/theme-elements/CustomCheckbox';
import { IconAlertCircle, IconStar, IconTrash } from '@tabler/icons-react';
import { formatDistanceToNowStrict } from 'date-fns';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 127
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/apps/invoice/Add-invoice/index.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useContext, useEffect } from 'react';
import { InvoiceContext } from 'src/context/InvoiceContext';
import {
import { useNavigate } from 'react-router-dom';
import { format, isValid } from 'date-fns';
import { IconPlus, IconSquareRoundedPlus, IconTrash } from '@tabler/icons-react';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useContext, useEffect } from 'react';
  const { addInvoice, invoices } = useContext(InvoiceContext);
  const [showAlert, setShowAlert] = useState(false);
  const [formData, setFormData] = useState({
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const router = useNavigate();

--- METRICS ---
Lines of code: 443
Component exports: 1

=== Component Analysis: InvoicePDFPreview ===
File: front-end/src/components/apps/invoice/Invoice-detail/InvoicePDFPreview.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { Invoice } from 'src/types/orthodox-metrics.types';
import { downloadInvoicePDF, LANGUAGE_LABELS } from 'src/utils/invoicePDFGenerator';

--- PROPS/INTERFACES ---
interface InvoicePDFPreviewProps {
    invoice: Invoice;
}

const InvoicePDFPreview: React.FC<InvoicePDFPreviewProps> = ({ invoice }) => {
    const [generating, setGenerating] = React.useState<string | null>(null);

    const handleDownloadPDF = async (language?: string) => {
        try {
            setGenerating(language || 'default');
            await downloadInvoicePDF(invoice, {

--- STATE MANAGEMENT ---
    const [generating, setGenerating] = React.useState<string | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 169
Component exports: 1

=== Component Analysis: ModernInvoiceDetail ===
File: front-end/src/components/apps/invoice/Invoice-detail/ModernInvoiceDetail.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import {
import { format, parseISO } from 'date-fns';
import { useInvoiceContext } from 'src/context/InvoiceContext';
import { Invoice } from 'src/types/orthodox-metrics.types';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [invoice, setInvoice] = useState<Invoice | null>(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [actionLoading, setActionLoading] = useState<string | null>(null);
    useEffect(() => {

--- API INTEGRATION ---
            fetchInvoice();
    const fetchInvoice = async () => {
            console.error('Error fetching invoice:', err);

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 387
Component exports: 1

=== Component Analysis: ModernInvoiceDetail.simple ===
File: front-end/src/components/apps/invoice/Invoice-detail/ModernInvoiceDetail.simple.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import {
import { format, parseISO } from 'date-fns';
import { useInvoiceContext } from 'src/context/InvoiceContext';
import { Invoice } from 'src/types/orthodox-metrics.types';
import { LANGUAGE_LABELS } from 'src/utils/invoicePDFGenerator';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [invoice, setInvoice] = useState<Invoice | null>(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [actionLoading, setActionLoading] = useState<string | null>(null);
    const [pdfMenuAnchor, setPdfMenuAnchor] = useState<null | HTMLElement>(null);
    useEffect(() => {

--- API INTEGRATION ---
            fetchInvoice();
    const fetchInvoice = async () => {
            console.error('Error fetching invoice:', err);
            await fetchInvoice(); // Refresh invoice data

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 495
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/apps/invoice/Invoice-detail/index.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import ModernInvoiceDetail from './ModernInvoiceDetail.simple';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 7
Component exports: 1

=== Component Analysis: ModernInvoiceEdit.simple ===
File: front-end/src/components/apps/invoice/Edit-invoice/ModernInvoiceEdit.simple.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import {
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';
import { useInvoiceContext } from 'src/context/InvoiceContext';
import { Invoice, CreateInvoiceData } from 'src/types/orthodox-metrics.types';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [invoice, setInvoice] = useState<Invoice | null>(null);
    const [loading, setLoading] = useState(true);
    const [saving, setSaving] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [formData, setFormData] = useState({
    const [items, setItems] = useState<EditableInvoiceItem[]>([]);
    useEffect(() => {

--- API INTEGRATION ---
            fetchInvoice();
    const fetchInvoice = async () => {
            console.error('Error fetching invoice:', err);

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 492
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/apps/invoice/Edit-invoice/index.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import ModernInvoiceEdit from './ModernInvoiceEdit.simple';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 8
Component exports: 1

=== Component Analysis: ModernInvoiceEdit ===
File: front-end/src/components/apps/invoice/Edit-invoice/ModernInvoiceEdit.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import {
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';
import { useInvoiceContext } from 'src/context/InvoiceContext';
import { Invoice, CreateInvoiceData } from 'src/types/orthodox-metrics.types';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [invoice, setInvoice] = useState<Invoice | null>(null);
    const [loading, setLoading] = useState(true);
    const [saving, setSaving] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [formData, setFormData] = useState({
    const [items, setItems] = useState<EditableInvoiceItem[]>([]);
    useEffect(() => {

--- API INTEGRATION ---
            fetchInvoice();
    const fetchInvoice = async () => {
            console.error('Error fetching invoice:', err);

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 523
Component exports: 1

=== Component Analysis: InvoiceViewByNumber ===
File: front-end/src/components/apps/invoice/Invoice-view/InvoiceViewByNumber.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import {
import { format, parseISO } from 'date-fns';
import { useInvoiceContext } from 'src/context/InvoiceContext';
import { Invoice } from 'src/types/orthodox-metrics.types';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [invoice, setInvoice] = useState<Invoice | null>(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [actionLoading, setActionLoading] = useState<string | null>(null);
    useEffect(() => {

--- API INTEGRATION ---
            fetchInvoice();
    const fetchInvoice = async () => {
            console.error('Error fetching invoice:', err);

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 391
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/apps/invoice/Invoice-view/index.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import InvoiceViewByNumber from './InvoiceViewByNumber';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 8
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/apps/invoice/Invoice-list/index.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import ModernInvoiceList from './ModernInvoiceList';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 2
Component exports: 1

=== Component Analysis: ModernInvoiceList ===
File: front-end/src/components/apps/invoice/Invoice-list/ModernInvoiceList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useInvoiceContext } from 'src/context/InvoiceContext';
import { InvoiceStatus } from 'src/types/apps/invoice';
import { Invoice } from 'src/types/orthodox-metrics.types';
import { Link } from 'react-router-dom';
import { format } from 'date-fns';
import logger from 'src/utils/logger';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  React.useEffect(() => {
  React.useEffect(() => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedInvoices, setSelectedInvoices] = useState<number[]>([]);
  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  const [selectedInvoiceId, setSelectedInvoiceId] = useState<number | null>(null);
  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);
  const [statusFilter, setStatusFilter] = useState<InvoiceStatus | 'all'>('all');
  const [exportFormat, setExportFormat] = useState<'csv' | 'xlsx' | 'pdf'>('xlsx');

--- API INTEGRATION ---
    fetchInvoices,
        <Button onClick={fetchInvoices} startIcon={<IconRefresh />}>

--- ROUTING ---
import { Link } from 'react-router-dom';
              component={Link}
                                component={Link}
                                component={Link}
        component={Link}

--- METRICS ---
Lines of code: 903
Component exports: 15

=== Component Analysis: TaskData ===
File: front-end/src/components/apps/kanban/TaskData.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useContext, useEffect, useState } from 'react';
import { IconPencil, IconDotsVertical, IconTrash, IconCalendar } from '@tabler/icons-react';
import EditTaskModal from './TaskModal/EditTaskModal';
import { KanbanDataContext } from 'src/context/kanbancontext/index';
import { Draggable } from '@hello-pangea/dnd';
import { patchFetcher } from "src/api/globalFetcher";
import Menu from '@mui/material/Menu';
import MenuItem from '@mui/material/MenuItem';
import {
import BlankCard from '../../shared/BlankCard';
import dayjs from 'dayjs';
import { mutate } from 'swr';

--- PROPS/INTERFACES ---
interface TaskDataProps {
  task: { id: any };
  onDeleteTask: () => void;
  index: number;
  category: any;

}
const TaskData: React.FC<TaskDataProps> = ({ task, onDeleteTask, index, category }: any) => {
  const { setError, todoCategories, setTodoCategories } = useContext(KanbanDataContext);
  const [showEditModal, setShowEditModal] = useState(false);
  const [editedTask, setEditedTask] = useState(task);

--- STATE MANAGEMENT ---
import { useContext, useEffect, useState } from 'react';
  const { setError, todoCategories, setTodoCategories } = useContext(KanbanDataContext);
  const [showEditModal, setShowEditModal] = useState(false);
  const [editedTask, setEditedTask] = useState(task);
  const [anchorEl, setAnchorEl] = useState(null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 218
Component exports: 1

=== Component Analysis: KanbanHeader ===
File: front-end/src/components/apps/kanban/KanbanHeader.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useState, useContext } from 'react';
import { KanbanDataContext } from 'src/context/kanbancontext/index';
import {
import CustomFormLabel from '../../forms/theme-elements/CustomFormLabel';
import CustomTextField from '../../forms/theme-elements/CustomTextField';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState, useContext } from 'react';
  const { addCategory, setError } = useContext(KanbanDataContext);
  const [show, setShow] = useState(false);
  const [listName, setListName] = useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 91
Component exports: 1

=== Component Analysis: TaskManager ===
File: front-end/src/components/apps/kanban/TaskManager.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useContext } from 'react';
import KanbanHeader from './KanbanHeader';
import { KanbanDataContext } from 'src/context/kanbancontext/index';
import CategoryTaskList from './CategoryTaskList';
import { DragDropContext, Droppable } from '@hello-pangea/dnd';
import SimpleBar from 'simplebar-react';
import { Box } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from 'react';
  const { todoCategories, moveTask } = useContext(KanbanDataContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 56
Component exports: 1

=== Component Analysis: EditCategoryModal ===
File: front-end/src/components/apps/kanban/TaskModal/EditCategoryModal.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useState } from 'react';
import { Button, Dialog, DialogTitle, DialogContent, Grid, DialogActions } from '@mui/material';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useState } from 'react';
  const [newCategoryName, setNewCategoryName] = useState(initialCategoryName || '');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: AddNewTaskModal ===
File: front-end/src/components/apps/kanban/TaskModal/AddNewTaskModal.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { TaskProperties } from '../../../../api/kanban/KanbanData';
import {
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 183
Component exports: 1

=== Component Analysis: EditTaskModal ===
File: front-end/src/components/apps/kanban/TaskModal/EditTaskModal.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { useEffect, useState } from 'react';
import { TaskProperties } from '../../../../api/kanban/KanbanData';
import {
import Dialog from '@mui/material/Dialog';
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel';
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useEffect, useState } from 'react';
  const [tempEditedTask, setTempEditedTask] = useState(editedTask);
  const [newImageUrl, setNewImageUrl] = useState(editedTask?.taskImage || "");
  const [imagePreview, setImagePreview] = useState(editedTask?.taskImage || "");
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 176
Component exports: 1

=== Component Analysis: CategoryTaskList ===
File: front-end/src/components/apps/kanban/CategoryTaskList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { SetStateAction, useContext, useEffect, useState } from 'react';
import { IconPlus, IconDotsVertical } from '@tabler/icons-react';
import TaskData from './TaskData';
import EditCategoryModal from './TaskModal/EditCategoryModal';
import AddNewTaskModal from './TaskModal/AddNewTaskModal';
import Menu from '@mui/material/Menu';
import MenuItem from '@mui/material/MenuItem';
import { KanbanDataContext } from 'src/context/kanbancontext/index';
import { postFetcher } from "src/api/globalFetcher";
import { Box, IconButton, Stack, Tooltip, Typography } from '@mui/material';
import { mutate } from 'swr';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { SetStateAction, useContext, useEffect, useState } from 'react';
    useContext(KanbanDataContext);
  const [allTasks, setAllTasks] = useState(category ? category.child : []);
  const [showModal, setShowModal] = useState(false);
  const [newCategoryName, setNewCategoryName] = useState(category.name);
  const [showEditCategoryModal, setShowEditCategoryModal] = useState(false);
  const [showContainer, setShowContainer] = useState(true);
  const [anchorEl, setAnchorEl] = useState(null);
  useEffect(() => {
  const [newTaskData, setNewTaskData]: any = useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 242
Component exports: 1

=== Component Analysis: ChatSidebar ===
File: front-end/src/components/apps/chats/ChatSidebar.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Drawer, Theme, useMediaQuery } from '@mui/material';
import ChatListing from './ChatListing';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: ChatInsideSidebar ===
File: front-end/src/components/apps/chats/ChatInsideSidebar.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { ChatsType } from 'src/types/apps/chat';
import { uniq, flatten } from 'lodash';
import { IconDownload } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 145
Component exports: 1

=== Component Analysis: ChatMsgSent ===
File: front-end/src/components/apps/chats/ChatMsgSent.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from "react";
import Box from "@mui/material/Box";
import IconButton from "@mui/material/IconButton";
import InputBase from "@mui/material/InputBase";
import {
import { ChatContext } from "src/context/ChatContext";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext } from "react";
  const [msg, setMsg] = React.useState<any>("");
  const { sendMessage, selectedChat } = useContext(ChatContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 78
Component exports: 1

=== Component Analysis: ChatListing ===
File: front-end/src/components/apps/chats/ChatListing.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useContext } from 'react';
import {
import Scrollbar from '../../custom-scroll/Scrollbar';
import { ChatsType } from 'src/types/apps/chat';
import { last } from 'lodash';
import { formatDistanceToNowStrict } from 'date-fns';
import { IconChevronDown, IconSearch } from '@tabler/icons-react';
import user1 from 'src/assets/images/profile/user-1.jpg';
import { ChatContext } from 'src/context/ChatContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect, useContext } from 'react';
  } = useContext(ChatContext);
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 225
Component exports: 1

=== Component Analysis: ChatContent ===
File: front-end/src/components/apps/chats/ChatContent.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import { IconDotsVertical, IconMenu2, IconPhone, IconVideo } from '@tabler/icons-react';
import { formatDistanceToNowStrict } from 'date-fns';
import ChatInsideSidebar from './ChatInsideSidebar';
import { ChatContext } from "src/context/ChatContext";

--- PROPS/INTERFACES ---
interface ChatContentProps {
  toggleChatSidebar: () => void;
}

const ChatContent: React.FC<ChatContentProps> = ({
  toggleChatSidebar,
}: any) => {
  const [open, setOpen] = React.useState(true);
  const lgUp = useMediaQuery((theme: Theme) => theme.breakpoints.up("lg"));

  const { selectedChat }: any = useContext(ChatContext);

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const [open, setOpen] = React.useState(true);
  const { selectedChat }: any = useContext(ChatContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 269
Component exports: 1

=== Component Analysis: TicketFilter ===
File: front-end/src/components/apps/tickets/TicketFilter.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { Box, Grid, Typography, styled } from '@mui/material';
import { useContext } from "react";
import { TicketContext } from "src/context/TicketContext";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from "react";
  const { tickets, setFilter }: any = useContext(TicketContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 86
Component exports: 1

=== Component Analysis: TicketListing ===
File: front-end/src/components/apps/tickets/TicketListing.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useEffect } from 'react';
import { format } from 'date-fns';
import {
import { IconTrash } from '@tabler/icons-react';
import { TicketType } from 'src/types/apps/ticket';
import { TicketContext } from 'src/context/TicketContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect } from 'react';
    useContext(TicketContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 194
Component exports: 1

=== Component Analysis: BlogListing ===
File: front-end/src/components/apps/blog/BlogListing.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useEffect } from 'react';
import { Grid } from '@mui/material';
import BlogCard from './BlogCard';
import { orderBy } from 'lodash';
import { BlogContext } from "src/context/BlogContext/index";
import BlogFeaturedCard from './BlogFeaturedCard';
import { BlogPostType } from 'src/types/apps/blog';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect } from 'react';
  const { posts, sortBy } = useContext(BlogContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 60
Component exports: 1

=== Component Analysis: BlogCard ===
File: front-end/src/components/apps/blog/BlogCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { format } from 'date-fns';
import { Link } from 'react-router-dom';
import {
import { IconEye, IconMessage2, IconPoint } from '@tabler/icons-react';
import BlankCard from '../../shared/BlankCard';
import { BlogPostType } from 'src/types/apps/blog';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
            component={Link}
                component={Link}

--- METRICS ---
Lines of code: 101
Component exports: 1

=== Component Analysis: BlogFeaturedCard ===
File: front-end/src/components/apps/blog/BlogFeaturedCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { Link } from 'react-router-dom';
import {
import { IconEye, IconMessage2, IconPoint } from '@tabler/icons-react';
import { format } from 'date-fns';
import BlankCard from '../../shared/BlankCard';
import { BlogPostType } from 'src/types/apps/blog';
import { useContext, useEffect } from 'react';
import { BlogContext, BlogContextProps } from 'src/context/BlogContext/index';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext, useEffect } from 'react';
  const { setLoading }: BlogContextProps = useContext(BlogContext);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
              component={Link}
                      component={Link}

--- METRICS ---
Lines of code: 155
Component exports: 1

=== Component Analysis: BlogDetail ===
File: front-end/src/components/apps/blog/detail/BlogDetail.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useContext } from 'react';
import { useLocation } from 'react-router-dom';
import {
import { IconEye, IconMessage2, IconPoint, IconQuote } from '@tabler/icons-react';
import { format } from 'date-fns';
import BlogComment from './BlogComment';
import { uniqueId } from 'lodash';
import { BlogContext, BlogContextProps } from "src/context/BlogContext";
import BlankCard from '../../../shared/BlankCard';
import type { BlogType } from 'src/types/apps/blog';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect, useContext } from 'react';
  const { posts, isLoading, setLoading, addComment }: BlogContextProps = useContext(BlogContext);
  const [replyTxt, setReplyTxt] = React.useState('');
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const title = useLocation();

--- METRICS ---
Lines of code: 226
Component exports: 1

=== Component Analysis: BlogComment ===
File: front-end/src/components/apps/blog/detail/BlogComment.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Stack, Avatar, Box, Typography, Tooltip, Fab, TextField, Button } from '@mui/material';
import { IconArrowBackUp, IconCircle } from '@tabler/icons-react';
import { BlogType } from 'src/types/apps/blog';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [showReply, setShowReply] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 81
Component exports: 1

=== Component Analysis: RecordList ===
File: front-end/src/components/apps/records/recordGrid/RecordList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import {
import {
import { useRecords } from '../../../../context/RecordsContext';
import RecordCard from './RecordCard';
import RecordSearch from './RecordSearch';
import emptyRecords from '../../../../assets/images/products/empty-shopping-cart.svg';

--- PROPS/INTERFACES ---
interface Props {
  onClick: (event: React.SyntheticEvent | Event) => void;
}

const RecordList: React.FC<Props> = ({ onClick }) => {
  const {
    filteredRecordTypes,
    loading,
    error,
    refreshRecords,
    clearFilters,

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  const [viewMode, setViewMode] = React.useState<'grid' | 'list'>('grid');
  const [isLoading, setIsLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 214
Component exports: 1

=== Component Analysis: RecordSidebar ===
File: front-end/src/components/apps/records/recordGrid/RecordSidebar.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Drawer, Theme, useMediaQuery } from '@mui/material';
import RecordFilter from './RecordFilter';

--- PROPS/INTERFACES ---
interface Props {
  isMobileSidebarOpen: boolean;
  onSidebarClose: (event: React.SyntheticEvent | Event) => void;
}

const RecordSidebar: React.FC<Props> = ({ isMobileSidebarOpen, onSidebarClose }) => {
  const lgUp = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'));

  return (
    <Drawer
      open={isMobileSidebarOpen}

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: RecordSearch ===
File: front-end/src/components/apps/records/recordGrid/RecordSearch.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { TextField, InputAdornment } from '@mui/material';
import { Search as SearchIcon } from '@mui/icons-material';
import { useRecords } from '../../../../context/RecordsContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 30
Component exports: 1

=== Component Analysis: RecordFilter ===
File: front-end/src/components/apps/records/recordGrid/RecordFilter.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';
import { useRecords } from '../../../../context/RecordsContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 251
Component exports: 1

=== Component Analysis: RecordCard ===
File: front-end/src/components/apps/records/recordGrid/RecordCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { Link } from 'react-router-dom';
import { useRecords, RecordType } from '../../../../context/RecordsContext';
import BlankCard from '../../../shared/BlankCard';

--- PROPS/INTERFACES ---
interface RecordCardProps {
  record: RecordType;
}

const RecordCard: React.FC<RecordCardProps> = ({ record }) => {
  const { navigateToRecord } = useRecords();
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

  const handleMenuClick = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(event.currentTarget);
  };

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
            component={Link}

--- METRICS ---
Lines of code: 258
Component exports: 5

=== Component Analysis: PostComments ===
File: front-end/src/components/apps/userprofile/profile/PostComments.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useState } from 'react';
import { Stack, Avatar, Box, Typography, Tooltip, Fab, TextField, Button } from '@mui/material';
import { IconArrowBackUp, IconCircle, IconThumbUp } from '@tabler/icons-react';
import uniqueId from 'lodash/uniqueId';
import { UserDataContext } from "src/context/UserDataContext";
import {

--- PROPS/INTERFACES ---
interface CommentProps {
  comment: CommentType | any;
  post: PostType;
}
interface ReplyProps {
  data: CommentDataType;
  reply: Reply[];
  profile: ProfileType;
}
const PostComments = ({ comment, post }: CommentProps) => {

  const { likeReply, addReply }: any = useContext(UserDataContext);

  const [replyTxt, setReplyTxt] = useState<any>('');
  const [showReply, setShowReply] = useState(false);

--- STATE MANAGEMENT ---
import React, { useContext, useState } from 'react';
  const { likeReply, addReply }: any = useContext(UserDataContext);
  const [replyTxt, setReplyTxt] = useState<any>('');
  const [showReply, setShowReply] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 165
Component exports: 1

=== Component Analysis: PostTextBox ===
File: front-end/src/components/apps/userprofile/profile/PostTextBox.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Stack, Fab, TextField, Button } from '@mui/material';
import { IconPhoto, IconNotebook } from '@tabler/icons-react';
import ChildCard from 'src/components/shared/ChildCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 47
Component exports: 1

=== Component Analysis: ProfileBanner ===
File: front-end/src/components/apps/userprofile/profile/ProfileBanner.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef, useEffect } from 'react';
import {
import {
import ProfileTab from './ProfileTab';
import BlankCard from '../../../shared/BlankCard';
import OrthodoxAvatarSelector from './OrthodoxAvatarSelector';
import { useAuth } from 'src/context/AuthContext';
import { useProfileSync } from '../../../../hooks/useProfileSync';
import profilecover from 'src/assets/images/backgrounds/profilebg.jpg';
import userimg from 'src/assets/images/profile/user-1.jpg';
import { orthodoxAvatars, YoungPriest1 } from '../../../avatars/OrthodoxAvatars';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useRef, useEffect } from 'react';
  const [coverPhoto, setCoverPhoto] = useState(profilecover);
  const [selectedAvatarId, setSelectedAvatarId] = useState<number | null>(null);
  const [coverUploadOpen, setCoverUploadOpen] = useState(false);
  const [avatarUploadOpen, setAvatarUploadOpen] = useState(false);
  const [snackbarOpen, setSnackbarOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState('');
  const [globalImages, setGlobalImages] = useState<any[]>([]);
  const [showGlobalImages, setShowGlobalImages] = useState(false);
  const [profileImages, setProfileImages] = useState<string[]>([]);
  const [isEditing, setIsEditing] = useState(false);
  const [editedProfile, setEditedProfile] = useState<any>({});
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
    fetchGlobalImages();
    const fetchProfileImages = async () => {
        const response = await fetch('/api/global-images/public');
        console.error('Failed to fetch profile images:', error);
    fetchProfileImages();
  const fetchGlobalImages = async () => {
      const response = await fetch('/api/admin/global-images/public');
        console.error('📸 Failed to fetch global images, status:', response.status);
      console.error('Failed to fetch global images:', error);
        const response = await fetch('/api/upload/profile', {
                          const updateResponse = await fetch('/api/user/profile/images', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 859
Component exports: 1

=== Component Analysis: Post ===
File: front-end/src/components/apps/userprofile/profile/Post.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import { Grid } from '@mui/material';
import React, { useContext, useEffect } from 'react';
import PostItem from './PostItem';
import { PostTextBox } from './PostTextBox';
import { UserDataContext } from "src/context/UserDataContext";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect } from 'react';
  const { posts }: any = useContext(UserDataContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: OrthodoxAvatarSelector ===
File: front-end/src/components/apps/userprofile/profile/OrthodoxAvatarSelector.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Avatar, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
interface OrthodoxAvatarProps {
  avatar: {
    id: number;
    name: string;
    type: 'clergy' | 'laity';
    component: React.FC<{ size?: number }>;
  };
  isSelected: boolean;
  onClick: () => void;
}


--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 115
Component exports: 1

=== Component Analysis: ProfileTab ===
File: front-end/src/components/apps/userprofile/profile/ProfileTab.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Tabs, Tab, Box } from '@mui/material';
import { IconUserCircle } from '@tabler/icons-react';
import { Link, useLocation } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState(location.pathname);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link, useLocation } from 'react-router-dom';
  const location = useLocation();
                component={Link}

--- METRICS ---
Lines of code: 55
Component exports: 1

=== Component Analysis: PhotosCard ===
File: front-end/src/components/apps/userprofile/profile/PhotosCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { Typography, ImageList, ImageListItem, Skeleton, Box } from '@mui/material';
import img1 from 'src/assets/images/profile/user-10.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-6.jpg';
import img6 from 'src/assets/images/profile/user-7.jpg';
import img7 from 'src/assets/images/profile/user-8.jpg';
import img8 from 'src/assets/images/profile/user-9.jpg';
import ChildCard from 'src/components/shared/ChildCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 106
Component exports: 1

=== Component Analysis: IntroCard ===
File: front-end/src/components/apps/userprofile/profile/IntroCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Stack, Typography } from '@mui/material';
import ChildCard from 'src/components/shared/ChildCard';
import { IconBriefcase, IconDeviceDesktop, IconMail, IconMapPin } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: PostItem ===
File: front-end/src/components/apps/userprofile/profile/PostItem.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useState } from 'react';
import {
import { IconCircle, IconMessage2, IconShare, IconThumbUp } from '@tabler/icons-react';
import uniqueId from 'lodash/uniqueId';
import { UserDataContext } from "src/context/UserDataContext";
import PostComments from './PostComments';
import BlankCard from '../../../shared/BlankCard';
import { Comment as CommentType, PostType } from 'src/types/apps/userProfile';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
interface Props {
  post: PostType;
}

const PostItem = ({ post }: Props) => {

  const { likePost, addComment }: any = useContext(UserDataContext);
  const { isBorderRadius } = useContext(CustomizerContext);


  const [comText, setComText] = useState<any>('');

--- STATE MANAGEMENT ---
import React, { useContext, useState } from 'react';
  const { likePost, addComment }: any = useContext(UserDataContext);
  const { isBorderRadius } = useContext(CustomizerContext);
  const [comText, setComText] = useState<any>('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 192
Component exports: 1

=== Component Analysis: GalleryCard ===
File: front-end/src/components/apps/userprofile/gallery/GalleryCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import {
import React, { useContext, useEffect, useState } from 'react';
import BlankCard from 'src/components/shared/BlankCard';
import { UserDataContext } from "src/context/UserDataContext/index";
import { IconDotsVertical, IconSearch } from '@tabler/icons-react';
import { format } from 'date-fns';
import { GallaryType } from 'src/types/apps/users';
import { ensureArray } from 'src/utils/arrayUtils';
import FsLightbox from 'fslightbox-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect, useState } from 'react';
  const { gallery }: any = useContext(UserDataContext);
  const [search, setSearch] = React.useState('');
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {
  const [toggler, setToggler] = useState(false);
  const [currentImage, setCurrentImage] = useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 148
Component exports: 1

=== Component Analysis: FollowerCard ===
File: front-end/src/components/apps/userprofile/followers/FollowerCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import {
import React, { useContext, useEffect } from 'react';
import BlankCard from 'src/components/shared/BlankCard';
import { UserDataContext } from "src/context/UserDataContext";
import { IconMapPin, IconSearch } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect } from 'react';
  const { followers, toggleFollow, setSearch }: any = useContext(UserDataContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 115
Component exports: 1

=== Component Analysis: FriendsCard ===
File: front-end/src/components/apps/userprofile/friends/FriendsCard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import {
import React, { useContext, useEffect } from 'react';
import BlankCard from 'src/components/shared/BlankCard';
import { UserDataContext } from "src/context/UserDataContext";
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect } from 'react';
  const { followers, setSearch }: any = useContext(UserDataContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 128
Component exports: 1

=== Component Analysis: FriendsList ===
File: front-end/src/components/apps/chat/FriendsList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { formatDistanceToNow } from 'date-fns';
import Scrollbar from '../../custom-scroll/Scrollbar';

--- PROPS/INTERFACES ---
interface FriendsListProps {
  friends: Friend[];
  onStartConversation: (friendId: number) => void;
  onRefresh: () => void;
}

const FriendsList: React.FC<FriendsListProps> = ({
  friends,
  onStartConversation,
  onRefresh,
}) => {

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState<UserSearchResult[]>([]);
  const [searching, setSearching] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [menuAnchor, setMenuAnchor] = useState<{ element: HTMLElement; friend: Friend } | null>(null);
  const [confirmDialog, setConfirmDialog] = useState<{
  const [userDialog, setUserDialog] = useState<{
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/social/friends/search?q=${encodeURIComponent(searchQuery)}&limit=20`, {
      const response = await fetch(`/api/social/friends/request/${userId}`, {
      const response = await fetch(`/api/social/friends/requests/${friendshipId}`, {
      const response = await fetch(`/api/social/friends/requests/${friendshipId}`, {
      const response = await fetch(`/api/social/friends/${friendshipId}`, {
      const response = await fetch(`/api/social/friends/block/${friendshipId}`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 892
Component exports: 1

=== Component Analysis: ChatWindow ===
File: front-end/src/components/apps/chat/ChatWindow.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
import {
import {
import { formatDistanceToNow, format, isToday, isYesterday } from 'date-fns';
import Scrollbar from '../../custom-scroll/Scrollbar';
import MessageInput from './MessageInput';
import { useTheme } from 'src/context/ThemeContext';

--- PROPS/INTERFACES ---
interface ChatWindowProps {
  conversation: Conversation;
  currentUser: User;
  wsRef: React.MutableRefObject<WebSocket | null>;
  onMessageSent: () => void;
  onClose?: () => void;
}

const REACTION_EMOJIS = {
  like: '👍',
  love: '❤️',

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
  const [messages, setMessages] = useState<Message[]>([]);
  const [loading, setLoading] = useState(true);
  const [sending, setSending] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [editingMessage, setEditingMessage] = useState<number | null>(null);
  const [editText, setEditText] = useState('');
  const [replyingTo, setReplyingTo] = useState<Message | null>(null);
  const [selectedMessage, setSelectedMessage] = useState<Message | null>(null);
  const [menuAnchor, setMenuAnchor] = useState<HTMLElement | null>(null);
  const [reactionAnchor, setReactionAnchor] = useState<{ element: HTMLElement; messageId: number } | null>(null);
  const [typingUsers, setTypingUsers] = useState<string[]>([]);
  const [isTyping, setIsTyping] = useState(false);
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/social/chat/conversations/${conversation.id}/messages?limit=50`, {
      const response = await fetch(`/api/social/chat/conversations/${conversation.id}/messages`, {
      const response = await fetch(`/api/social/chat/messages/${messageId}`, {
      const response = await fetch(`/api/social/chat/messages/${messageId}`, {
      const response = await fetch(`/api/social/chat/messages/${messageId}/react`, {
      const response = await fetch(`/api/social/chat/messages/${messageId}/react`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 985
Component exports: 1

=== Component Analysis: ChatSidebar ===
File: front-end/src/components/apps/chat/ChatSidebar.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { formatDistanceToNow, format, isToday, isYesterday } from 'date-fns';
import Scrollbar from '../../custom-scroll/Scrollbar';
import { useTheme } from 'src/context/ThemeContext';

--- PROPS/INTERFACES ---
interface ChatSidebarProps {
  conversations: Conversation[];
  selectedConversation: Conversation | null;
  onConversationSelect: (conversation: Conversation) => void;
  onRefresh: () => void;
}

const ChatSidebar: React.FC<ChatSidebarProps> = ({
  conversations,
  selectedConversation,
  onConversationSelect,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [searchQuery, setSearchQuery] = useState('');
  const [menuAnchor, setMenuAnchor] = useState<{ element: HTMLElement; conversation: Conversation } | null>(null);
  const [filteredConversations, setFilteredConversations] = useState<Conversation[]>(conversations);
  const [favorites, setFavorites] = useState<Set<number>>(new Set());
  const [muted, setMuted] = useState<Set<number>>(new Set());
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 534
Component exports: 1

=== Component Analysis: MessageInput ===
File: front-end/src/components/apps/chat/MessageInput.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
import {
import {
import { useDropzone } from 'react-dropzone';
import EmojiPicker from 'emoji-picker-react';

--- PROPS/INTERFACES ---
interface MessageInputProps {
  onSendMessage: (content: string, type?: 'text' | 'image' | 'file', metadata?: any) => void;
  onTyping: (isTyping: boolean) => void;
  disabled?: boolean;
  placeholder?: string;
}

interface AttachedFile {
  id: string;
  file: File;
  preview?: string;

--- STATE MANAGEMENT ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
  const [message, setMessage] = useState('');
  const [attachedFiles, setAttachedFiles] = useState<AttachedFile[]>([]);
  const [emojiPickerOpen, setEmojiPickerOpen] = useState(false);
  const [emojiAnchor, setEmojiAnchor] = useState<HTMLElement | null>(null);
  const [attachMenuAnchor, setAttachMenuAnchor] = useState<HTMLElement | null>(null);
  const [isRecording, setIsRecording] = useState(false);
  const [recordingTime, setRecordingTime] = useState(0);
  const [audioBlob, setAudioBlob] = useState<Blob | null>(null);
  const [uploading, setUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
    const response = await fetch('/api/upload/chat-attachment', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 712
Component exports: 1

=== Component Analysis: ChatSettings ===
File: front-end/src/components/apps/chat/ChatSettings.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import Scrollbar from '../../custom-scroll/Scrollbar';

--- PROPS/INTERFACES ---
interface ChatSettingsProps {
  user: User;
  onNotificationTest: () => void;
}

interface Settings {
  enable_notifications: boolean;
  enable_sound: boolean;
  enable_typing_indicators: boolean;
  enable_read_receipts: boolean;
  theme: 'light' | 'dark' | 'auto';

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [settings, setSettings] = useState<Settings>({
  const [profile, setProfile] = useState({
  const [editingProfile, setEditingProfile] = useState(false);
  const [saving, setSaving] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [blockedUsers, setBlockedUsers] = useState<any[]>([]);
  const [storageUsage, setStorageUsage] = useState({ used: 0, total: 100 });
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/social/chat/settings', {
      const response = await fetch('/api/social/friends?status=blocked', {
      const response = await fetch('/api/social/chat/storage-usage', {
      const response = await fetch('/api/social/chat/settings', {
      const response = await fetch('/api/users/profile', {
      const response = await fetch(`/api/social/friends/unblock/${friendshipId}`, {
      const response = await fetch('/api/social/chat/clear-data', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 676
Component exports: 1

=== Component Analysis: ChurchRecordTableList ===
File: front-end/src/components/apps/records-ui/ChurchRecordTableList/ChurchRecordTableList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { alpha, useTheme } from '@mui/material/styles';
import { format } from 'date-fns';
import {
import { visuallyHidden } from '@mui/utils';
import CustomCheckbox from '../../../forms/theme-elements/CustomCheckbox';
import CustomSwitch from '../../../forms/theme-elements/CustomSwitch';
import {
import { 
import { useChurchRecords, ChurchRecord } from '../../../../context/ChurchRecordsContext';

--- PROPS/INTERFACES ---
interface EnhancedTableProps {
  numSelected: number;
  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof ChurchRecord) => void;
  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;
  order: Order;
  orderBy: string;
  rowCount: number;
}

function EnhancedTableHead(props: EnhancedTableProps) {
  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;
--
interface EnhancedTableToolbarProps {
  numSelected: number;
  handleSearch: (event: React.ChangeEvent<HTMLInputElement>) => void;
  search: string;
  onRefresh: () => void;
  onExport: (format: 'pdf' | 'excel' | 'csv') => void;
  selectedRecords: string[];
}

const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {
  const { numSelected, handleSearch, search, onRefresh, onExport, selectedRecords } = props;

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [exportMenuAnchor, setExportMenuAnchor] = React.useState<null | HTMLElement>(null);
  const [order, setOrder] = React.useState<Order>('desc');
  const [orderBy, setOrderBy] = React.useState<keyof ChurchRecord>('date');
  const [selected, setSelected] = React.useState<readonly string[]>([]);
  const [dense, setDense] = React.useState(false);
  const [search, setSearch] = React.useState('');
  const [actionMenuAnchor, setActionMenuAnchor] = React.useState<{ [key: string]: HTMLElement | null }>({});

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 702
Component exports: 7

=== Component Analysis: NoteContent ===
File: front-end/src/components/apps/notes/NoteContent.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useEffect, useState } from 'react';
import {
import { IconCheck, IconMenu2 } from '@tabler/icons-react';
import AddNotes from './AddNotes';
import { NotesContext } from 'src/context/NotesContext';

--- PROPS/INTERFACES ---
interface Props {

  // toggleNoteSidebar: func,

  toggleNoteSidebar: (event: React.MouseEvent<HTMLElement>) => void,
}

const NoteContent = ({ toggleNoteSidebar }: Props) => {

  const theme = useTheme();


--- STATE MANAGEMENT ---
import React, { useContext, useEffect, useState } from 'react';
  const { notes, updateNote, selectedNoteId }: any = useContext(NotesContext);
  const [initialTitle, setInitialTitle] = useState('');
  const [updatedTitle, setUpdatedTitle] = useState('');
  const [isEditing, setIsEditing] = useState(false); // State to track whether editing is in progress
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 166
Component exports: 1

=== Component Analysis: NoteList ===
File: front-end/src/components/apps/notes/NoteList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useEffect, useState } from 'react';
import { IconButton, Box, Stack, Typography, TextField, Tooltip, Alert } from '@mui/material';
import Scrollbar from '../../custom-scroll/Scrollbar';
import { IconTrash } from '@tabler/icons-react';
import { NotesType } from 'src/types/apps/notes';
import { NotesContext } from "src/context/NotesContext";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useContext, useEffect, useState } from 'react';
  const { notes, selectNote, deleteNote }: any = useContext(NotesContext);
  const [searchTerm, setSearchTerm] = useState<string>('');
  const [activeNoteId, setActiveNoteId] = useState<any | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 125
Component exports: 1

=== Component Analysis: NoteSidebar ===
File: front-end/src/components/apps/notes/NoteSidebar.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Drawer, Theme, useMediaQuery } from '@mui/material';
import NoteList from './NoteList';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: AddNotes ===
File: front-end/src/components/apps/notes/AddNotes.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useContext, useState } from 'react';
import { NotesContext } from "src/context/NotesContext";
import {
import { IconCheck } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
interface Props {
  colors: any[];
}

const AddNotes = ({ colors }: Props) => {
  const { addNote, categories }: any = useContext(NotesContext);

  const [open, setOpen] = React.useState(false);
  const [scolor, setScolor] = React.useState<string>('#ffffff');

  const [title, setTitle] = React.useState('');

--- STATE MANAGEMENT ---
import React, { useContext, useState } from 'react';
  const { addNote, categories }: any = useContext(NotesContext);
  const [open, setOpen] = React.useState(false);
  const [scolor, setScolor] = React.useState<string>('#ffffff');
  const [title, setTitle] = React.useState('');
  const [content, setContent] = React.useState('');
  const [category, setCategory] = React.useState('General');
  const [tags, setTags] = React.useState<string[]>([]);
  const [tagInput, setTagInput] = React.useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 216
Component exports: 1

=== Component Analysis: EmailSettingsForm ===
File: front-end/src/components/admin/EmailSettingsForm.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [config, setConfig] = useState<EmailConfig>({
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [testing, setTesting] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [testDialogOpen, setTestDialogOpen] = useState(false);
  const [testEmail, setTestEmail] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
      fetchEmailConfig();
  const fetchEmailConfig = async () => {
      const response = await fetch('/api/settings/email', {
        throw new Error('Failed to fetch email configuration');
      const response = await fetch('/api/settings/email', {
      const response = await fetch('/api/settings/email/test', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 498
Component exports: 1

=== Component Analysis: BigBookCustomComponentViewer ===
File: front-end/src/components/admin/BigBookCustomComponentViewer.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, Suspense, Component } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface BigBookCustomComponentViewerProps {
  componentName: string;
  onBack: () => void;
  onError?: (error: string) => void;
}

interface CustomComponentRegistry {
  components: Record<string, {
    id: string;
    name: string;
    path: string;

--- STATE MANAGEMENT ---
import React, { useState, useEffect, Suspense, Component } from 'react';
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [componentInfo, setComponentInfo] = useState<any>(null);
  const [CustomComponent, setCustomComponent] = useState<React.ComponentType | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/bigbook/custom-components-registry');

--- ROUTING ---
  Link,
              <Link 
              </Link>

--- METRICS ---
Lines of code: 292
Component exports: 2

=== Component Analysis: AdminDashboardLayout ===
File: front-end/src/components/admin/AdminDashboardLayout.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, useTheme } from '@mui/material';
import { useAuth } from '../../context/AuthContext';
import { ThemedLayout } from '../Theme/ThemedLayout';
import SuperAdminDashboard from './SuperAdminDashboard';
import { Navigate } from 'react-router-dom';

--- PROPS/INTERFACES ---
interface AdminDashboardLayoutProps {
  children?: React.ReactNode;
  requireSuperAdmin?: boolean;
}

/**
 * AdminDashboardLayout Component
 * Provides layout and access control for admin dashboard pages
 */
export const AdminDashboardLayout: React.FC<AdminDashboardLayoutProps> = ({
  children,

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 104
Component exports: 2

=== Component Analysis: UserFormModal ===
File: front-end/src/components/admin/UserFormModal.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: SuperAdminDashboard ===
File: front-end/src/components/admin/SuperAdminDashboard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useMemo } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import { useTheme as useOrthodoxTheme } from '../../context/ThemeContext';
import AdminTile from './AdminTile';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useMemo } from 'react';
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState<string>('all');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 671
Component exports: 2

=== Component Analysis: BigBookKanbanSync ===
File: front-end/src/components/admin/BigBookKanbanSync.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel({ children, value, index, ...other }: TabPanelProps) {
  return (
    <div
      role="tabpanel"
      hidden={value !== index}

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [syncStatus, setSyncStatus] = useState<SyncStatus | null>(null);
  const [tasks, setTasks] = useState<Task[]>([]);
  const [kanbanCards, setKanbanCards] = useState<KanbanCard[]>([]);
  const [conflicts, setConflicts] = useState<any[]>([]);
  const [syncLogs, setSyncLogs] = useState<any[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string>('');
  const [currentTab, setCurrentTab] = useState(0);
  const [createTaskOpen, setCreateTaskOpen] = useState(false);
  const [autoRefresh, setAutoRefresh] = useState(false);
  const [newTask, setNewTask] = useState({
  useEffect(() => {

--- API INTEGRATION ---
        fetch('/api/admin/kanban-sync/status'),
        fetch('/api/admin/kanban-sync/tasks?limit=100'),
        fetch('/api/admin/kanban-sync/kanban/cards'),
        fetch('/api/admin/kanban-sync/conflicts'),
        fetch('/api/admin/kanban-sync/logs?limit=50')
      const response = await fetch('/api/admin/kanban-sync/full-sync', {
      const response = await fetch('/api/admin/kanban-sync/tasks', {
      const response = await fetch(`/api/admin/kanban-sync/tasks/${taskId}/sync`, {
      const response = await fetch(`/api/admin/kanban-sync/kanban/cards/${cardId}/move`, {
      const response = await fetch('/api/admin/kanban-sync/test', {
      const response = await fetch('/api/admin/kanban-sync/export');

--- ROUTING ---
                Linked: {syncStatus.kanban.syncedTasks}
                        <Chip label="Linked" size="small" color="success" />

--- METRICS ---
Lines of code: 866
Component exports: 6

=== Component Analysis: ChurchServerManager ===
File: front-end/src/components/admin/ChurchServerManager.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { 

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [servers, setServers] = useState<ChurchServer[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedLanguage, setSelectedLanguage] = useState('');
  const [showAddModal, setShowAddModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);
  const [showLogsModal, setShowLogsModal] = useState(false);
  const [selectedServer, setSelectedServer] = useState<ChurchServer | null>(null);
  const [logs, setLogs] = useState<LogEntry[]>([]);
  const [newServer, setNewServer] = useState({
  useEffect(() => {

--- API INTEGRATION ---
  const fetchServers = async () => {
      // const response = await fetch('/api/churches');
      setError('Failed to fetch server data');
      // await fetch(`/api/churches/${id}/start`, { method: 'POST' });
      // await fetch(`/api/churches/${id}/stop`, { method: 'POST' });
  const fetchLogs = async (id: number) => {
      // const response = await fetch(`/api/churches/${id}/logs`);
      setError('Failed to fetch logs');
      // const response = await fetch('/api/churches', {
      // await fetch(`/api/churches/${selectedServer.id}`, {
    fetchServers();
    const interval = setInterval(fetchServers, 30000); // Refresh every 30 seconds
                              fetchLogs(server.id);
                  onClick={() => fetchLogs(selectedServer.id)}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 681
Component exports: 1

=== Component Analysis: NFSBackupConfig ===
File: front-end/src/components/admin/NFSBackupConfig.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { adminAPI } from '../../api/admin.api';
import SDLCBackupPanel from './SDLCBackupPanel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [config, setConfig] = useState<NFSConfig>({
  const [mountStatus, setMountStatus] = useState<MountStatus>({ mounted: false });
  const [diskSpace, setDiskSpace] = useState<DiskSpace | null>(null);
  const [recentBackups, setRecentBackups] = useState<BackupLog[]>([]);
  const [loading, setLoading] = useState(false);
  const [testing, setTesting] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [showLogs, setShowLogs] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await adminAPI.nfsBackup.getConfig();
      const response = await adminAPI.nfsBackup.getStatus();
      const response = await adminAPI.nfsBackup.updateConfig(config);
      const response = await adminAPI.nfsBackup.testConnection(config.nfsServerIP, config.remotePath);
      const response = await adminAPI.nfsBackup.mount();
      const response = await adminAPI.nfsBackup.unmount();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 497
Component exports: 2

=== Component Analysis: AdminTile ===
File: front-end/src/components/admin/AdminTile.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Link } from 'react-router-dom';
import { Box, Card, CardContent, Typography, Chip, useTheme } from '@mui/material';
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
interface AdminTileProps {
  icon: React.ReactNode;
  label: string;
  description?: string;
  to: string;
  roleRestriction?: string[];
  badge?: string;
  badgeColor?: 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info';
  disabled?: boolean;
  comingSoon?: boolean;
}

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
  // Wrap with Link if clickable and not coming soon
      <Link 
      </Link>

--- METRICS ---
Lines of code: 251
Component exports: 2

=== Component Analysis: EditChurchModal ===
File: front-end/src/components/admin/EditChurchModal.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useState } from 'react';
import {
import { 

--- PROPS/INTERFACES ---
interface EditChurchModalProps {
  open: boolean;
  onClose: () => void;
  churchId: number | null;
  onSave?: (data: ChurchFormData) => void;
}

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;
  return (
    <div
      role="tabpanel"

--- STATE MANAGEMENT ---
import React, { useEffect, useState } from 'react';
  const [loading, setLoading] = useState(false);
  const [form, setForm] = useState<ChurchFormData>({
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [tabValue, setTabValue] = useState(0);
  const [churchUsers, setChurchUsers] = useState<ChurchUser[]>([]);
  const [availableRecordTypes, setAvailableRecordTypes] = useState<string[]>(ORTHODOX_RECORD_TYPES);
  useEffect(() => {

--- API INTEGRATION ---
      fetch(`/api/admin/churches/${churchId}`)
      fetch(`/api/admin/churches/${churchId}/users`)
            throw new Error('Failed to fetch users');
      fetch(`/api/admin/churches/${churchId}/record-types`)
            throw new Error('Failed to fetch record types');
    fetch(`/api/admin/churches/${churchId}`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 619
Component exports: 1

=== Component Analysis: AdminPageFallback ===
File: front-end/src/components/admin/AdminPageFallback.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import OrthodoxBanner from '../shared/OrthodoxBanner';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 228
Component exports: 1

=== Component Analysis: UploadedFileList ===
File: front-end/src/components/admin/UploadedFileList.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface UploadedFileListProps {
  files: FileUpload[];
  selectedFile: FileUpload | null;
  onFileSelect: (file: FileUpload) => void;
  onFileExecute: (file: FileUpload) => void;
  onFileDelete: (fileId: string) => void;
  onQuestionnairePreview?: (file: FileUpload) => void;
  isExecuting: boolean;
  settings?: {
    showHiddenFiles?: boolean;
    darkModeConsole?: boolean;

--- STATE MANAGEMENT ---
  const [searchTerm, setSearchTerm] = React.useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 339
Component exports: 1

=== Component Analysis: SDLCBackupPanel ===
File: front-end/src/components/admin/SDLCBackupPanel.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import { apiClient } from '../../api/utils/axiosInstance';

--- PROPS/INTERFACES ---
interface SDLCBackupPanelProps {
    className?: string;
}

const SDLCBackupPanel: React.FC<SDLCBackupPanelProps> = ({ className }) => {
    const { user } = useAuth();
    const [selectedEnv, setSelectedEnv] = useState<'prod' | 'dev'>('prod');
    const [backups, setBackups] = useState<BackupFile[]>([]);
    const [loading, setLoading] = useState(false);
    const [creatingBackup, setCreatingBackup] = useState(false);
    const [restoringBackup, setRestoringBackup] = useState<string | null>(null);

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [selectedEnv, setSelectedEnv] = useState<'prod' | 'dev'>('prod');
    const [backups, setBackups] = useState<BackupFile[]>([]);
    const [loading, setLoading] = useState(false);
    const [creatingBackup, setCreatingBackup] = useState(false);
    const [restoringBackup, setRestoringBackup] = useState<string | null>(null);
    const [deletingBackup, setDeletingBackup] = useState<string | null>(null);
    const [restoreDialogOpen, setRestoreDialogOpen] = useState(false);
    const [selectedBackup, setSelectedBackup] = useState<BackupFile | null>(null);
    const [alert, setAlert] = useState<{ type: 'success' | 'error' | 'warning'; message: string } | null>(null);
    const [backupProgress, setBackupProgress] = useState<{
    const [restoreProgress, setRestoreProgress] = useState<{
    const [consoleLogs, setConsoleLogs] = useState<Array<{
    const [showConsole, setShowConsole] = useState(false);
    useEffect(() => {

--- API INTEGRATION ---
import { apiClient } from '../../api/utils/axiosInstance';

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 720
Component exports: 1

=== Component Analysis: TSXComponentInstallWizard ===
File: front-end/src/components/admin/TSXComponentInstallWizard.tsx
Date: Wed Jul 30 12:59:53 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface TSXComponentInstallWizardProps {
  open: boolean;
  onClose: () => void;
  file: File | null;
  onInstallComplete: (result: any) => void;
  onConsoleMessage: (type: 'info' | 'success' | 'error' | 'warning', message: string) => void;
}

const TSXComponentInstallWizard: React.FC<TSXComponentInstallWizardProps> = ({
  open,
  onClose,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeStep, setActiveStep] = useState(0);
  const [componentInfo, setComponentInfo] = useState<TSXComponentInfo | null>(null);
  const [loading, setLoading] = useState(false);
  const [installOptions, setInstallOptions] = useState<InstallationOptions>({
  const [installationResult, setInstallationResult] = useState<any>(null);
  const [availableDirectories, setAvailableDirectories] = useState<string[]>([
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/bigbook/parse-tsx-component', {
      const response = await fetch(endpoint, {
      const response = await fetch(endpoint, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 715
Component exports: 1

=== Component Analysis: BigBookDynamicRoute ===
File: front-end/src/components/admin/BigBookDynamicRoute.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, Suspense } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, Suspense } from 'react';
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [componentInfo, setComponentInfo] = useState<any>(null);
  const [CustomComponent, setCustomComponent] = useState<React.ComponentType | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/bigbook/custom-components-registry');

--- ROUTING ---
import { useParams, useNavigate } from 'react-router-dom';
  Link,
const BigBookDynamicRoute: React.FC = () => {
  const navigate = useNavigate();
              <Link
              </Link>
              <Link
              </Link>
export default BigBookDynamicRoute; 

--- METRICS ---
Lines of code: 319
Component exports: 1

=== Component Analysis: SystemWatchdog ===
File: front-end/src/components/admin/SystemWatchdog.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [status, setStatus] = useState<SystemStatus | null>(null);
  const [config, setConfig] = useState<WatchdogConfig | null>(null);
  const [alerts, setAlerts] = useState<Alert[]>([]);
  const [dailySummary, setDailySummary] = useState<any>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string>('');
  const [selectedAlert, setSelectedAlert] = useState<Alert | null>(null);
  const [actionDialogOpen, setActionDialogOpen] = useState(false);
  const [configExpanded, setConfigExpanded] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
        fetch('/api/admin/watchdog/status'),
        fetch('/api/admin/watchdog/alerts?limit=50'),
        fetch('/api/admin/watchdog/summary')
      const response = await fetch(endpoint, { method: 'POST' });
      const response = await fetch('/api/admin/watchdog/config', {
      const response = await fetch(`/api/admin/watchdog/alerts/${alertId}/acknowledge`, {
      const response = await fetch(`/api/admin/watchdog/alerts/${alertId}/execute/${actionType}`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 725
Component exports: 1

=== Component Analysis: BuildConsole ===
File: front-end/src/components/admin/BuildConsole.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';
import BlankCard from 'src/components/shared/BlankCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [config, setConfig] = useState<BuildConfig>({
  const [isLoading, setIsLoading] = useState(false);
  const [isRunning, setIsRunning] = useState(false);
  const [buildOutput, setBuildOutput] = useState<string>('');
  const [buildStatus, setBuildStatus] = useState<'idle' | 'running' | 'success' | 'error'>('idle');
  const [buildLogs, setBuildLogs] = useState<BuildLog[]>([]);
  const [buildMeta, setBuildMeta] = useState<BuildMeta | null>(null);
  const [error, setError] = useState<string>('');
  const [isEditingConfig, setIsEditingConfig] = useState(false);
  const [useStreaming, setUseStreaming] = useState(true);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/build/config');
        fetch('/api/build/logs'),
        fetch('/api/build/meta')
      const response = await fetch('/api/build/config', {
        fetch('/api/build/config')
      const response = await fetch('/api/build/run', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 634
Component exports: 1

=== Component Analysis: EncryptedStoragePanel ===
File: front-end/src/components/admin/EncryptedStoragePanel.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [status, setStatus] = useState<StorageStatus | null>(null);
  const [files, setFiles] = useState<StorageFile[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string>('');
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/bigbook/storage/status');
      const response = await fetch('/api/bigbook/storage/files');
      const response = await fetch('/api/bigbook/storage/mount', { method: 'POST' });
      const response = await fetch('/api/bigbook/storage/unmount', { method: 'POST' });
      const response = await fetch('/api/bigbook/storage/rotate-key', { method: 'POST' });

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 421
Component exports: 1

=== Component Analysis: OMBigBook ===
File: front-end/src/components/admin/OMBigBook.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
import {
import BigBookConsolePage from './BigBookConsolePage';
import { BigBookConsoleSettings, defaultSettings } from './BigBookSettings';
import EncryptedStoragePanel from './EncryptedStoragePanel';
import QuestionnairePreview from './QuestionnairePreview';
import OMAIDiscoveryPanel from './OMAIDiscoveryPanel';
import TSXComponentInstallWizard from './TSXComponentInstallWizard';
import BigBookCustomComponentViewer from './BigBookCustomComponentViewer';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useRef, useCallback, useEffect } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [uploadedFiles, setUploadedFiles] = useState<FileUpload[]>([]);
  const [consoleOutput, setConsoleOutput] = useState<ConsoleOutput[]>([]);
  const [isExecuting, setIsExecuting] = useState(false);
  const [selectedFile, setSelectedFile] = useState<FileUpload | null>(null);
  const [showSettings, setShowSettings] = useState(false);
  const [settings, setSettings] = useState<BigBookSettings>({
  const [consoleSettings, setConsoleSettings] = useState<BigBookConsoleSettings>(defaultSettings);
  const [questionnairePreviewOpen, setQuestionnairePreviewOpen] = useState(false);
  const [previewFile, setPreviewFile] = useState<FileUpload | null>(null);
  const [registries, setRegistries] = useState<any>(null);
  const [registriesLoading, setRegistriesLoading] = useState(false);
  const [registriesError, setRegistriesError] = useState<string | null>(null);
  const [tsxWizardOpen, setTsxWizardOpen] = useState(false);
  const [tsxFile, setTsxFile] = useState<File | null>(null);
  const [customComponents, setCustomComponents] = useState<any>(null);
  const [customComponentsLoading, setCustomComponentsLoading] = useState(false);
  const [selectedCustomComponent, setSelectedCustomComponent] = useState<string | null>(null);
  React.useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/bigbook/registries', {
      const response = await fetch('/api/bigbook/custom-components-registry', {
      const response = await fetch('/api/bigbook/remove-bigbook-component', {
      const response = await fetch(`/api/bigbook/toggle-item/${type}/${id}`, {
            const response = await fetch('/api/bigbook/upload-parish-map', {
              const response = await fetch('/api/bigbook/upload', {
          const response = await fetch('/api/bigbook/ingest-file', {
            const response = await fetch('/api/bigbook/upload-parish-map', {
              const response = await fetch('/api/bigbook/upload', {
          const response = await fetch('/api/bigbook/ingest-file', {
          const retrieveResponse = await fetch(`/api/bigbook/storage/file/${file.id}?encryptedPath=${encodeURIComponent(file.encryptedPath)}`);
      const response = await fetch('/api/bigbook/execute', {
        const response = await fetch(`/api/bigbook/storage/file/${fileId}?encryptedPath=${encodeURIComponent(file.encryptedPath)}`, {
      const response = await fetch('/api/bigbook/settings', {
      const response = await fetch('/api/bigbook/submit-response', {

--- ROUTING ---
                    secondary={`Route: ${menuItem.route}`}
                        <TableCell>Path/Route</TableCell>

--- METRICS ---
Lines of code: 1843
Component exports: 1

=== Component Analysis: ChurchWizard ===
File: front-end/src/components/admin/ChurchWizard.jsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useReducer, useEffect } from 'react';
import { ChevronLeftIcon, ChevronRightIcon, CheckCircleIcon, XMarkIcon } from '@heroicons/react/24/outline';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useReducer, useEffect } from 'react';
  const [currentStep, setCurrentStep] = useState(1);
  const [formData, dispatch] = useReducer(formReducer, initialFormState);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [errors, setErrors] = useState({});
  const [submitSuccess, setSubmitSuccess] = useState(false);
  const [isTestingConnection, setIsTestingConnection] = useState(false);
  const [setupProgress, setSetupProgress] = useState(null);
  const [templateChurches, setTemplateChurches] = useState([]);
  const [loadingTemplateChurches, setLoadingTemplateChurches] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
    const fetchEnglishChurches = async () => {
        const response = await fetch('/api/admin/churches?preferred_language=en', {
          throw new Error('Failed to fetch template churches');
        console.error('Error fetching template churches:', err);
    fetchEnglishChurches();
      const response = await fetch(`/api/churches/test-connection/${church_id}`, {
        response = await fetch('/api/admin/churches', {
        response = await fetch('/api/admin/churches', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1285
Component exports: 1

=== Component Analysis: BigBookConsolePage ===
File: front-end/src/components/admin/BigBookConsolePage.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import UploadedFileList from './UploadedFileList';
import FileViewer from './FileViewer';
import BigBookSettings, { BigBookConsoleSettings, defaultSettings } from './BigBookSettings';

--- PROPS/INTERFACES ---
interface BigBookConsolePageProps {
  files: FileUpload[];
  consoleOutput: ConsoleOutput[];
  isExecuting: boolean;
  onFileSelect: (file: FileUpload) => void;
  onFileExecute: (file: FileUpload) => void;
  onFileDelete: (fileId: string) => void;
  onQuestionnairePreview?: (file: FileUpload) => void;
  onClearConsole: () => void;
  selectedFile: FileUpload | null;
}

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [showConsole, setShowConsole] = useState(false);
  const [activeView, setActiveView] = useState<'files' | 'settings'>('files');
  const [settings, setSettings] = useState<BigBookConsoleSettings>(defaultSettings);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 320
Component exports: 1

=== Component Analysis: FileViewer ===
File: front-end/src/components/admin/FileViewer.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface FileViewerProps {
  file: FileUpload | null;
  onExecute: (file: FileUpload) => void;
  isExecuting: boolean;
  settings?: {
    defaultPreviewMode?: 'auto' | 'raw' | 'markdown' | 'code';
    autoExpandJson?: boolean;
    enableSyntaxHighlighting?: boolean;
    maxPreviewFileSize?: number;
    lineWrapInPreview?: boolean;
    darkModeConsole?: boolean;

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 481
Component exports: 2

=== Component Analysis: NotificationManagement ===
File: front-end/src/components/admin/NotificationManagement.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';
import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [tabValue, setTabValue] = useState(0);
    const [notificationTypes, setNotificationTypes] = useState<NotificationType[]>([]);
    const [customNotifications, setCustomNotifications] = useState<NotificationQueue[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);
    const [createDialogOpen, setCreateDialogOpen] = useState(false);
    const [viewQueueDialogOpen, setViewQueueDialogOpen] = useState(false);
    const [newNotification, setNewNotification] = useState<CustomNotification>({
    useEffect(() => {

--- API INTEGRATION ---
        fetchNotificationTypes();
        fetchNotificationQueue();
    const fetchNotificationTypes = async () => {
            const response = await fetch('/api/admin/notifications/types', {
    const fetchNotificationQueue = async () => {
            const response = await fetch('/api/admin/notifications/queue', {
            const response = await fetch(`/api/admin/notifications/types/${typeId}/toggle`, {
            const response = await fetch('/api/admin/notifications/custom', {
                fetchNotificationQueue();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 659
Component exports: 1

=== Component Analysis: OMAITaskAssignmentWidget ===
File: front-end/src/components/admin/OMAITaskAssignmentWidget.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { omaiAPI } from '../../api/omai.api';
import { useAuth } from '../../context/AuthContext';
import EmailSettingsForm from './EmailSettingsForm';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [data, setData] = useState<TaskAssignmentData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [tabValue, setTabValue] = useState(0);
  const [generateDialogOpen, setGenerateDialogOpen] = useState(false);
  const [newLinkEmail, setNewLinkEmail] = useState('');
  const [generating, setGenerating] = useState(false);
  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);
  const [deletingToken, setDeletingToken] = useState<string | null>(null);
  const [deleting, setDeleting] = useState(false);
  const [viewSubmissionOpen, setViewSubmissionOpen] = useState(false);
  const [selectedSubmission, setSelectedSubmission] = useState<any>(null);
  useEffect(() => {

--- API INTEGRATION ---
  const fetchData = async () => {
      const response = await omaiAPI.getTaskLogs(10);
    fetchData();
    if (!newLinkEmail || !omaiAPI.validateEmail(newLinkEmail)) {
      const response = await omaiAPI.generateTaskLink(newLinkEmail);
        fetchData(); // Refresh data
      const response = await omaiAPI.deleteTaskLink(deletingToken);
        fetchData(); // Refresh data
                  <IconButton size="small" onClick={fetchData}>

--- ROUTING ---
  const [newLinkEmail, setNewLinkEmail] = useState('');
  const handleGenerateLink = async () => {
    if (!newLinkEmail || !omaiAPI.validateEmail(newLinkEmail)) {
      const response = await omaiAPI.generateTaskLink(newLinkEmail);
        setNewLinkEmail('');
  const handleDeleteLink = async (token: string) => {
      const response = await omaiAPI.deleteTaskLink(deletingToken);
  const handleCopyLink = async (token: string, email: string) => {
      'TASK_LINK_GENERATED': 'Link Generated',
      'TASK_LINK_ERROR': 'Link Error',
                <Tooltip title="Generate New Task Link">
            <Tab label={`Links (${data?.recent_links?.length || 0})`} />
            {/* Recent Links Tab */}
                            <Tooltip title="Copy Link">
                                onClick={() => handleCopyLink(link.token || '', link.email)}
                            <Tooltip title="Delete Link">
                                onClick={() => handleDeleteLink(link.token || '')}
      {/* Generate Link Dialog */}
        <DialogTitle>Generate Task Assignment Link</DialogTitle>
            value={newLinkEmail}
            onChange={(e) => setNewLinkEmail(e.target.value)}
            onClick={handleGenerateLink}
            {generating ? 'Generating...' : 'Generate Link'}
        <DialogTitle>Delete Task Link</DialogTitle>
            {deleting ? 'Deleting...' : 'Delete Link'}

--- METRICS ---
Lines of code: 717
Component exports: 1

=== Component Analysis: ScriptRunner ===
File: front-end/src/components/admin/ScriptRunner.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [scripts, setScripts] = useState<Script[]>([]);
  const [selectedScript, setSelectedScript] = useState<string>('');
  const [isExecuting, setIsExecuting] = useState<boolean>(false);
  const [result, setResult] = useState<ExecutionResult | null>(null);
  const [logs, setLogs] = useState<ExecutionLog[]>([]);
  const [isLoadingScripts, setIsLoadingScripts] = useState<boolean>(true);
  const [isLoadingLogs, setIsLoadingLogs] = useState<boolean>(false);
  const [error, setError] = useState<string>('');
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/scripts', {
      const response = await fetch('/api/script-logs?limit=20', {
      const response = await fetch('/api/run-script', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 461
Component exports: 1

=== Component Analysis: OMAIDiscoveryPanelMobile ===
File: front-end/src/components/admin/OMAIDiscoveryPanelMobile.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { TransitionProps } from '@mui/material/transitions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [learningStatus, setLearningStatus] = useState<LearningStatus | null>(null);
  const [memoryPreview, setMemoryPreview] = useState<MemoryPreview | null>(null);
  const [agents, setAgents] = useState<Agent[]>([]);
  const [learningLoading, setLearningLoading] = useState(false);
  const [statusLoading, setStatusLoading] = useState(false);
  const [memoryLoading, setMemoryLoading] = useState(false);
  const [autofixLoading, setAutofixLoading] = useState(false);
  const [uploadLoading, setUploadLoading] = useState(false);
  const [statusDialogOpen, setStatusDialogOpen] = useState(false);
  const [memoryDialogOpen, setMemoryDialogOpen] = useState(false);
  const [autofixDialogOpen, setAutofixDialogOpen] = useState(false);
  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);
  const [logsDrawerOpen, setLogsDrawerOpen] = useState(false);
  const [speedDialOpen, setSpeedDialOpen] = useState(false);
  const [expandedSections, setExpandedSections] = useState<string[]>(['overview']);
  const [lastRefreshTime, setLastRefreshTime] = useState<Date | null>(null);
  const [progress, setProgress] = useState({
  const [uploadFile, setUploadFile] = useState<File | null>(null);
  const [uploadResult, setUploadResult] = useState<string>('');
  const [selectedAgent, setSelectedAgent] = useState<string>('');
  const [autofixCommand, setAutofixCommand] = useState<string>('');
  const [autofixResult, setAutofixResult] = useState<string>('');
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/omai/learning-status');
      const response = await fetch('/api/omai/memory-preview');
      const response = await fetch('/api/omai/agents');
      const response = await fetch('/api/omai/learn-now', {
      const response = await fetch('/api/omai/agents/run-command', {
      const response = await fetch('/api/omai/upload-knowledge', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 877
Component exports: 1

=== Component Analysis: QuestionnairePreview ===
File: front-end/src/components/admin/QuestionnairePreview.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface QuestionnairePreviewProps {
  open: boolean;
  onClose: () => void;
  file: FileUpload | null;
  onSubmit: (submission: QuestionnaireSubmission) => void;
}

const QuestionnairePreview: React.FC<QuestionnairePreviewProps> = ({
  open,
  onClose,
  file,

--- STATE MANAGEMENT ---
import React, { useState, useRef, useEffect } from 'react';
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string>('');
  const [responses, setResponses] = useState<{ [key: string]: any }>({});
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [renderError, setRenderError] = useState<string>('');
          useState: parent.React.useState,
          useEffect: parent.React.useEffect,
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      { pattern: /fetch\s*\(/, message: 'fetch calls should be validated' },

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 467
Component exports: 4

=== Component Analysis: ChurchManagement ===
File: front-end/src/components/admin/ChurchManagement.jsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { PlusIcon, BuildingOfficeIcon, UsersIcon, DocumentTextIcon } from '@heroicons/react/24/outline';
import ChurchWizard from './ChurchWizard';
import EditChurchModal from './EditChurchModal';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [churches, setChurches] = useState([]);
  const [showWizard, setShowWizard] = useState(false);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [editModalOpen, setEditModalOpen] = useState(false);
  const [selectedChurchId, setSelectedChurchId] = useState(null);
  useEffect(() => {

--- API INTEGRATION ---
    fetchChurches();
  const fetchChurches = async () => {
      const response = await fetch('/api/admin/churches', {
        throw new Error('Failed to fetch churches');
      console.error('Error fetching churches:', err);
    fetchChurches(); // Refresh the list
          onClick={fetchChurches}
        onSave={fetchChurches}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 296
Component exports: 1

=== Component Analysis: ComponentDiscoveryPanel ===
File: front-end/src/components/admin/ComponentDiscoveryPanel.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface ComponentDiscoveryPanelProps {
  onComponentsDiscovered?: (components: ComponentInfo[]) => void;
}

const ComponentDiscoveryPanel: React.FC<ComponentDiscoveryPanelProps> = ({
  onComponentsDiscovered
}) => {
  const [discoveryResult, setDiscoveryResult] = useState<DiscoveryResult | null>(null);
  const [loading, setLoading] = useState(false);
  const [selectedTab, setSelectedTab] = useState(0);
  const [searchQuery, setSearchQuery] = useState('');

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [discoveryResult, setDiscoveryResult] = useState<DiscoveryResult | null>(null);
  const [loading, setLoading] = useState(false);
  const [selectedTab, setSelectedTab] = useState(0);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedComponent, setSelectedComponent] = useState<ComponentInfo | null>(null);
  const [detailsDialogOpen, setDetailsDialogOpen] = useState(false);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/components/list');
      const response = await fetch('/api/components/discover', {
      const response = await fetch('/api/components/refresh', {

--- ROUTING ---
  Router as RouterIcon,
    inRoutes: boolean;
    inRoutes: number;
      navigation: <RouterIcon />,
                            {component.usage.inRoutes && (
                              <Tooltip title="In Routes">
                                <RouterIcon color="success" fontSize="small" />
                      <Typography variant="body2" color="text.secondary">In Routes</Typography>
                        {selectedComponent.usage.inRoutes ? (

--- METRICS ---
Lines of code: 786
Component exports: 1

=== Component Analysis: BigBookSettings ===
File: front-end/src/components/admin/BigBookSettings.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface BigBookSettingsProps {
  settings: BigBookConsoleSettings;
  onSettingsChange: (settings: BigBookConsoleSettings) => void;
  onSave: () => void;
  onReset: () => void;
}

const defaultSettings: BigBookConsoleSettings = {
  // File Viewer Settings
  defaultPreviewMode: 'auto',
  autoExpandJson: true,

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [hasChanges, setHasChanges] = useState(false);
  const [isProcessing, setIsProcessing] = useState(false);
  const [isTesting, setIsTesting] = useState(false);
  const [processingResult, setProcessingResult] = useState<ProcessingResult | null>(null);
  const [mountTestResult, setMountTestResult] = useState<any>(null);
  const [processingProgress, setProcessingProgress] = useState(0);

--- API INTEGRATION ---
      const response = await fetch('/api/bigbook/process-all', {
      const response = await fetch('/api/bigbook/test-secure-mount', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 712
Component exports: 3

=== Component Analysis: OMAIDiscoveryPanel ===
File: front-end/src/components/admin/OMAIDiscoveryPanel.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [status, setStatus] = useState<DiscoveryStatus | null>(null);
  const [summary, setSummary] = useState<DiscoverySummary | null>(null);
  const [index, setIndex] = useState<BigBookIndex | null>(null);
  const [loading, setLoading] = useState(false);
  const [discovering, setDiscovering] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);
  const [categoryFiles, setCategoryFiles] = useState<any[]>([]);
  const [selectedFile, setSelectedFile] = useState<FileMetadata | null>(null);
  const [fileContent, setFileContent] = useState<string>('');
  const [fileDialogOpen, setFileDialogOpen] = useState(false);
  const [scheduleDialogOpen, setScheduleDialogOpen] = useState(false);
  const [scheduleHours, setScheduleHours] = useState(24);
  const [learningLoading, setLearningLoading] = useState(false);
  const [learningStatus, setLearningStatus] = useState<any>(null);
  const [learningDialogOpen, setLearningDialogOpen] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/bigbook/omai/status');
      const response = await fetch('/api/bigbook/omai/summary');
      const response = await fetch('/api/bigbook/omai/index');
      const response = await fetch('/api/bigbook/omai/initialize', {
      const response = await fetch('/api/bigbook/omai/discover', {
      const response = await fetch(`/api/bigbook/omai/category/${encodedCategory}`);
        fetch(`/api/bigbook/omai/file/${fileId}`),
        fetch(`/api/bigbook/omai/file/${fileId}/content`)
      const response = await fetch('/api/bigbook/omai/schedule', {
      const response = await fetch('/api/omai/learning-status');
      const response = await fetch('/api/omai/learn-now', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 717
Component exports: 1

=== Component Analysis: ThemedTable ===
File: front-end/src/components/ThemedTable.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { styled } from '@mui/material/styles';
import { TableTheme } from '../store/useTableStyleStore';

--- PROPS/INTERFACES ---
interface ThemedTableProps {
  data: Array<{
    id: string;
    childName: string;
    parentNames: string;
    baptismDate: string;
    priest: string;
    godparents: string;
    parish: string;
  }>;
  theme: TableTheme;

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 316
Component exports: 1

=== Component Analysis: BillsTab ===
File: front-end/src/components/pages/account-setting/BillsTab.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../../shared/BlankCard';
import CustomTextField from '../../forms/theme-elements/CustomTextField';
import CustomFormLabel from '../../forms/theme-elements/CustomFormLabel';
import { IconCirclePlus, IconCreditCard, IconPackage, IconPencilMinus } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 225
Component exports: 1

=== Component Analysis: AccountTab ===
File: front-end/src/components/pages/account-setting/AccountTab.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useContext } from 'react';
import { CardContent, Grid, Typography, MenuItem, Box, Avatar, Button, Stack, Alert, CircularProgress } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import CustomTextField from '../../forms/theme-elements/CustomTextField';
import CustomFormLabel from '../../forms/theme-elements/CustomFormLabel';
import CustomSelect from '../../forms/theme-elements/CustomSelect';
import { useAuth } from '../../../context/AuthContext';
import user1 from 'src/assets/images/profile/user-1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useContext } from 'react';
  const [formData, setFormData] = useState({
  const [passwordData, setPasswordData] = useState({
  const [isLoading, setIsLoading] = useState(false);
  const [isPasswordLoading, setIsPasswordLoading] = useState(false);
  const [message, setMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null);
  const [passwordMessage, setPasswordMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null);
  React.useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/auth/profile', {
      const response = await fetch('/api/auth/password', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 513
Component exports: 1

=== Component Analysis: SecurityTab ===
File: front-end/src/components/pages/account-setting/SecurityTab.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import BlankCard from '../../shared/BlankCard';
import CustomFormLabel from '../../forms/theme-elements/CustomFormLabel';
import CustomTextField from '../../forms/theme-elements/CustomTextField';
import { IconDeviceLaptop, IconDeviceMobile, IconDotsVertical, IconLock, IconKey, IconShield } from '@tabler/icons-react';
import { useAuth } from '../../../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [passwordForm, setPasswordForm] = useState({
  const [resetEmail, setResetEmail] = useState('');
  const [adminResetDialogOpen, setAdminResetDialogOpen] = useState(false);
  const [loading, setLoading] = useState(false);
  const [adminResetLoading, setAdminResetLoading] = useState(false);
  const [message, setMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null);
  const [adminMessage, setAdminMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null);
  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false);

--- API INTEGRATION ---
      const response = await fetch('/api/auth/change-password', {
      const response = await fetch('/api/auth/admin-reset-password', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 424
Component exports: 1

=== Component Analysis: NotificationTab ===
File: front-end/src/components/pages/account-setting/NotificationTab.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Avatar, Box, CardContent, Grid, IconButton, Typography, Tooltip, Button, Stack } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import CustomTextField from '../../forms/theme-elements/CustomTextField';
import CustomFormLabel from '../../forms/theme-elements/CustomFormLabel';
import CustomSwitch from '../../forms/theme-elements/CustomSwitch';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 242
Component exports: 1

=== Component Analysis: Questions ===
File: front-end/src/components/pages/faq/Questions.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography, Accordion, AccordionSummary, AccordionDetails, Divider, Box } from '@mui/material';
import { IconChevronDown } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 92
Component exports: 1

=== Component Analysis: StillQuestions ===
File: front-end/src/components/pages/faq/StillQuestions.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography, AvatarGroup, Avatar, Stack, Button, Box } from '@mui/material';
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';
import user3 from 'src/assets/images/profile/user-3.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 44
Component exports: 1

=== Component Analysis: MarkdownUpload ===
File: front-end/src/components/MarkdownUpload.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface MarkdownUploadProps {
  taskId: number;
  markdownContent?: string;
  markdownFilename?: string;
  onUploadSuccess: () => void;
}

const MarkdownUpload: React.FC<MarkdownUploadProps> = ({
  taskId,
  markdownContent,
  markdownFilename,

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [file, setFile] = useState<File | null>(null);
  const [uploading, setUploading] = useState(false);
  const [error, setError] = useState('');

--- API INTEGRATION ---
      const response = await fetch(`/api/kanban/tasks/${taskId}/markdown`, {
      const response = await fetch(`/api/kanban/tasks/${taskId}/markdown`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 179
Component exports: 1

=== Component Analysis: Table1 ===
File: front-end/src/components/tables/Table1.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../shared/BlankCard';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-5.jpg';
import img6 from 'src/assets/images/profile/user-6.jpg';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 238
Component exports: 1

=== Component Analysis: Table4 ===
File: front-end/src/components/tables/Table4.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../shared/BlankCard';
import img1 from 'src/assets/images/blog/blog-img1.jpg';
import img2 from 'src/assets/images/blog/blog-img2.jpg';
import img3 from 'src/assets/images/blog/blog-img3.jpg';
import img4 from 'src/assets/images/blog/blog-img4.jpg';
import img5 from 'src/assets/images/blog/blog-img5.jpg';
import { IconDots, IconEdit, IconPlus, IconTrash } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 213
Component exports: 1

=== Component Analysis: Table3 ===
File: front-end/src/components/tables/Table3.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../shared/BlankCard';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-5.jpg';
import img6 from 'src/assets/images/profile/user-6.jpg';
import { IconCircle, IconClock, IconDots, IconEdit, IconPlus, IconTrash } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 234
Component exports: 1

=== Component Analysis: Table2 ===
File: front-end/src/components/tables/Table2.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../shared/BlankCard';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-5.jpg';
import img6 from 'src/assets/images/profile/user-6.jpg';
import { IconDotsVertical, IconEdit, IconPlus, IconTrash } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 217
Component exports: 1

=== Component Analysis: Table5 ===
File: front-end/src/components/tables/Table5.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../shared/BlankCard';
import { basicsTableData, TableType } from './tableData';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 133
Component exports: 1

=== Component Analysis: BasicTableCode ===
File: front-end/src/components/tables/code/BasicTableCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {
import BlankCard from '../shared/BlankCard';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-5.jpg';
import img6 from 'src/assets/images/profile/user-6.jpg';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 250
Component exports: 2

=== Component Analysis: UploadTokenManager ===
File: front-end/src/components/UploadTokenManager.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [formData, setFormData] = useState({
    const [generatedLinks, setGeneratedLinks] = useState<GeneratedLink[]>([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [showQRDialog, setShowQRDialog] = useState(false);
    const [selectedLink, setSelectedLink] = useState<GeneratedLink | null>(null);

--- API INTEGRATION ---
            const response = await fetch('/api/upload/upload-link', {

--- ROUTING ---
    Link as LinkIcon,
interface GeneratedLink {
    const [generatedLinks, setGeneratedLinks] = useState<GeneratedLink[]>([]);
    const [selectedLink, setSelectedLink] = useState<GeneratedLink | null>(null);
    const generateLink = async () => {
                const newLink: GeneratedLink = {
                setGeneratedLinks(prev => [newLink, ...prev]);
                console.log('Upload link generated:', newLink);
    const showQRCode = (link: GeneratedLink) => {
        setSelectedLink(link);
                                Generate New Upload Link
                                    onClick={generateLink}
                                    {loading ? 'Generating...' : 'Generate Upload Link'}
                {/* Generated Links */}
                                Generated Links ({generatedLinks.length})
                            {generatedLinks.length === 0 ? (
                                    {generatedLinks.map((link, index) => (
                <DialogTitle>QR Code for Upload Link</DialogTitle>
                    {selectedLink && (
                                Church {selectedLink.church_id} - {selectedLink.record_type} ({selectedLink.language})
                                value={selectedLink.url}
                    {selectedLink && (
                            onClick={() => copyToClipboard(selectedLink.url)}
                            Copy Link

--- METRICS ---
Lines of code: 378
Component exports: 1

=== Component Analysis: ColorPickerPopover ===
File: front-end/src/components/ColorPickerPopover/ColorPickerPopover.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import {
import {
import { DEFAULT_PALETTES } from '../../types/church-records-advanced.types';

--- PROPS/INTERFACES ---
interface ColorPickerPopoverProps {
  open: boolean;
  anchorEl: HTMLElement | null;
  currentColor?: string;
  onColorSelect: (color: string) => void;
  onClose: () => void;
  predefinedColors?: string[];
}

/**
 * Color Picker Popover Component

--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
  const [customColor, setCustomColor] = useState(currentColor || '#1976d2');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 299
Component exports: 1

=== Component Analysis: RecordPreviewPane ===
File: front-end/src/components/RecordPreviewPane/RecordPreviewPane.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useMemo } from 'react';
import {
import {
import { ChurchRecord, RecordField } from '../../types/church-records-advanced.types';

--- PROPS/INTERFACES ---
interface RecordPreviewPaneProps {
  record: ChurchRecord;
  title?: string;
  showValidation?: boolean;
}

/**
 * Get icon for field based on its key
 */
const getFieldIcon = (fieldKey: string) => {
  const key = fieldKey.toLowerCase();

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 261
Component exports: 1

=== Component Analysis: OrthodoxThemeDemo ===
File: front-end/src/components/demos/OrthodoxThemeDemo.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { IconBuildingChurch, IconCross, IconHeart, IconCalendar } from '@tabler/icons-react';
import OrthodoxThemeToggle from '../shared/OrthodoxThemeToggle';
import PageContainer from '../container/PageContainer';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 355
Component exports: 1

=== Component Analysis: OMCalendar ===
File: front-end/src/components/calendar/OMCalendar.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useCallback } from 'react';
import {
import {
import { Calendar, dateFnsLocalizer } from 'react-big-calendar';
import { format, parse, startOfWeek, getDay } from 'date-fns';
import 'react-big-calendar/lib/css/react-big-calendar.css';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { calendarAPI } from '../../api/calendar.api';

--- PROPS/INTERFACES ---
interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

// Calendar localizer
const locales = {
  'en-US': require('date-fns/locale/en-US')
};


--- STATE MANAGEMENT ---
import React, { useState, useEffect, useCallback } from 'react';
  const [selectedTab, setSelectedTab] = useState(0);
  const [isFullscreen, setIsFullscreen] = useState(false);
  const [selectedEvent, setSelectedEvent] = useState<CalendarEvent | null>(null);
  const [isTaskDialogOpen, setIsTaskDialogOpen] = useState(false);
  const [isEditMode, setIsEditMode] = useState(false);
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);
  const [view, setView] = useState<'month' | 'week' | 'day'>('month');
  const [taskForm, setTaskForm] = useState<Partial<AITask>>({
  useEffect(() => {
  const [filterStatus, setFilterStatus] = useState<string>('all');
  const [filterAgent, setFilterAgent] = useState<string>('all');

--- API INTEGRATION ---
  const { data: tasks = [], isLoading, error, refetch } = useQuery({
    queryFn: calendarAPI.getTasks,
    refetchInterval: 30000, // Refresh every 30 seconds
    mutationFn: calendarAPI.createTask,
    mutationFn: calendarAPI.updateTask,
    mutationFn: calendarAPI.deleteTask,
                onClick={() => refetch()}

--- ROUTING ---
  Link as LinkIcon,
                    Link to Kanban
              label="Linked Kanban ID"

--- METRICS ---
Lines of code: 846
Component exports: 1

=== Component Analysis: ManualFixEditor ===
File: front-end/src/components/ManualFixEditor.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
import {
import {
import { ComponentInfo } from '../hooks/useComponentRegistry';
import { Box, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
interface ManualFixEditorProps {
  component: ComponentInfo | null;
  onSave: (path: string, contents: string) => Promise<any>;
  onPreviewDiff: (originalContent: string, newContent: string) => void;
  onRollback: (backupToken: string) => Promise<void>;
}

// Safe wrapper component to prevent hook violations
const ManualFixEditor: React.FC<ManualFixEditorProps> = (props) => {
  const { component, onSave, onPreviewDiff, onRollback } = props;
  
--
interface ${componentName}Props {
  // Add props here
}

const ${componentName}: React.FC<${componentName}Props> = (props) => {
  return (
    <Box>
      <Typography variant="h6">
        ${componentName} Component
      </Typography>
      {/* Add your component content here */}

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [originalContent, setOriginalContent] = useState('');
  const [currentContent, setCurrentContent] = useState('');
  const [componentPath, setComponentPath] = useState('');
  const [loading, setLoading] = useState(false);
  const [isModified, setIsModified] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [vrtEnabled, setVrtEnabled] = useState(false);
  const [vrtLoading, setVrtLoading] = useState(false);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 324
Component exports: 2

=== Component Analysis: UserFormModal ===
File: front-end/src/components/UserFormModal.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { User, UpdateUser, Church, ResetPasswordData } from '../services/userService';
import SocialPermissionsToggle from './SocialPermissionsToggle';

--- PROPS/INTERFACES ---
interface UserFormModalProps {
    open: boolean;
    onClose: () => void;
    user: User | null;
    churches: Church[];
    mode: 'edit' | 'reset-password' | 'delete-confirm';
    onSubmit: (data: UpdateUser | ResetPasswordData | { confirm: boolean }) => Promise<void>;
    loading?: boolean;
    currentUserRole?: string;
}


--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [formData, setFormData] = useState<UpdateUser>({
    const [passwordData, setPasswordData] = useState<ResetPasswordData>({
    const [showPassword, setShowPassword] = useState(false);
    const [formErrors, setFormErrors] = useState<Record<string, string>>({});
    const [generatedPassword, setGeneratedPassword] = useState('');
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 577
Component exports: 1

=== Component Analysis: KanbanColumn ===
File: front-end/src/components/KanbanColumn.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { Add as AddIcon } from '@mui/icons-material';
import { Droppable } from '@hello-pangea/dnd';
import KanbanTaskCard from './KanbanTaskCard';

--- PROPS/INTERFACES ---
interface KanbanColumnProps {
  column: Column;
  tasks: Task[];
  onAddTask: () => void;
  onRefresh: () => void;
  boardLabels: Label[];
}

const KanbanColumn: React.FC<KanbanColumnProps> = ({ 
  column, 
  tasks, 

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 181
Component exports: 1

=== Component Analysis: VisualRegressionDashboard ===
File: front-end/src/components/VisualRegressionDashboard.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { ComponentInfo } from '../hooks/useComponentRegistry';
import { SnapshotData } from '../ai/visualTesting/snapshotEngine';
import { VisualDiffResult, DiffSeverity, DiffType } from '../ai/visualTesting/diffAnalyzer';
import { ConfidenceAdjustment } from '../ai/visualTesting/confidenceAdjuster';
import { PlaywrightTestSuite, TestResult } from '../ai/visualTesting/playwrightTests';
import { RegressionFeedback } from '../ai/learning/regressionFeedback';
import { exportSnapshotAsPng, exportVRTMetadataAsJson, generatePngFilename, generateJsonFilename, logExportAction, VRTMetadata } from '../ai/vrt/exportUtils';

--- PROPS/INTERFACES ---
interface VisualRegressionDashboardProps {
  component: ComponentInfo;
  isOpen: boolean;
  onClose: () => void;
}

interface DashboardState {
  snapshots: SnapshotData[];
  diffResults: VisualDiffResult[];
  testSuites: PlaywrightTestSuite[];
  confidenceAdjustments: ConfidenceAdjustment[];

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [state, setState] = useState<DashboardState>({
  const [settingsOpen, setSettingsOpen] = useState(false);
  const [fullscreenImage, setFullscreenImage] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 816
Component exports: 4

=== Component Analysis: GlobalOMAI ===
File: front-end/src/components/global/GlobalOMAI.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef, useEffect, useCallback, useContext } from 'react';
import {
import {
import { useAuth } from '../../context/AuthContext';
import { useLocation } from 'react-router-dom';
import { useGlobalErrorStore, GlobalError } from '../../hooks/useGlobalErrorStore';
import { KanbanDataContext } from '../../context/kanbancontext';
import ErrorDetailsCard from './ErrorDetailsCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useRef, useEffect, useCallback, useContext } from 'react';
  const kanbanContext = useContext(KanbanDataContext);
  const [isOpen, setIsOpen] = useState(false);
  const [isMinimized, setIsMinimized] = useState(false);
  const [isDragging, setIsDragging] = useState(false);
  const [isResizing, setIsResizing] = useState(false);
  const [position, setPosition] = useState({ x: window.innerWidth - 600, y: window.innerHeight / 2 - 500 });
  const [size, setSize] = useState({ width: 600, height: 800 });
  const [command, setCommand] = useState('');
  const [isExecuting, setIsExecuting] = useState(false);
  const [handsOnMode, setHandsOnMode] = useState(false);
  const [historyMenuAnchor, setHistoryMenuAnchor] = useState<null | HTMLElement>(null);
  const [showSettings, setShowSettings] = useState(false);
  const [activeTab, setActiveTab] = useState(0);
  const [selectedError, setSelectedError] = useState<GlobalError | null>(null);
  const [taskCreationDialog, setTaskCreationDialog] = useState(false);
  const [taskForm, setTaskForm] = useState({
  const [showFilters, setShowFilters] = useState(false);
  const [commandHistory, setCommandHistory] = useState<OMAICommand[]>([]);
  const [pageContext, setPageContext] = useState<PageContext | null>(null);
  const [availableCommands, setAvailableCommands] = useState<string[]>([]);
  const [suggestions, setSuggestions] = useState<string[]>([]);
  const [settings, setSettings] = useState<OMAISettings>({
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
  const { createTask, boards = [], currentBoard, fetchBoard, fetchBoards } = kanbanContext || {};
      const response = await fetch('/api/omai/command-history', {
      const response = await fetch('/api/omai/available-commands', {
             const response = await fetch('/api/omai/execute-command', {
      if (!fetchBoards || !fetchBoard) {
      await fetchBoards();
          if (fetchBoard) {
              await fetchBoard(parseInt(selectedBoardId));
        const response = await fetch('/api/kanban/boards', {
            if (bugsBoard && fetchBoard) {
                await fetchBoard(bugsBoard.id);
              } catch (fetchError) {
                console.error('Failed to fetch board details:', fetchError);
                alert(`❌ Found "${bugsBoard.name}" but failed to load details: ${fetchError}`);
            } else if (data.boards.length > 0 && fetchBoard) {
                await fetchBoard(firstBoard.id);
              } catch (fetchError) {
                console.error('Failed to fetch first board details:', fetchError);
                alert(`❌ Found "${firstBoard.name}" but failed to load details: ${fetchError}`);
          await fetchBoard(bugsBoard.id);
          await fetchBoard(boards[0].id);
                                  onClick={fetchBoards}
                                      const response = await fetch('/api/kanban/health', {

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const location = useLocation();
- **Route:** \`${error.route}\`

--- METRICS ---
Lines of code: 1756
Component exports: 4

=== Component Analysis: ErrorDetailsCard ===
File: front-end/src/components/global/ErrorDetailsCard.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { GlobalError } from '../../hooks/useGlobalErrorStore';

--- PROPS/INTERFACES ---
interface ErrorDetailsCardProps {
  error: GlobalError;
  onToggleExpansion: (errorId: string) => void;
  onCreateTask: (error: GlobalError) => void;
  onDismiss: (errorId: string) => void;
  onUndismiss: (errorId: string) => void;
  onDelete: (errorId: string) => void;
  showTrackButton?: boolean;
}

const ErrorDetailsCard: React.FC<ErrorDetailsCardProps> = ({

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [copySuccess, setCopySuccess] = useState<string>('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
Route: ${error.route}
- **Route:** \`${error.route}\`
                    Route: {error.route}

--- METRICS ---
Lines of code: 569
Component exports: 1

=== Component Analysis: ErrorNotificationToast ===
File: front-end/src/components/global/ErrorNotificationToast.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { GlobalError } from '../../hooks/useGlobalErrorStore';

--- PROPS/INTERFACES ---
interface ErrorNotificationToastProps {
  onTaskCreate?: (error: GlobalError) => void;
}

const ErrorNotificationToast: React.FC<ErrorNotificationToastProps> = ({ onTaskCreate }) => {
  const [notifications, setNotifications] = useState<GlobalError[]>([]);
  const [currentError, setCurrentError] = useState<GlobalError | null>(null);
  const [isExpanded, setIsExpanded] = useState(false);
  const [autoHide, setAutoHide] = useState(true);

  useEffect(() => {

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [notifications, setNotifications] = useState<GlobalError[]>([]);
  const [currentError, setCurrentError] = useState<GlobalError | null>(null);
  const [isExpanded, setIsExpanded] = useState(false);
  const [autoHide, setAutoHide] = useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 224
Component exports: 1

=== Component Analysis: SiteEditor ===
File: front-end/src/components/SiteEditor.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../context/AuthContext';
import SiteEditorOverlay from './SiteEditorOverlay';
import SiteEditorErrorBoundary from './SiteEditorErrorBoundary';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [textValue, setTextValue] = useState('Sample text for editing');
  const [switchValue, setSwitchValue] = useState(false);
  const [selectedChip, setSelectedChip] = useState('React');
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 269
Component exports: 1

=== Component Analysis: AdvancedGridDialog ===
File: front-end/src/components/AdvancedGridDialog.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useMemo } from 'react';
import {
import {
import { AgGridReact } from 'ag-grid-react';
import { ColDef, GridReadyEvent, GridApi, ModuleRegistry, AllCommunityModule } from 'ag-grid-community';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';
import 'ag-grid-community/styles/ag-theme-balham.css';
import 'ag-grid-community/styles/ag-theme-material.css';
import 'ag-grid-community/styles/ag-theme-quartz.css';
import '../styles/advanced-grid-themes.css';

--- PROPS/INTERFACES ---
interface AdvancedGridDialogProps {
  open: boolean;
  onClose: () => void;
  records: any[]; // Made generic to accept any record type
  onRefresh?: () => void;
  recordType?: 'baptism' | 'marriage' | 'funeral'; // Add record type for dynamic behavior
  columnDefs?: ColDef[]; // Add custom column definitions
}

// Custom AG Grid themes with beautiful color schemes
const AG_GRID_THEMES = [

--- STATE MANAGEMENT ---
import React, { useState, useMemo } from 'react';
  const [gridApi, setGridApi] = useState<GridApi | null>(null);
  const [selectedTheme, setSelectedTheme] = useState('ag-theme-ocean-blue');
  React.useEffect(() => {

--- API INTEGRATION ---
    console.log('✅ AG Grid ready with', params.api.getDisplayedRowCount(), 'rows');
    const allColumnDefs = params.api.getColumnDefs();
    const allColumns = params.api.getAllDisplayedColumns();
    const allGridColumns = params.api.getAllGridColumns();
        params.api.setColumnWidths([{ key: column.getColId(), newWidth: minWidth }]);
    params.api.refreshCells();
    console.log('🎯 Final column count:', params.api.getAllDisplayedColumns().length);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 960
Component exports: 4

=== Component Analysis: ResetPasswordModal ===
File: front-end/src/components/ResetPasswordModal.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { IconKey } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
interface ResetPasswordModalProps {
    open: boolean;
    onClose: () => void;
    userId: number;
    churchId: string | number;
    userEmail: string;
    userName?: string;
}

const ResetPasswordModal: React.FC<ResetPasswordModalProps> = ({
    open,

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [password, setPassword] = useState('');
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [success, setSuccess] = useState<string | null>(null);

--- API INTEGRATION ---
            const response = await fetch(`/api/admin/church/${churchId}/reset-password`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 173
Component exports: 1

=== Component Analysis: ImportRecordsButton ===
File: front-end/src/components/ImportRecordsButton.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useRef } from 'react';
import axios from 'axios';
import {
import {
import { useSnackbar } from 'notistack';
import { adminAPI } from '../api/admin.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useRef } from 'react';
  const [isOpen, setIsOpen] = useState(false);
  const [selectedRecordType, setSelectedRecordType] = useState<'baptism' | 'marriage' | 'funeral'>('baptism');
  const [selectedChurch, setSelectedChurch] = useState<number | null>(null);
  const [churches, setChurches] = useState<Church[]>([]);
  const [uploadedData, setUploadedData] = useState<ImportRecord[] | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [loadingChurches, setLoadingChurches] = useState(false);
  const [errors, setErrors] = useState<string[]>([]);
  const [successMessage, setSuccessMessage] = useState<string>('');
  const [validationErrors, setValidationErrors] = useState<string[]>([]);

--- API INTEGRATION ---
import axios from 'axios';
  const fetchChurches = async () => {
      const response = await adminAPI.churches.getAll();
      console.error('❌ Error fetching churches:', error);
    fetchChurches();
      const response = await axios.post<ApiResponse>('/api/records/import', importData);
      const response = await axios.get(`/api/records/sample/${selectedRecordType}`);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 558
Component exports: 1

=== Component Analysis: Step2FileUploader ===
File: front-end/src/components/ocr/wizard/Step2FileUploader.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useCallback, useState } from 'react';
import {
import {
import { WizardFormData, UploadFileMetadata } from '../WizardUpload';

--- PROPS/INTERFACES ---
interface Step2FileUploaderProps {
  formData: WizardFormData;
  updateFormData: (updates: Partial<WizardFormData>) => void;
}

const MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB
const MAX_BATCH_SIZE = 50;
const ALLOWED_TYPES = ['application/pdf', 'image/jpeg', 'image/png', 'image/tiff', 'image/gif'];

export const Step2FileUploader: React.FC<Step2FileUploaderProps> = ({
  formData,

--- STATE MANAGEMENT ---
import React, { useCallback, useState } from 'react';
  const [dragActive, setDragActive] = useState(false);
  const [uploading, setUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 422
Component exports: 1

=== Component Analysis: Step3FileReview ===
File: front-end/src/components/ocr/wizard/Step3FileReview.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { WizardFormData, UploadFileMetadata } from '../WizardUpload';

--- PROPS/INTERFACES ---
interface Step3FileReviewProps {
  formData: WizardFormData;
  updateFormData: (updates: Partial<WizardFormData>) => void;
}

export const Step3FileReview: React.FC<Step3FileReviewProps> = ({
  formData,
  updateFormData
}) => {
  const [previewOpen, setPreviewOpen] = useState(false);
  const [previewFile, setPreviewFile] = useState<UploadFileMetadata | null>(null);

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [previewOpen, setPreviewOpen] = useState(false);
  const [previewFile, setPreviewFile] = useState<UploadFileMetadata | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 325
Component exports: 1

=== Component Analysis: Step4Confirmation ===
File: front-end/src/components/ocr/wizard/Step4Confirmation.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { WizardFormData } from '../WizardUpload';

--- PROPS/INTERFACES ---
interface Step4ConfirmationProps {
  formData: WizardFormData;
  onSubmit: () => void;
  loading: boolean;
}

const recordTypeLabels = {
  baptism: 'Baptism Records',
  marriage: 'Marriage Records',
  funeral: 'Funeral Records'
};

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 304
Component exports: 1

=== Component Analysis: Step1RecordDetails ===
File: front-end/src/components/ocr/wizard/Step1RecordDetails.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { WizardFormData } from '../WizardUpload';

--- PROPS/INTERFACES ---
interface Step1RecordDetailsProps {
  formData: WizardFormData;
  updateFormData: (updates: Partial<WizardFormData>) => void;
}

const recordTypes = [
  {
    value: 'baptism' as const,
    label: 'Baptism Records',
    description: 'Orthodox baptism certificates and registry entries',
    icon: '⛪'

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 334
Component exports: 1

=== Component Analysis: OcrTextBlockList ===
File: front-end/src/components/ocr/OcrTextBlockList.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useMemo } from 'react';
import {
import {
import { OcrTextLine } from './utils/ocrRowSplitter';

--- PROPS/INTERFACES ---
interface OcrTextBlockListProps {
  ocrLines: OcrTextLine[];
  usedLines: Set<number>;
  onLineSelect: (lineIndex: number, recordIndex: number, fieldName: string) => void;
  currentMappings: Map<number, { recordIndex: number; fieldName: string }>;
  onReset: () => void;
  hideUsedLines?: boolean;
  className?: string;
}

const FIELD_OPTIONS = [

--- STATE MANAGEMENT ---
import React, { useState, useMemo } from 'react';
  const [searchFilter, setSearchFilter] = useState('');
  const [showOnlyUnused, setShowOnlyUnused] = useState(false);
  const [selectedField, setSelectedField] = useState<string>('');
  const [selectedRecordIndex, setSelectedRecordIndex] = useState<number>(1);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 346
Component exports: 1

=== Component Analysis: Settings ===
File: front-end/src/components/ocr/Settings.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';
import { Button } from '../ui/button';
import { Input } from '../ui/input';
import { Badge } from '../ui/badge';
import { 
import { Switch } from '../ui/switch';
import { Slider } from '../ui/slider';
import { toast } from 'react-toastify';
import { useOcrSettings } from '../../hooks/useOcrSettings';

--- PROPS/INTERFACES ---
interface OcrSettingsProps {
  churchId: string;
  theme?: string;
}

interface OcrSettings {
  // Processing Settings
  defaultLanguage: string;
  defaultQuality: 'fast' | 'balanced' | 'accurate';
  autoSubmit: boolean;
  batchProcessing: boolean;

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 391
Component exports: 1

=== Component Analysis: ManualUploader ===
File: front-end/src/components/ocr/ManualUploader.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';
import { Button } from '../ui/button';
import { Badge } from '../ui/badge';
import { 
import { useDropzone } from 'react-dropzone';
import { toast } from 'react-toastify';
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '../ui/dropdown-menu';
import { useOcrJobs } from '../../hooks/useOcrJobs';
import { OcrUploadConfig, OcrJobMetadata } from './types';

--- PROPS/INTERFACES ---
interface OcrManualUploaderProps {
  churchId: string;
  onUploadComplete: () => void;
  theme?: string;
}

interface QueuedFile extends File {
  id: string;
  preview: string;
  status: 'queued' | 'uploading' | 'completed' | 'failed';
  progress: number;

--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
  const [files, setFiles] = useState<QueuedFile[]>([]);
  const [config, setConfig] = useState<OcrUploadConfig>({
  const [isPaused, setIsPaused] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 390
Component exports: 1

=== Component Analysis: ProcessingQueue ===
File: front-end/src/components/ocr/ProcessingQueue.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';
import { Button } from '../ui/button';
import { Badge } from '../ui/badge';
import { Input } from '../ui/input';
import { 
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '../ui/dropdown-menu';
import { toast } from 'react-toastify';
import { OcrJobMetadata } from './types';
import { ConfidenceBadge } from './ConfidenceBadge';

--- PROPS/INTERFACES ---
interface ProcessingQueueProps {
  churchId: string;
  onPreviewJob: (job: OcrJobMetadata) => void;
  theme?: string;
}

interface QueueFilters {
  status: string;
  recordType: string;
  dateRange: string;
  search: string;

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [jobs, setJobs] = useState<OcrJobMetadata[]>([]);
  const [filteredJobs, setFilteredJobs] = useState<OcrJobMetadata[]>([]);
  const [loading, setLoading] = useState(true);
  const [autoRefresh, setAutoRefresh] = useState(true);
  const [filters, setFilters] = useState<QueueFilters>({
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
  const fetchJobs = async () => {
      const response = await fetch(`/api/church/${churchId}/ocr/jobs`);
        throw new Error('Failed to fetch jobs');
      console.error('Error fetching OCR jobs:', error);
    fetchJobs();
      const interval = setInterval(fetchJobs, 5000); // Refresh every 5 seconds
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${jobId}/retry`, {
        fetchJobs();
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${jobId}`, {
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${jobId}/export`);
            <Button variant="outline" size="sm" onClick={fetchJobs}>
                            <span>Processing with Google Vision API...</span>

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 583
Component exports: 2

=== Component Analysis: OcrWizardUpload ===
File: front-end/src/components/ocr/OcrWizardUpload.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: OcrMultiRecordMapper ===
File: front-end/src/components/ocr/OcrMultiRecordMapper.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
import {
import {
import { EditableRecordRow } from './EditableRecordRow';
import { OcrTextBlockList } from './OcrTextBlockList';
import { useMappingState, DeathRecord, MappingStateManager } from './MappingState';
import { OcrRowSplitter, generateMockOcrData, RecordSegment } from './utils/ocrRowSplitter';

--- PROPS/INTERFACES ---
interface OcrMultiRecordMapperProps {
  ocrData?: any; // OCR data from backend
  onSubmit: (correctedRecords: any) => void;
  onCancel?: () => void;
  churchId: string;
  className?: string;
}

export const OcrMultiRecordMapper: React.FC<OcrMultiRecordMapperProps> = ({
  ocrData,
  onSubmit,

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useMemo, useCallback } from 'react';
  const [autoSplitComplete, setAutoSplitComplete] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [previewOpen, setPreviewOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState<string | null>(null);
  const [lockedRecords, setLockedRecords] = useState<Set<string>>(new Set());
  const [collapsedRecords, setCollapsedRecords] = useState<Set<string>>(new Set());
  const [completedRecordsCount, setCompletedRecordsCount] = useState(0);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/ocr/submit-corrected-records', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 574
Component exports: 7

=== Component Analysis: WizardUpload ===
File: front-end/src/components/ocr/WizardUpload.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { 
import { Step1RecordDetails } from './wizard/Step1RecordDetails';
import { Step2FileUploader } from './wizard/Step2FileUploader';
import { Step3FileReview } from './wizard/Step3FileReview';
import { Step4Confirmation } from './wizard/Step4Confirmation';

--- PROPS/INTERFACES ---
interface OcrWizardUploadProps {
  churchId: string;
  onComplete?: (data: WizardFormData) => void;
  onCancel?: () => void;
}

const steps = [
  'Record Details',
  'Upload Files', 
  'Review Files',
  'Confirm & Submit'

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [activeStep, setActiveStep] = useState(0);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [formData, setFormData] = useState<WizardFormData>({

--- API INTEGRATION ---
      const response = await fetch(`/api/church/${churchId}/ocr/upload`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 311
Component exports: 4

=== Component Analysis: OcrPreviewModal ===
File: front-end/src/components/ocr/OcrPreviewModal.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { 

--- PROPS/INTERFACES ---
interface OcrPreviewModalProps {
  job: OcrJobMetadata | null;
  isOpen: boolean;
  onClose: () => void;
  onSave?: (jobId: string, fields: ExtractedField[]) => Promise<void>;
  churchId: string;
}

export const OcrPreviewModal: React.FC<OcrPreviewModalProps> = ({
  job,
  isOpen,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [imageUrl, setImageUrl] = useState<string>('');
  const [extractedText, setExtractedText] = useState<string>('');
  const [editableFields, setEditableFields] = useState<ExtractedField[]>([]);
  const [isEditing, setIsEditing] = useState(false);
  const [saving, setSaving] = useState(false);
  const [loading, setLoading] = useState(false);
  const [imageScale, setImageScale] = useState(1);
  const [showOverlay, setShowOverlay] = useState(true);
  const [activeFieldIndex, setActiveFieldIndex] = useState<number | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${job.id}/details`);
        console.error('Failed to fetch OCR details');
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${job.id}/export`);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 446
Component exports: 2

=== Component Analysis: ExtractionAnalytics ===
File: front-end/src/components/ocr/ExtractionAnalytics.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { 

--- PROPS/INTERFACES ---
interface ExtractionAnalyticsProps {
  churchId: number;
}

const ExtractionAnalytics: React.FC<ExtractionAnalyticsProps> = ({ churchId }) => {
  const [stats, setStats] = useState<ExtractionStats | null>(null);
  const [jobsNeedingReview, setJobsNeedingReview] = useState<JobNeedingReview[]>([]);
  const [loading, setLoading] = useState(true);
  const [timeframe, setTimeframe] = useState('30d');
  const [reviewPage, setReviewPage] = useState(1);
  const [reviewLoading, setReviewLoading] = useState(false);

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [stats, setStats] = useState<ExtractionStats | null>(null);
  const [jobsNeedingReview, setJobsNeedingReview] = useState<JobNeedingReview[]>([]);
  const [loading, setLoading] = useState(true);
  const [timeframe, setTimeframe] = useState('30d');
  const [reviewPage, setReviewPage] = useState(1);
  const [reviewLoading, setReviewLoading] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
    fetchStats();
    fetchJobsNeedingReview();
  const fetchStats = async () => {
      const response = await fetch(`/api/church/${churchId}/ocr/extraction/stats?timeframe=${timeframe}`);
      console.error('Error fetching extraction stats:', error);
  const fetchJobsNeedingReview = async () => {
      const response = await fetch(`/api/church/${churchId}/ocr/extraction/review?page=${reviewPage}&limit=10`);
      console.error('Error fetching jobs needing review:', error);
          <Button variant="outline" size="sm" onClick={fetchStats}>

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 563
Component exports: 3

=== Component Analysis: OcrRecordMapper ===
File: front-end/src/components/ocr/OcrRecordMapper.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useCallback } from 'react';
import {
import {
import { DndContext, closestCenter } from '@dnd-kit/core';
import { OcrCorrectionTool } from './OcrCorrectionTool';
import { FieldTemplateSelector } from './FieldTemplateSelector';
import { SmartSuggestionEngine } from './SmartSuggestionEngine';

--- PROPS/INTERFACES ---
interface OcrRecordMapperProps {
  churchId: string;
  userEmail?: string;
  onSubmit?: (mappedRecord: any) => void;
  onClose?: () => void;
}

interface MappingSession {
  id: string;
  template: string;
  imageFile?: File;

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useCallback } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [currentSession, setCurrentSession] = useState<MappingSession | null>(null);
  const [suggestionEngine] = useState(() => new SmartSuggestionEngine(churchId));
  const [autoSuggestEnabled, setAutoSuggestEnabled] = useState(true);
  const [statsDialogOpen, setStatsDialogOpen] = useState(false);
  const [exportDialogOpen, setExportDialogOpen] = useState(false);
  const [mappingStats, setMappingStats] = useState<any>(null);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 576
Component exports: 10

=== Component Analysis: EditableRecordRow ===
File: front-end/src/components/ocr/EditableRecordRow.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import {
import {
import { DeathRecord, FieldMapping, MappingStateManager } from './MappingState';

--- PROPS/INTERFACES ---
interface EditableRecordRowProps {
  record: DeathRecord;
  recordIndex: number;
  onUpdateField: (fieldName: keyof DeathRecord, value: string) => void;
  onDeleteRecord: () => void;
  onClearFieldMapping: (fieldName: keyof DeathRecord) => void;
  fieldSuggestions: Record<string, string[]>;
  onSaveSuggestion: (fieldName: keyof DeathRecord, value: string) => void;
  isEditing?: boolean;
  onToggleEdit?: () => void;
  isLocked?: boolean;

--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
  const [editingField, setEditingField] = useState<string | null>(null);
  const [pendingValues, setPendingValues] = useState<Record<string, string>>({});

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 473
Component exports: 1

=== Component Analysis: OcrCorrectionTool ===
File: front-end/src/components/ocr/OcrCorrectionTool.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { DndContext, closestCenter, DragOverlay } from '@dnd-kit/core';
import {
import { CSS } from '@dnd-kit/utilities';

--- PROPS/INTERFACES ---
interface OcrCorrectionToolProps {
  churchId: string;
  onSubmit?: (mappedRecord: any) => void;
  initialImage?: File;
  initialTemplate?: string;
}

// Sortable Text Block Component
const SortableTextBlock: React.FC<{ block: OcrBlock; isUsed: boolean }> = ({ block, isUsed }) => {
  const {
    attributes,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [selectedTemplate, setSelectedTemplate] = useState(initialTemplate);
  const [ocrBlocks, setOcrBlocks] = useState<OcrBlock[]>([]);
  const [fieldMappings, setFieldMappings] = useState<Record<string, FieldMapping | null>>({});
  const [uploadedImage, setUploadedImage] = useState<File | null>(initialImage || null);
  const [isProcessing, setIsProcessing] = useState(false);
  const [previewOpen, setPreviewOpen] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [activeId, setActiveId] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
  2. Upload an image → run OCR using Google Vision API.

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 752
Component exports: 2

=== Component Analysis: EntityExtractionViewer ===
File: front-end/src/components/ocr/EntityExtractionViewer.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { 

--- PROPS/INTERFACES ---
interface EntityExtractionViewerProps {
  jobId: number;
  churchId: number;
  onEntitiesUpdated?: (entities: ExtractedEntities) => void;
}

const EntityExtractionViewer: React.FC<EntityExtractionViewerProps> = ({
  jobId,
  churchId,
  onEntitiesUpdated
}) => {

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [entities, setEntities] = useState<ExtractedEntities | null>(null);
  const [loading, setLoading] = useState(true);
  const [editing, setEditing] = useState(false);
  const [editedFields, setEditedFields] = useState<Record<string, string>>({});
  const [reviewNotes, setReviewNotes] = useState('');
  const [extracting, setExtracting] = useState(false);
  const [showRawText, setShowRawText] = useState(false);
  const [ocrResult, setOcrResult] = useState('');
  const [expandedSections, setExpandedSections] = useState<Set<string>>(new Set(['personal']));
  useEffect(() => {

--- API INTEGRATION ---
    fetchJobEntities();
  const fetchJobEntities = async () => {
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${jobId}/entities`);
        console.error('Failed to fetch entities');
      console.error('Error fetching entities:', error);
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${jobId}/extract`, {
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${jobId}/entities`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 482
Component exports: 1

=== Component Analysis: ConfidenceBadge ===
File: front-end/src/components/ocr/ConfidenceBadge.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Badge } from '../ui/badge';
import { CheckCircle2, AlertTriangle, AlertCircle } from 'lucide-react';

--- PROPS/INTERFACES ---
interface ConfidenceBadgeProps {
  confidence: number;
  size?: 'sm' | 'md' | 'lg';
  showIcon?: boolean;
  showPercentage?: boolean;
}

export const ConfidenceBadge: React.FC<ConfidenceBadgeProps> = ({
  confidence,
  size = 'md',
  showIcon = true,

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 84
Component exports: 1

=== Component Analysis: OcrTestPanel ===
File: front-end/src/components/ocr/OcrTestPanel.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';
import { Button } from '../ui/button';
import { Badge } from '../ui/badge';
import { 
import { useOcrTests, TestResult } from '../../hooks/useOcrTests';

--- PROPS/INTERFACES ---
interface OcrTestPanelProps {
  churchId: string;
}

export const OcrTestPanel: React.FC<OcrTestPanelProps> = ({ churchId }) => {
  const [expandedResult, setExpandedResult] = useState<string | null>(null);
  
  const {
    testResults,
    isRunning,
    currentTest,

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [expandedResult, setExpandedResult] = useState<string | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 287
Component exports: 1

=== Component Analysis: OCRDragComponents ===
File: front-end/src/components/ocr/OCRDragComponents.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useSortable } from '@dnd-kit/sortable';
import { useDroppable } from '@dnd-kit/core';
import { CSS } from '@dnd-kit/utilities';
import {
import {

--- PROPS/INTERFACES ---
interface DroppableFieldProps {
  fieldName: string;
  assigned: any;
  onAssign: (fieldName: string, blockId: string) => void;
  onClear?: (fieldName: string) => void;
}

interface SortableTextBlockProps {
  block: OcrBlock;
  isUsed?: boolean;
}

export const DroppableField: React.FC<DroppableFieldProps> = ({
  fieldName,
  assigned,
  onAssign,
  onClear
}) => {

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 228
Component exports: 2

=== Component Analysis: OcrInterface ===
File: front-end/src/components/ocr/OcrInterface.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef } from 'react';
import {
import {
import { OcrWizardEnhanced } from './OcrWizardEnhanced';
import { OcrPreviewModal } from './OcrPreviewModal';
import { OcrRecordMapper } from './OcrRecordMapper';
import { OcrMultiRecordMapper } from './OcrMultiRecordMapper';
import { GlobalTemplateEditor } from './GlobalTemplateEditor';

--- PROPS/INTERFACES ---
interface OcrInterfaceProps {
  churchId: string;
  userEmail?: string;
  theme?: string;
}

export const OcrInterface: React.FC<OcrInterfaceProps> = ({ 
  churchId, 
  userEmail,
  theme = 'light' 
}) => {

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [previewModalOpen, setPreviewModalOpen] = useState(false);
  const [selectedJob, setSelectedJob] = useState<OcrJobMetadata | null>(null);
  const [wizardOpen, setWizardOpen] = useState(false);
  const [quickUploading, setQuickUploading] = useState(false);
  const [ocrTextModalOpen, setOcrTextModalOpen] = useState(false);
  const [selectedOcrText, setSelectedOcrText] = useState<{job: OcrJobMetadata, text: string} | null>(null);
  const [loadingOcrText, setLoadingOcrText] = useState(false);
  const [mapperOpen, setMapperOpen] = useState(false);
  const [ocrJobs, setOcrJobs] = useState<OcrJobMetadata[]>([]);
  const [jobsLoading, setJobsLoading] = useState(false);
  const [jobsError, setJobsError] = useState<string | null>(null);
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
  const fetchOcrJobs = async () => {
      const response = await fetch(`/api/church/${churchId}/ocr/jobs`);
        throw new Error(`Failed to fetch OCR jobs: ${response.status} ${response.statusText}`);
      console.error('Failed to fetch OCR jobs:', error);
      setJobsError(error instanceof Error ? error.message : 'Failed to fetch OCR jobs');
      fetchOcrJobs();
    fetchOcrJobs();
        fetchOcrJobs();
      fetchOcrJobs();
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${jobId}/update`, {
      const response = await fetch(`/api/church/${churchId}/ocr/jobs/${job.id}/details`);
      console.error('Failed to fetch OCR text:', error);
        const response = await fetch(`/api/church/${churchId}/ocr/upload`, {
      await fetchOcrJobs();
                            onClick={fetchOcrJobs}
                    fetchOcrJobs();
                    fetchOcrJobs();
                fetchOcrJobs();
                fetchOcrJobs();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1177
Component exports: 1

=== Component Analysis: GlobalTemplateEditor ===
File: front-end/src/components/ocr/GlobalTemplateEditor.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface GlobalTemplateEditorProps {
  churchId: string;
  userEmail: string;
}

export const GlobalTemplateEditor: React.FC<GlobalTemplateEditorProps> = ({ 
  churchId, 
  userEmail 
}) => {
  const [activeTab, setActiveTab] = useState(0);
  const [templates, setTemplates] = useState<{ [key: string]: GlobalTemplate }>({});

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeTab, setActiveTab] = useState(0);
  const [templates, setTemplates] = useState<{ [key: string]: GlobalTemplate }>({});
  const [loading, setLoading] = useState(false);
  const [saving, setSaving] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [previewOpen, setPreviewOpen] = useState(false);
  const [previewTemplate, setPreviewTemplate] = useState<GlobalTemplate | null>(null);
  const [unsavedChanges, setUnsavedChanges] = useState<Set<string>>(new Set());
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/templates/global/predefined');
      const response = await fetch(`/api/templates/global/predefined/${recordType}`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 577
Component exports: 1

=== Component Analysis: FieldTemplateSelector ===
File: front-end/src/components/ocr/FieldTemplateSelector.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import {
import {
import { CSS } from '@dnd-kit/utilities';

--- PROPS/INTERFACES ---
interface FieldTemplateSelectorProps {
  selectedTemplate: string;
  onTemplateChange: (templateKey: string, fields: string[]) => void;
  churchId?: string;
}

interface SortableFieldProps {
  field: string;
  index: number;
  onEdit: (index: number, newValue: string) => void;
  onDelete: (index: number) => void;
}

const SortableField: React.FC<SortableFieldProps> = ({ field, index, onEdit, onDelete }) => {
  const [isEditing, setIsEditing] = useState(false);
  const [editValue, setEditValue] = useState(field);


--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [isEditing, setIsEditing] = useState(false);
  const [editValue, setEditValue] = useState(field);
  const [customTemplates, setCustomTemplates] = useState<CustomTemplate[]>([]);
  const [editDialogOpen, setEditDialogOpen] = useState(false);
  const [currentFields, setCurrentFields] = useState<string[]>([]);
  const [newFieldName, setNewFieldName] = useState('');
  const [templateName, setTemplateName] = useState('');
  const [isCreatingNew, setIsCreatingNew] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 567
Component exports: 1

=== Component Analysis: OcrWizardEnhanced ===
File: front-end/src/components/ocr/OcrWizardEnhanced.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback, useRef, useEffect } from 'react';
import {
import {
import { useDropzone } from 'react-dropzone';

--- PROPS/INTERFACES ---
interface OcrWizardEnhancedProps {
  churchId: string;
  onComplete: (result: any) => void;
  onCancel: () => void;
  initialFiles?: File[];
}

// Language options
const LANGUAGE_OPTIONS = [
  { code: 'en', name: 'English', flag: '🇺🇸' },
  { code: 'el', name: 'Greek', flag: '🇬🇷' },

--- STATE MANAGEMENT ---
import React, { useState, useCallback, useRef, useEffect } from 'react';
  const [activeStep, setActiveStep] = useState(0);
  const [uploadedFiles, setUploadedFiles] = useState<FileMetadata[]>([]);
  const [preprocessingOptions, setPreprocessingOptions] = useState<PreprocessingOptions>({
  const [isProcessing, setIsProcessing] = useState(false);
  const [processingProgress, setProcessingProgress] = useState(0);
  const [ocrResults, setOcrResults] = useState<OcrResult[]>([]);
  const [extractedFields, setExtractedFields] = useState<ExtractedField[]>([]);
  const [selectedFileIndex, setSelectedFileIndex] = useState(0);
  const [showBoundingBoxes, setShowBoundingBoxes] = useState(true);
  const [previewZoom, setPreviewZoom] = useState(1);
  const [error, setError] = useState<string | null>(null);

--- API INTEGRATION ---
        const ocrResponse = await fetch(`/api/church/${churchId}/ocr/upload`, {
      const extractResponse = await fetch(`/api/church/${churchId}/ocr/extract-fields`, {
      const saveResponse = await fetch(`/api/church/${churchId}/ocr/save-wizard`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 831
Component exports: 1

=== Component Analysis: RetryButton ===
File: front-end/src/components/ocr/RetryButton.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Button } from '../ui/button';
import { RefreshCw, AlertCircle, Clock } from 'lucide-react';
import { toast } from 'react-toastify';

--- PROPS/INTERFACES ---
interface RetryButtonProps {
  onRetry: () => Promise<void>;
  maxRetries?: number;
  disabled?: boolean;
  size?: 'sm' | 'default' | 'lg';
  variant?: 'default' | 'outline' | 'ghost';
  className?: string;
}

export const RetryButton: React.FC<RetryButtonProps> = ({
  onRetry,

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [retryCount, setRetryCount] = useState(0);
  const [isRetrying, setIsRetrying] = useState(false);
  const [cooldownTime, setCooldownTime] = useState(0);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 111
Component exports: 1

=== Component Analysis: PublicOCRUploader ===
File: front-end/src/components/PublicOCRUploader.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import {
import { CloudUpload, CheckCircle, Error, AccessTime } from '@mui/icons-material';
import { useDropzone } from 'react-dropzone';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [tokenData, setTokenData] = useState<TokenData | null>(null);
    const [tokenValid, setTokenValid] = useState<boolean | null>(null);
    const [files, setFiles] = useState<UploadedFile[]>([]);
    const [uploading, setUploading] = useState(false);
    const [selectedLanguage, setSelectedLanguage] = useState('en');
    const [submittedBy, setSubmittedBy] = useState('');
    useEffect(() => {

--- API INTEGRATION ---
                const response = await fetch(`/api/upload/verify-upload-token/${token}`);
                const response = await fetch(`/api/public-ocr-${selectedLanguage}`, {

--- ROUTING ---
                    <Typography variant="h6">Invalid or Expired Upload Link</Typography>

--- METRICS ---
Lines of code: 410
Component exports: 1

=== Component Analysis: TableThemeSelector ===
File: front-end/src/components/TableThemeSelector.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import '../styles/table-themes.css';

--- PROPS/INTERFACES ---
interface TableThemeSelectorProps {
  selectedTheme: string;
  onThemeChange: (theme: string) => void;
  variant?: 'dropdown' | 'popover';
  size?: 'small' | 'medium';
  showLabel?: boolean;
}

export const TableThemeSelector: React.FC<TableThemeSelectorProps> = ({
  selectedTheme,
  onThemeChange,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 307
Component exports: 3

=== Component Analysis: KanbanTaskModal.broken ===
File: front-end/src/components/KanbanTaskModal.broken.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';
import { format } from 'date-fns';

--- PROPS/INTERFACES ---
interface KanbanTaskModalProps {
  open: boolean;
  onClose: () => void;
  task: Task;
  onRefresh: () => void;
  boardLabels: Label[];
}

const priorityColors = {
  low: '#28a745',
  medium: '#ffc107',

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [isEditing, setIsEditing] = useState(false);
  const [formData, setFormData] = useState({
  const [comments, setComments] = useState<Comment[]>([]);
  const [newComment, setNewComment] = useState('');
  const [users, setUsers] = useState<User[]>([]);
  const [selectedLabels, setSelectedLabels] = useState<Label[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [markdownFile, setMarkdownFile] = useState<File | null>(null);
  const [uploadingMarkdown, setUploadingMarkdown] = useState(false);
  const [markdownContent, setMarkdownContent] = useState<string>('');
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/kanban/tasks/${task.id}/comments`, {
      const response = await fetch('/api/users', {
        const response = await fetch(`/api/kanban/tasks/${task.id}/markdown`, {
      const response = await fetch(`/api/kanban/tasks/${task.id}`, {
      const response = await fetch(`/api/kanban/tasks/${task.id}/comments`, {
      const response = await fetch(`/api/kanban/tasks/comments/${commentId}`, {
      const response = await fetch(`/api/kanban/tasks/${task.id}/markdown`, {
      const response = await fetch(`/api/kanban/tasks/${task.id}/markdown`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 683
Component exports: 1

=== Component Analysis: RadarChartsCode ===
File: front-end/src/components/charts/Radar Charts/code/RadarChartsCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { Grid } from '@mui/material';
import { useTheme } from '@mui/material/styles';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 2

=== Component Analysis: LineChartCode ===
File: front-end/src/components/charts/Line Chart/code/LineChartCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 106
Component exports: 2

=== Component Analysis: DoughnutChartsCode ===
File: front-end/src/components/charts/Doughnut Charts/code/DoughnutChartsCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import  Grid  from '@mui/material/Grid';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 80
Component exports: 2

=== Component Analysis: AreaChartCode ===
File: front-end/src/components/charts/Area Chart/code/AreaChartCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 102
Component exports: 2

=== Component Analysis: PieChartsCode ===
File: front-end/src/components/charts/Pie Charts/code/PieChartsCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Grid } from '@mui/material';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 79
Component exports: 2

=== Component Analysis: RadialbarChartsCode ===
File: front-end/src/components/charts/Radialbar Charts/code/RadialbarChartsCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { Grid } from '@mui/material';
import { useTheme } from '@mui/material/styles';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 85
Component exports: 2

=== Component Analysis: CandlestickChartCode ===
File: front-end/src/components/charts/Candlestick Chart/code/CandlestickChartCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 147
Component exports: 2

=== Component Analysis: GradientChartCode ===
File: front-end/src/components/charts/Gradient Chart/code/GradientChartCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 131
Component exports: 2

=== Component Analysis: ColumnChartCode ===
File: front-end/src/components/charts/Column Chart/code/ColumnChartCode.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 116
Component exports: 2

=== Component Analysis: StraightAnglePieChart ===
File: front-end/src/components/muicharts/piecharts/StraightAnglePieChart.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import { PieChart } from '@mui/x-charts/PieChart';
import ParentCard from 'src/components/shared/ParentCard';
import StraightAnglePieCode from '../code/piechartcode/StraightAnglePieCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: PieChartWithCustomizedLabel ===
File: front-end/src/components/muicharts/piecharts/PieChartWithCustomizedLabel.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import { PieChart, pieArcLabelClasses } from '@mui/x-charts/PieChart';
import ParentCard from 'src/components/shared/ParentCard';
import PieChartWithCustomizedLabelCode from '../code/piechartcode/PieChartWithCustomizedLabelCode'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 47
Component exports: 1

=== Component Analysis: OnSeriesItemClickChart ===
File: front-end/src/components/muicharts/piecharts/OnSeriesItemClickChart.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { PieChart } from '@mui/x-charts/PieChart';
import Typography from '@mui/material/Typography';
import Stack from '@mui/material/Stack';
import OnSeriesItemClickCode from '../code/piechartcode/OnSeriesItemClickCode';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [identifier, setIdentifier] = React.useState(null);
    const [id, setId] = React.useState(undefined);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 69
Component exports: 1

=== Component Analysis: BasicPieChart ===
File: front-end/src/components/muicharts/piecharts/BasicPieChart.tsx
Date: Wed Jul 30 12:59:54 AM EDT 2025

--- IMPORTS ---
import { PieChart } from '@mui/x-charts/PieChart';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material';
import BasicPieCode from '../code/piechartcode/BasicPieCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: PieChartWithCenterLabelChart ===
File: front-end/src/components/muicharts/piecharts/PieChartWithCenterLabelChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { PieChart } from '@mui/x-charts/PieChart';
import { useDrawingArea } from '@mui/x-charts/hooks';
import { styled } from '@mui/material/styles';
import ParentCard from 'src/components/shared/ParentCard';
import PieChartWithCenterLabelCode from '../code/piechartcode/PieChartWithCenterLabelCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 46
Component exports: 1

=== Component Analysis: PieChartWithPaddingAngleChart ===
File: front-end/src/components/muicharts/piecharts/PieChartWithPaddingAngleChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import Stack from '@mui/material/Stack';
import { PieChart } from '@mui/x-charts/PieChart';
import ParentCard from 'src/components/shared/ParentCard';
import PieChartWithPaddingAngleCode from '../code/piechartcode/PieChartWithPaddingAngleCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: TwoLevelPieChart ===
File: front-end/src/components/muicharts/piecharts/TwoLevelPieChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import ParentCard from 'src/components/shared/ParentCard';
import TwoLevelPieCode from "../code/piechartcode/TwoLevelPieCode";
import { PieChart } from "@mui/x-charts/PieChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: TwoSimplePieChart ===
File: front-end/src/components/muicharts/piecharts/TwoSimplePieChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { PieChart } from '@mui/x-charts/PieChart';
import ParentCard from 'src/components/shared/ParentCard';
import TwoSimplePieCode from '../code/piechartcode/TwoSimplePieCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: StackedAreaChart ===
File: front-end/src/components/muicharts/linescharts/areacharts/StackedAreaChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { LineChart, lineElementClasses } from '@mui/x-charts/LineChart';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from "@mui/material";
import StackedAreaCode from '../../code/areachartscode/StackedAreaCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 48
Component exports: 1

=== Component Analysis: AreaChartConnectNullsChart ===
File: front-end/src/components/muicharts/linescharts/areacharts/AreaChartConnectNullsChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import Stack from '@mui/material/Stack';
import { LineChart } from '@mui/x-charts/LineChart';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material';
import AreaChartConnectNullsCode from '../../code/areachartscode/AreaChartConnectNullsCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 35
Component exports: 1

=== Component Analysis: AreaChartFillByValueChart ===
File: front-end/src/components/muicharts/linescharts/areacharts/AreaChartFillByValueChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { green, red } from '@mui/material/colors';
import Stack from '@mui/material/Stack';
import { useYScale, useDrawingArea } from '@mui/x-charts/hooks';
import { LineChart, areaElementClasses } from '@mui/x-charts/LineChart';
import { useTheme } from '@mui/material';
import ParentCard from 'src/components/shared/ParentCard';
import AreaChartFillByValueCode from '../../code/areachartscode/AreaChartFillByValueCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 187
Component exports: 1

=== Component Analysis: SimpleAreaChart ===
File: front-end/src/components/muicharts/linescharts/areacharts/SimpleAreaChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import SimpleAreaCode from '../../code/areachartscode/SimpleAreaCode'
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material'
import { LineChart, lineElementClasses } from '@mui/x-charts/LineChart'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 45
Component exports: 1

=== Component Analysis: PercentAreaChart ===
File: front-end/src/components/muicharts/linescharts/areacharts/PercentAreaChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { LineChart } from '@mui/x-charts/LineChart';
import { useTheme } from '@mui/material';
import ParentCard from 'src/components/shared/ParentCard';
import PercentAreaCode from '../../code/areachartscode/PercentAreaCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 80
Component exports: 1

=== Component Analysis: TinyAreaChart ===
File: front-end/src/components/muicharts/linescharts/areacharts/TinyAreaChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { ChartContainer } from '@mui/x-charts/ChartContainer';
import { AreaPlot } from '@mui/x-charts/LineChart';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material';
import TinyAreaCode from '../../code/areachartscode/TinyAreaCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 45
Component exports: 1

=== Component Analysis: TinyLineChart ===
File: front-end/src/components/muicharts/linescharts/linechart/TinyLineChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { useTheme } from "@mui/material";
import ParentCard from "../../../shared/ParentCard";
import { ChartContainer } from '@mui/x-charts/ChartContainer';
import {
import TinyLineCode from '../../code/linechartscode/TinyLineCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 43
Component exports: 1

=== Component Analysis: BiaxialLineChart ===
File: front-end/src/components/muicharts/linescharts/linechart/BiaxialLineChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { LineChart } from "@mui/x-charts/LineChart";
import BiaxialLineCode from "../../code/linechartscode/BiaxialLineCode";
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: LinewithforecastChart ===
File: front-end/src/components/muicharts/linescharts/linechart/LinewithforecastChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react'
import { LineChart, AnimatedLine, AnimatedLineProps } from '@mui/x-charts/LineChart';
import { useChartId, useDrawingArea, useXScale } from '@mui/x-charts/hooks';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from "@mui/material";
import LinewithforecastCode from '../../code/linechartscode/LinewithforecastCode';
import { SxProps, Theme } from '@mui/system';

--- PROPS/INTERFACES ---
interface CustomAnimatedLineProps extends AnimatedLineProps {
    sx?: SxProps<Theme>;
    limit?: number;
    sxBefore?: SxProps<Theme>;
    sxAfter?: SxProps<Theme>;
}


function CustomAnimatedLine(props: CustomAnimatedLineProps) {
    const { limit, sxBefore, sxAfter, ...other } = props;
    const { top, bottom, height, left, width } = useDrawingArea();

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 90
Component exports: 1

=== Component Analysis: DashedLineChart ===
File: front-end/src/components/muicharts/linescharts/linechart/DashedLineChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import {
import { useTheme } from "@mui/material";
import ParentCard from "../../../shared/ParentCard";
import DashedLineCode from "../../code/linechartscode/DashedLineCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 52
Component exports: 1

=== Component Analysis: SimpleLineChart ===
File: front-end/src/components/muicharts/linescharts/linechart/SimpleLineChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { LineChart } from '@mui/x-charts/LineChart';
import { useTheme } from "@mui/material";
import ParentCard from "../../../shared/ParentCard";
import SimpleLineCode from '../../code/linechartscode/SimpleLineCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: LineChartWithReferenceLinesChart ===
File: front-end/src/components/muicharts/linescharts/linechart/LineChartWithReferenceLinesChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { ChartContainer } from "@mui/x-charts/ChartContainer";
import { ChartsReferenceLine } from "@mui/x-charts/ChartsReferenceLine";
import { LinePlot, MarkPlot } from "@mui/x-charts/LineChart";
import { ChartsXAxis } from "@mui/x-charts/ChartsXAxis";
import { ChartsYAxis } from "@mui/x-charts/ChartsYAxis";
import ParentCard from "../../../shared/ParentCard";
import LineChartWithReferenceLinesCode from "../../code/linechartscode/LineChartWithReferenceLinesCode";
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: ArcDesignChart ===
File: front-end/src/components/muicharts/gaugecharts/ArcDesignChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { Gauge, gaugeClasses } from '@mui/x-charts/Gauge';
import ParentCard from 'src/components/shared/ParentCard';
import ArcDesignCode from '../code/gaugechartscode/ArcDesignCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 35
Component exports: 1

=== Component Analysis: GaugePointerChart ===
File: front-end/src/components/muicharts/gaugecharts/GaugePointerChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import {
import ParentCard from 'src/components/shared/ParentCard';
import GaugePointerCode from '../code/gaugechartscode/GaugePointerCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 55
Component exports: 1

=== Component Analysis: BasicGaugesChart ===
File: front-end/src/components/muicharts/gaugecharts/BasicGaugesChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import Stack from '@mui/material/Stack';
import { Gauge } from '@mui/x-charts/Gauge';
import ParentCard from 'src/components/shared/ParentCard';
import BasicGaugesCode from '../code/gaugechartscode/BasicGaugesCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 18
Component exports: 1

=== Component Analysis: AreaSparkLineChart ===
File: front-end/src/components/muicharts/sparklinecharts/AreaSparkLineChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import Stack from '@mui/material/Stack';
import Box from '@mui/material/Box';
import { SparkLineChart } from '@mui/x-charts/SparkLineChart';
import AreaSparkLineCode from '../code/sparklinecode/AreaSparkLineCode';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: BasicSparkLineCustomizationChart ===
File: front-end/src/components/muicharts/sparklinecharts/BasicSparkLineCustomizationChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Stack from '@mui/material/Stack';
import Box from '@mui/material/Box';
import FormControlLabel from '@mui/material/FormControlLabel';
import Switch from '@mui/material/Switch';
import { SparkLineChart } from '@mui/x-charts/SparkLineChart';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material';
import BasicSparkLineCustomizationCode from '../code/sparklinecode/BasicSparkLineCustomizationCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [showHighlight, setShowHighlight] = React.useState(true);
    const [showTooltip, setShowTooltip] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 82
Component exports: 1

=== Component Analysis: BasicSparkLine ===
File: front-end/src/components/muicharts/sparklinecharts/BasicSparkLine.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import Stack from '@mui/material/Stack';
import Box from '@mui/material/Box';
import { SparkLineChart } from '@mui/x-charts/SparkLineChart';
import BasicSparkLineCode from '../code/sparklinecode/BasicSparkLineCode';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: TwoSimplePieCode ===
File: front-end/src/components/muicharts/code/piechartcode/TwoSimplePieCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { PieChart } from '@mui/x-charts/PieChart';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 2

=== Component Analysis: TwoLevelPieCode ===
File: front-end/src/components/muicharts/code/piechartcode/TwoLevelPieCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import React from "react";
import ParentCard from 'src/components/shared/ParentCard';
import TwoLevelPieCode from "../code/piechartcode/TwoLevelPieCode";
import { PieChart } from "@mui/x-charts/PieChart";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 77
Component exports: 2

=== Component Analysis: StraightAnglePieCode ===
File: front-end/src/components/muicharts/code/piechartcode/StraightAnglePieCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { PieChart } from '@mui/x-charts/PieChart';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 50
Component exports: 2

=== Component Analysis: PieChartWithPaddingAngleCode ===
File: front-end/src/components/muicharts/code/piechartcode/PieChartWithPaddingAngleCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Stack from '@mui/material/Stack';
import { PieChart } from '@mui/x-charts/PieChart';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 76
Component exports: 2

=== Component Analysis: PieChartWithCustomizedLabelCode ===
File: front-end/src/components/muicharts/code/piechartcode/PieChartWithCustomizedLabelCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { PieChart, pieArcLabelClasses } from '@mui/x-charts/PieChart';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 68
Component exports: 2

=== Component Analysis: BasicPieCode ===
File: front-end/src/components/muicharts/code/piechartcode/BasicPieCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { PieChart } from '@mui/x-charts/PieChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 54
Component exports: 2

=== Component Analysis: OnSeriesItemClickCode ===
File: front-end/src/components/muicharts/code/piechartcode/OnSeriesItemClickCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { PieChart } from '@mui/x-charts/PieChart';
import Typography from '@mui/material/Typography';
import Stack from '@mui/material/Stack';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [identifier, setIdentifier] = React.useState(null);
      const [id, setId] = React.useState(undefined);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 89
Component exports: 2

=== Component Analysis: PieChartWithCenterLabelCode ===
File: front-end/src/components/muicharts/code/piechartcode/PieChartWithCenterLabelCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { PieChart } from '@mui/x-charts/PieChart';
import { useDrawingArea } from '@mui/x-charts/hooks';
import { styled } from '@mui/material/styles';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 69
Component exports: 2

=== Component Analysis: LinewithforecastCode ===
File: front-end/src/components/muicharts/code/linechartscode/LinewithforecastCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { LineChart, AnimatedLine, AnimatedLineProps } from '@mui/x-charts/LineChart';
import { useChartId, useDrawingArea, useXScale } from '@mui/x-charts/hooks';
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from "@mui/material";
import LinewithforecastCode from '../../code/linechartscode/LinewithforecastCode';
import { SxProps, Theme } from '@mui/system';

--- PROPS/INTERFACES ---
interface CustomAnimatedLineProps extends AnimatedLineProps {
    limit?: number;
    sxBefore?: SxProps<Theme>;
    sxAfter?: SxProps<Theme>;
}

function CustomAnimatedLine(props) {
  const { limit, sxBefore, sxAfter, ...other } = props;
  const { top, bottom, height, left, width } = useDrawingArea();
  const scale = useXScale();
  const chartId = useChartId();

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 110
Component exports: 2

=== Component Analysis: TinyLineCode ===
File: front-end/src/components/muicharts/code/linechartscode/TinyLineCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { useTheme } from '@mui/material';
import { ChartContainer, LinePlot, MarkPlot } from '@mui/x-charts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 2

=== Component Analysis: DashedLineCode ===
File: front-end/src/components/muicharts/code/linechartscode/DashedLineCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { markElementClasses } from '@mui/x-charts'
import * as React from 'react';
import {
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 70
Component exports: 2

=== Component Analysis: LineChartWithReferenceLinesCode ===
File: front-end/src/components/muicharts/code/linechartscode/LineChartWithReferenceLinesCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from "react";
import { ChartContainer } from "@mui/x-charts/ChartContainer";
import { ChartsReferenceLine } from "@mui/x-charts/ChartsReferenceLine";
import { LinePlot, MarkPlot } from "@mui/x-charts/LineChart";
import { ChartsXAxis } from "@mui/x-charts/ChartsXAxis";
import { ChartsYAxis } from "@mui/x-charts/ChartsYAxis";
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 75
Component exports: 2

=== Component Analysis: BiaxialLineCode ===
File: front-end/src/components/muicharts/code/linechartscode/BiaxialLineCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { LineChart } from '@mui/x-charts/LineChart';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 2

=== Component Analysis: SimpleLineCode ===
File: front-end/src/components/muicharts/code/linechartscode/SimpleLineCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { LineChart } from '@mui/x-charts/LineChart';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 55
Component exports: 2

=== Component Analysis: TinyBarCode ===
File: front-end/src/components/muicharts/code/barchartcode/TinyBarCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 63
Component exports: 2

=== Component Analysis: BarChartStackedBySignCode ===
File: front-end/src/components/muicharts/code/barchartcode/BarChartStackedBySignCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 63
Component exports: 2

=== Component Analysis: PositiveAndNegativeBarCode ===
File: front-end/src/components/muicharts/code/barchartcode/PositiveAndNegativeBarCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 75
Component exports: 2

=== Component Analysis: BiaxialBarCode ===
File: front-end/src/components/muicharts/code/barchartcode/BiaxialBarCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 75
Component exports: 2

=== Component Analysis: MixedBarCode ===
File: front-end/src/components/muicharts/code/barchartcode/MixedBarCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 61
Component exports: 2

=== Component Analysis: SimpleBarCode ===
File: front-end/src/components/muicharts/code/barchartcode/SimpleBarCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 59
Component exports: 2

=== Component Analysis: StackedBarCode ===
File: front-end/src/components/muicharts/code/barchartcode/StackedBarCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog'
import React from "react";
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from "@mui/material/styles";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 60
Component exports: 2

=== Component Analysis: AreaChartConnectNullsCode ===
File: front-end/src/components/muicharts/code/areachartscode/AreaChartConnectNullsCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Stack from '@mui/material/Stack';
import { LineChart } from '@mui/x-charts/LineChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 55
Component exports: 2

=== Component Analysis: TinyAreaCode ===
File: front-end/src/components/muicharts/code/areachartscode/TinyAreaCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { ChartContainer } from '@mui/x-charts/ChartContainer';
import { AreaPlot } from '@mui/x-charts/LineChart';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 67
Component exports: 2

=== Component Analysis: StackedAreaCode ===
File: front-end/src/components/muicharts/code/areachartscode/StackedAreaCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { LineChart, lineElementClasses } from '@mui/x-charts/LineChart';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 67
Component exports: 2

=== Component Analysis: SimpleAreaCode ===
File: front-end/src/components/muicharts/code/areachartscode/SimpleAreaCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { useTheme } from "@mui/material";
import { LineChart, lineElementClasses } from '@mui/x-charts/LineChart';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 2

=== Component Analysis: AreaChartFillByValueCode ===
File: front-end/src/components/muicharts/code/areachartscode/AreaChartFillByValueCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { green, red } from '@mui/material/colors';
import Stack from '@mui/material/Stack';
import { useYScale, useDrawingArea } from '@mui/x-charts/hooks';
import { LineChart, areaElementClasses } from '@mui/x-charts/LineChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 202
Component exports: 2

=== Component Analysis: PercentAreaCode ===
File: front-end/src/components/muicharts/code/areachartscode/PercentAreaCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { LineChart } from '@mui/x-charts/LineChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 97
Component exports: 2

=== Component Analysis: AreaSparkLineCode ===
File: front-end/src/components/muicharts/code/sparklinecode/AreaSparkLineCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 2

=== Component Analysis: BasicSparkLineCode ===
File: front-end/src/components/muicharts/code/sparklinecode/BasicSparkLineCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import Stack from '@mui/material/Stack';
import Box from '@mui/material/Box';
import { SparkLineChart } from '@mui/x-charts/SparkLineChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 54
Component exports: 2

=== Component Analysis: BasicSparkLineCustomizationCode ===
File: front-end/src/components/muicharts/code/sparklinecode/BasicSparkLineCustomizationCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Stack from '@mui/material/Stack';
import Box from '@mui/material/Box';
import FormControlLabel from '@mui/material/FormControlLabel';
import Switch from '@mui/material/Switch';
import { SparkLineChart } from '@mui/x-charts/SparkLineChart';
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [showHighlight, setShowHighlight] = React.useState(true);
    const [showTooltip, setShowTooltip] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 102
Component exports: 2

=== Component Analysis: ScatterClickNoSnapCode ===
File: front-end/src/components/muicharts/code/scatterchartscode/ScatterClickNoSnapCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Stack from '@mui/material/Stack';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import IconButton from '@mui/material/IconButton';
import UndoOutlinedIcon from '@mui/icons-material/UndoOutlined';
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import { Light as SyntaxHighlighter } from "react-syntax-highlighter";
import { docco } from "react-syntax-highlighter/dist/esm/styles/hljs";
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data, setData] = React.useState();

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 161
Component exports: 2

=== Component Analysis: BasicScatterCode ===
File: front-end/src/components/muicharts/code/scatterchartscode/BasicScatterCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 219
Component exports: 2

=== Component Analysis: ScatterDatasetCode ===
File: front-end/src/components/muicharts/code/scatterchartscode/ScatterDatasetCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import { axisClasses } from '@mui/x-charts/ChartsAxis';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 129
Component exports: 2

=== Component Analysis: VoronoiInteractionCode ===
File: front-end/src/components/muicharts/code/scatterchartscode/VoronoiInteractionCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Stack from '@mui/material/Stack';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Typography from '@mui/material/Typography';
import Slider from '@mui/material/Slider';
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [voronoiMaxRadius, setVoronoiMaxRadius] = React.useState(25);
    const [disableVoronoi, setDisableVoronoi] = React.useState(false);
    const [undefinedRadius, setUndefinedRadius] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 136
Component exports: 2

=== Component Analysis: BasicGaugesCode ===
File: front-end/src/components/muicharts/code/gaugechartscode/BasicGaugesCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Stack from '@mui/material/Stack';
import { Gauge } from '@mui/x-charts/Gauge';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 2

=== Component Analysis: ArcDesignCode ===
File: front-end/src/components/muicharts/code/gaugechartscode/ArcDesignCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { Gauge, gaugeClasses } from '@mui/x-charts/Gauge';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 55
Component exports: 2

=== Component Analysis: GaugePointerCode ===
File: front-end/src/components/muicharts/code/gaugechartscode/GaugePointerCode.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 74
Component exports: 2

=== Component Analysis: ScatterClickNoSnapChart ===
File: front-end/src/components/muicharts/scattercharts/ScatterClickNoSnapChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Stack from '@mui/material/Stack';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import IconButton from '@mui/material/IconButton';
import UndoOutlinedIcon from '@mui/icons-material/UndoOutlined';
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import { Light as SyntaxHighlighter } from "react-syntax-highlighter";
import { docco } from "react-syntax-highlighter/dist/esm/styles/hljs";
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from '@mui/material';
import ScatterClickNoSnapCode from '../code/scatterchartscode/ScatterClickNoSnapCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data, setData] = React.useState<any>();

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 143
Component exports: 1

=== Component Analysis: VoronoiInteractionChart ===
File: front-end/src/components/muicharts/scattercharts/VoronoiInteractionChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Stack from '@mui/material/Stack';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Typography from '@mui/material/Typography';
import Slider from '@mui/material/Slider';
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import ParentCard from 'src/components/shared/ParentCard';
import VoronoiInteractionCode from '../code/scatterchartscode/VoronoiInteractionCode';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [voronoiMaxRadius, setVoronoiMaxRadius] = React.useState(25);
  const [disableVoronoi, setDisableVoronoi] = React.useState(false);
  const [undefinedRadius, setUndefinedRadius] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 114
Component exports: 1

=== Component Analysis: ScatterDatasetChart ===
File: front-end/src/components/muicharts/scattercharts/ScatterDatasetChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import { axisClasses } from '@mui/x-charts/ChartsAxis';
import { useTheme } from "@mui/material";
import ParentCard from 'src/components/shared/ParentCard';
import ScatterDatasetCode from '../code/scatterchartscode/ScatterDatasetCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 113
Component exports: 1

=== Component Analysis: BasicScatterChart ===
File: front-end/src/components/muicharts/scattercharts/BasicScatterChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { ScatterChart } from '@mui/x-charts/ScatterChart';
import BasicScatterCode from '../code/scatterchartscode/BasicScatterCode'
import ParentCard from 'src/components/shared/ParentCard';
import { useTheme } from "@mui/material";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 195
Component exports: 1

=== Component Analysis: BarChartStackedBySignChart ===
File: front-end/src/components/muicharts/barcharts/BarChartStackedBySignChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { BarChart } from "@mui/x-charts/BarChart";
import { useTheme } from "@mui/material";
import ParentCard from 'src/components/shared/ParentCard';
import BarChartStackedBySignCode from "../code/barchartcode/BarChartStackedBySignCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: TinyBarChart ===
File: front-end/src/components/muicharts/barcharts/TinyBarChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { BarPlot, ChartContainer } from "@mui/x-charts";
import { useTheme } from "@mui/material/styles";
import ParentCard from 'src/components/shared/ParentCard';
import TinyBarCode from "../code/barchartcode/TinyBarCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 48
Component exports: 1

=== Component Analysis: SimpleBarChart ===
File: front-end/src/components/muicharts/barcharts/SimpleBarChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { BarChart } from '@mui/x-charts/BarChart';
import ParentCard from 'src/components/shared/ParentCard';
import SimpleBarCode from '../code/barchartcode/SimpleBarCode'
import { useTheme } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 41
Component exports: 1

=== Component Analysis: MixedBarChart ===
File: front-end/src/components/muicharts/barcharts/MixedBarChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from '@mui/material';
import ParentCard from 'src/components/shared/ParentCard';
import MixedBarCode from '../code/barchartcode/MixedBarCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 1

=== Component Analysis: BiaxialBarChart ===
File: front-end/src/components/muicharts/barcharts/BiaxialBarChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { BarChart } from "@mui/x-charts/BarChart";
import { useTheme } from "@mui/material";
import ParentCard from 'src/components/shared/ParentCard';
import BiaxialBarCode from "../code/barchartcode/BiaxialBarCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 55
Component exports: 1

=== Component Analysis: StackedBarChart ===
File: front-end/src/components/muicharts/barcharts/StackedBarChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { useTheme } from '@mui/material';
import ParentCard from 'src/components/shared/ParentCard';
import { BarChart } from '@mui/x-charts/BarChart';
import StackedBarCode from '../code/barchartcode/StackedBarCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 1

=== Component Analysis: PositiveAndNegativeBarChart ===
File: front-end/src/components/muicharts/barcharts/PositiveAndNegativeBarChart.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import { BarChart } from '@mui/x-charts/BarChart';
import { useTheme } from '@mui/material';
import ParentCard from 'src/components/shared/ParentCard';
import PositiveAndNegativeBarCode from '../code/barchartcode/PositiveAndNegativeBarCode'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 56
Component exports: 1

=== Component Analysis: Footer ===
File: front-end/src/components/landingpage/footer/Footer.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Link, Typography, Container } from '@mui/material';
import logoIcon from 'src/assets/images/logos/logoIcon.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Grid, Link, Typography, Container } from '@mui/material';
            <Link target="_blank" href="/">
            </Link>

--- METRICS ---
Lines of code: 35
Component exports: 1

=== Component Analysis: DemoSlider ===
File: front-end/src/components/landingpage/demo-slider/DemoSlider.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import {
import mainDemo from 'src/assets/images/landingpage/demos/demo-main.jpg';
import darkDemo from 'src/assets/images/landingpage/demos/demo-dark.jpg';
import horizontalDemo from 'src/assets/images/landingpage/demos/demo-horizontal.jpg';
import nextauthDemo from 'src/assets/images/landingpage/demos/demo-firebase.jpg';
import rtlDemo from 'src/assets/images/landingpage/demos/demo-rtl.jpg';
import minisidebarDemo from 'src/assets/images/landingpage/demos/demo-minisidebar.jpg'
import app1 from 'src/assets/images/landingpage/apps/app-calendar.jpg';
import app2 from 'src/assets/images/landingpage/apps/app-chat.jpg';
import app3 from 'src/assets/images/landingpage/apps/app-contact.jpg';
import app4 from 'src/assets/images/landingpage/apps/app-email.jpg';
import app5 from 'src/assets/images/landingpage/apps/app-note.jpg';
import app6 from 'src/assets/images/landingpage/apps/app-user-profile.jpg';
import app7 from 'src/assets/images/landingpage/apps/app-blog.jpg';
import app8 from 'src/assets/images/landingpage/apps/app-ticket.jpg';
import app9 from 'src/assets/images/landingpage/apps/app-ecommerce-shop.jpg';
import app10 from 'src/assets/images/landingpage/apps/app-ecommerce-detail.jpg';
import app11 from 'src/assets/images/landingpage/apps/app-ecommerce-checkout.jpg';
import app12 from 'src/assets/images/landingpage/apps/app-ecommerce-list.jpg';
import app13 from 'src/assets/images/landingpage/apps/app-blog-detail.jpg';
import app14 from 'src/assets/images/landingpage/apps/app-kanban.jpg';
import app15 from 'src/assets/images/landingpage/apps/app-invoice.jpg';
import Page1 from 'src/assets/images/landingpage/f-pages/page-homepage.jpg';
import Page2 from 'src/assets/images/landingpage/f-pages/page-about.jpg';
import Page3 from 'src/assets/images/landingpage/f-pages/page-portfolio.jpg';
import Page4 from 'src/assets/images/landingpage/f-pages/page-pricing.jpg';
import DemoTitle from './DemoTitle';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
                  {/* <Link href={demo.link}> */}
                  {/* </Link> */}
                  {/* <Link href={demo.link}> */}
                  {/* </Link> */}

--- METRICS ---
Lines of code: 386
Component exports: 1

=== Component Analysis: DemoTitle ===
File: front-end/src/components/landingpage/demo-slider/DemoTitle.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography, AvatarGroup, Avatar, Stack } from '@mui/material';
import AnimationFadeIn from '../animation/Animation';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: Header ===
File: front-end/src/components/landingpage/header/Header.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import Logo from 'src/layouts/full/shared/logo/Logo';
import Navigations from './Navigations';
import MobileSidebar from './MobileSidebar';
import { IconMenu2 } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);
  const [y, setY] = React.useState(window.scrollY);
  React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 107
Component exports: 1

=== Component Analysis: MobileSidebar ===
File: front-end/src/components/landingpage/header/MobileSidebar.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Button, Box, Collapse, Stack } from '@mui/material';
import { IconChevronDown } from '@tabler/icons-react';
import Logo from "src/layouts/full/shared/logo/Logo"
import DemosDD from './DemosDD';
import AppLinks from 'src/layouts/full/vertical/header/AppLinks';
import QuickLinks from 'src/layouts/full/vertical/header/QuickLinks';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [toggle, setToggle] = useState(false)
    const [toggle2, setToggle2] = useState(false)

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import AppLinks from 'src/layouts/full/vertical/header/AppLinks';
import QuickLinks from 'src/layouts/full/vertical/header/QuickLinks';
                                <AppLinks />
                                <QuickLinks />

--- METRICS ---
Lines of code: 71
Component exports: 1

=== Component Analysis: Navigations ===
File: front-end/src/components/landingpage/header/Navigations.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Box, Button, Divider, Grid, styled, Paper } from '@mui/material';
import { IconChevronDown } from '@tabler/icons-react';
import AppLinks from 'src/layouts/full/vertical/header/AppLinks';
import QuickLinks from 'src/layouts/full/vertical/header/QuickLinks';
import DemosDD from './DemosDD';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [open, setOpen] = useState(false);
    const [open2, setOpen2] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import AppLinks from 'src/layouts/full/vertical/header/AppLinks';
import QuickLinks from 'src/layouts/full/vertical/header/QuickLinks';
                                <AppLinks />
                                <QuickLinks />

--- METRICS ---
Lines of code: 130
Component exports: 1

=== Component Analysis: DemosDD ===
File: front-end/src/components/landingpage/header/DemosDD.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Typography, Avatar, Stack, styled, Button } from '@mui/material';
import { NavLink } from 'react-router-dom';
import mainDemo from 'src/assets/images/landingpage/demos/demo-main.jpg';
import darkDemo from 'src/assets/images/landingpage/demos/demo-dark.jpg';
import horizontalDemo from 'src/assets/images/landingpage/demos/demo-horizontal.jpg';
import nextauthDemo from 'src/assets/images/landingpage/demos/demo-firebase.jpg';
import rtlDemo from 'src/assets/images/landingpage/demos/demo-rtl.jpg';
import minisidebarDemo from 'src/assets/images/landingpage/demos/demo-minisidebar.jpg'
import app1 from 'src/assets/images/landingpage/apps/app-calendar.jpg';
import app2 from 'src/assets/images/landingpage/apps/app-chat.jpg';
import app3 from 'src/assets/images/landingpage/apps/app-contact.jpg';
import app4 from 'src/assets/images/landingpage/apps/app-email.jpg';
import app5 from 'src/assets/images/landingpage/apps/app-note.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { NavLink } from 'react-router-dom';
              {/* <Link href={demo.link}> */}
              {/* </Link> */}
              {/* <Link href={app.link}> */}
                <NavLink to={app.link}>
                </NavLink>
                {/* </Link> */}

--- METRICS ---
Lines of code: 206
Component exports: 1

=== Component Analysis: Testimonial ===
File: front-end/src/components/landingpage/testimonial/Testimonial.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Avatar, Box, CardContent, Container, Typography, Rating, Stack } from '@mui/material';
import TestimonialTitle from './TestimonialTitle';
import BlankCard from '../../shared/BlankCard';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import AnimationFadeIn from '../animation/Animation';
import Slider from 'react-slick';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import './testimonial.css';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState<number | null>(5);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 156
Component exports: 1

=== Component Analysis: TestimonialTitle ===
File: front-end/src/components/landingpage/testimonial/TestimonialTitle.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography } from '@mui/material';
import AnimationFadeIn from '../animation/Animation';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 1

=== Component Analysis: Features ===
File: front-end/src/components/landingpage/features/Features.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import FeaturesTitle from './FeaturesTitle';
import { Typography, Grid, Container, Box } from '@mui/material';
import {
import AnimationFadeIn from '../animation/Animation';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
    subtext: 'SWR is a React hook for fetching and caching data efficiently.',

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 161
Component exports: 1

=== Component Analysis: FeaturesTitle ===
File: front-end/src/components/landingpage/features/FeaturesTitle.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: Banner ===
File: front-end/src/components/landingpage/banner/Banner.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Box, Container, useMediaQuery, styled, Stack, Theme } from '@mui/material';
import BannerContent from './BannerContent';
import bannerbgImg1 from 'src/assets/images/landingpage/bannerimg1.svg';
import bannerbgImg2 from 'src/assets/images/landingpage/bannerimg2.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 92
Component exports: 1

=== Component Analysis: BannerContent ===
File: front-end/src/components/landingpage/banner/BannerContent.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Typography, Box, Button, Stack, styled, useMediaQuery, Theme } from '@mui/material';
import { IconRocket } from '@tabler/icons-react';
import { motion } from 'framer-motion';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 99
Component exports: 1

=== Component Analysis: Animation ===
File: front-end/src/components/landingpage/animation/Animation.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { useInView } from 'react-intersection-observer';
import { motion, useAnimation } from 'framer-motion';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 35
Component exports: 1

=== Component Analysis: C2a2 ===
File: front-end/src/components/landingpage/c2a/C2a2.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography, Box, Button, styled, Container, Stack } from '@mui/material';
import c2aImg from 'src/assets/images/landingpage/background/c2a.png';
import GuaranteeCard from './GuaranteeCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 89
Component exports: 1

=== Component Analysis: C2a ===
File: front-end/src/components/landingpage/c2a/C2a.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../../shared/BlankCard';
import AnimationFadeIn from '../animation/Animation';
import bannerbgImg from 'src/assets/images/landingpage/shape/line-bg.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 97
Component exports: 1

=== Component Analysis: GuaranteeCard ===
File: front-end/src/components/landingpage/c2a/GuaranteeCard.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Typography, Box, Button, styled, CardContent, Stack } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import badgeImg from 'src/assets/images/landingpage/shape/badge.svg';
import lineImg from 'src/assets/images/landingpage/shape/line-bg-2.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 66
Component exports: 1

=== Component Analysis: FrameworksTitle ===
File: front-end/src/components/landingpage/frameworks/FrameworksTitle.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Grid, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: Frameworks ===
File: front-end/src/components/landingpage/frameworks/Frameworks.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Container, styled, Stack } from '@mui/material';
import FrameworksTitle from './FrameworksTitle';
import sliderImg from 'src/assets/images/landingpage/background/slider-group.png';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: SmartRedirect ===
File: front-end/src/components/routing/SmartRedirect.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import { CircularProgress, Box, Typography } from '@mui/material';
import { userAPI } from '../../api/user.api';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect, useState } from 'react';
  const [loading, setLoading] = useState(true);
  const [verified, setVerified] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
        // Use the new userAPI instead of direct fetch
        const authResult = await userAPI.auth.checkAuth();

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 87
Component exports: 1

=== Component Analysis: EnhancedTransferList ===
File: front-end/src/components/material-ui/transfer-list/EnhancedTransferList.tsx
Date: Wed Jul 30 12:59:55 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useTheme } from '@mui/material/styles';
import {
import { IconChevronRight, IconChevronLeft } from '@tabler/icons-react';
import CustomCheckbox from '../../forms/theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState<readonly number[]>([]);
  const [left, setLeft] = React.useState<readonly number[]>([0, 1, 2, 3]);
  const [right, setRight] = React.useState<readonly number[]>([4, 5, 6, 7]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 163
Component exports: 1

=== Component Analysis: BasicTransferList ===
File: front-end/src/components/material-ui/transfer-list/BasicTransferList.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useTheme } from '@mui/material/styles';
import { Grid, List, ListItem, ListItemIcon, ListItemText, Button, Paper, ListItemButton } from '@mui/material';
import {
import CustomCheckbox from '../../forms/theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState<readonly number[]>([]);
  const [left, setLeft] = React.useState<readonly number[]>([0, 1, 2, 3]);
  const [right, setRight] = React.useState<readonly number[]>([4, 5, 6, 7]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 150
Component exports: 1

=== Component Analysis: EnhancedTransferListCode ===
File: front-end/src/components/material-ui/transfer-list/code/EnhancedTransferListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { useTheme } from '@mui/material/styles';
import {
import { IconChevronRight, IconChevronLeft } from '@tabler/icons-react';
import CustomCheckbox from '../../forms/theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState<readonly number[]>([]);
  const [left, setLeft] = React.useState<readonly number[]>([0, 1, 2, 3]);
  const [right, setRight] = React.useState<readonly number[]>([4, 5, 6, 7]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 173
Component exports: 1

=== Component Analysis: BasicTransferListCode ===
File: front-end/src/components/material-ui/transfer-list/code/BasicTransferListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { useTheme } from '@mui/material/styles';
import { Grid, List, ListItem, ListItemIcon, ListItemText, Button, Paper, ListItemButton } from '@mui/material';
import {
import CustomCheckbox from '../../forms/theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState<readonly number[]>([]);
const [left, setLeft] = React.useState<readonly number[]>([0, 1, 2, 3]);
const [right, setRight] = React.useState<readonly number[]>([4, 5, 6, 7]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 160
Component exports: 1

=== Component Analysis: OutlinedCode ===
File: front-end/src/components/material-ui/alert/code/OutlinedCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: ActionCode ===
File: front-end/src/components/material-ui/alert/code/ActionCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: TransitionCode ===
File: front-end/src/components/material-ui/alert/code/TransitionCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import * as React from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 54
Component exports: 1

=== Component Analysis: DescriptionCode ===
File: front-end/src/components/material-ui/alert/code/DescriptionCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 38
Component exports: 1

=== Component Analysis: FilledCode ===
File: front-end/src/components/material-ui/alert/code/FilledCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: HoverPopover ===
File: front-end/src/components/material-ui/popover/HoverPopover.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Popover, Box, Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: ClickPopover ===
File: front-end/src/components/material-ui/popover/ClickPopover.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Popover, Typography, Button, Box } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [anchorEl, setAnchorEl] = React.useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 47
Component exports: 1

=== Component Analysis: ClickPopoverCode ===
File: front-end/src/components/material-ui/popover/code/ClickPopoverCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [anchorEl, setAnchorEl] = React.useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 61
Component exports: 1

=== Component Analysis: HoverPopoverCode ===
File: front-end/src/components/material-ui/popover/code/HoverPopoverCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [anchorEl, setAnchorEl] = React.useState(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 1

=== Component Analysis: TextErrorCode ===
File: front-end/src/components/material-ui/typography/code/TextErrorCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: Subtitle1Code ===
File: front-end/src/components/material-ui/typography/code/Subtitle1Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 19
Component exports: 1

=== Component Analysis: Heading5Code ===
File: front-end/src/components/material-ui/typography/code/Heading5Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: TextWarningCode ===
File: front-end/src/components/material-ui/typography/code/TextWarningCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 18
Component exports: 1

=== Component Analysis: Heading6Code ===
File: front-end/src/components/material-ui/typography/code/Heading6Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: TextInfoCode ===
File: front-end/src/components/material-ui/typography/code/TextInfoCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 18
Component exports: 1

=== Component Analysis: Heading4Code ===
File: front-end/src/components/material-ui/typography/code/Heading4Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: TextPrimaryCode ===
File: front-end/src/components/material-ui/typography/code/TextPrimaryCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: Heading1Code ===
File: front-end/src/components/material-ui/typography/code/Heading1Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: Heading2Code ===
File: front-end/src/components/material-ui/typography/code/Heading2Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: Subtitle2Code ===
File: front-end/src/components/material-ui/typography/code/Subtitle2Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 19
Component exports: 1

=== Component Analysis: TextSecondaryCode ===
File: front-end/src/components/material-ui/typography/code/TextSecondaryCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: Heading3Code ===
File: front-end/src/components/material-ui/typography/code/Heading3Code.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: TextSuccessCode ===
File: front-end/src/components/material-ui/typography/code/TextSuccessCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 18
Component exports: 1

=== Component Analysis: FolderList ===
File: front-end/src/components/material-ui/lists/FolderList.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { List, ListItem, ListItemText, ListItemAvatar, Avatar } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { IconPhoto, IconBriefcase, IconBeach } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 44
Component exports: 1

=== Component Analysis: SimpleList ===
File: front-end/src/components/material-ui/lists/SimpleList.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import BlankCard from '../../shared/BlankCard';
import {
import { IconInbox, IconMailOpened } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 56
Component exports: 1

=== Component Analysis: SwitchList ===
File: front-end/src/components/material-ui/lists/SwitchList.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { List, ListItem, ListItemIcon, ListItemText, ListSubheader } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { IconWifi, IconBluetooth } from '@tabler/icons-react';
import CustomSwitch from '../../forms/theme-elements/CustomSwitch';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState(['wifi']);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 65
Component exports: 1

=== Component Analysis: NestedList ===
File: front-end/src/components/material-ui/lists/NestedList.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import BlankCard from '../../shared/BlankCard';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 77
Component exports: 1

=== Component Analysis: ControlsList ===
File: front-end/src/components/material-ui/lists/ControlsList.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { IconMessage } from '@tabler/icons-react';
import BlankCard from '../../shared/BlankCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState([0]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 1

=== Component Analysis: SelectedList ===
File: front-end/src/components/material-ui/lists/SelectedList.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { List, ListItemText, ListItemButton, Divider, ListItemIcon } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { IconInbox, IconMailOpened } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [selectedIndex, setSelectedIndex] = React.useState(1);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: SimpleListCode ===
File: front-end/src/components/material-ui/lists/code/SimpleListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {
import { IconInbox, IconMailOpened } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: SwitchListCode ===
File: front-end/src/components/material-ui/lists/code/SwitchListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import { 
import CustomSwitch from '../../forms/theme-elements/CustomSwitch';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState(['wifi']);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 76
Component exports: 1

=== Component Analysis: ControlsListCode ===
File: front-end/src/components/material-ui/lists/code/ControlsListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {
import { IconMessage } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState([0]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 73
Component exports: 1

=== Component Analysis: NestedListCode ===
File: front-end/src/components/material-ui/lists/code/NestedListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 79
Component exports: 1

=== Component Analysis: FolderListCode ===
File: front-end/src/components/material-ui/lists/code/FolderListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import { 

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 56
Component exports: 1

=== Component Analysis: SelectedListCode ===
File: front-end/src/components/material-ui/lists/code/SelectedListCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import { 

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [selectedIndex, setSelectedIndex] = React.useState(1);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 73
Component exports: 1

=== Component Analysis: OutlinedCode ===
File: front-end/src/components/material-ui/chip/code/OutlinedCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import { IconMoodHappy } from '@tabler/icons-react';
import InlineItemCard from "@/app/components/shared/InlineItemCard";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: DisabledCode ===
File: front-end/src/components/material-ui/chip/code/DisabledCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import { IconMoodHappy } from '@tabler/icons-react';
import InlineItemCard from "@/app/components/shared/InlineItemCard";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: CustomOutlinedIcon ===
File: front-end/src/components/material-ui/chip/code/CustomOutlinedIcon.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import InlineItemCard from "@/app/components/shared/InlineItemCard";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: SizesCode ===
File: front-end/src/components/material-ui/chip/code/SizesCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import InlineItemCard from "@/app/components/shared/InlineItemCard";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: CustomIconCode ===
File: front-end/src/components/material-ui/chip/code/CustomIconCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import { 
import InlineItemCard from "@/app/components/shared/InlineItemCard";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 35
Component exports: 1

=== Component Analysis: FilledCode ===
File: front-end/src/components/material-ui/chip/code/FilledCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, Chip}  from '@mui/material';
import { IconMoodHappy } from '@tabler/icons-react';
import InlineItemCard from "@/app/components/shared/InlineItemCard";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: BasicCode ===
File: front-end/src/components/material-ui/accordion/code/BasicCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {
import { IconChevronDown } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 66
Component exports: 1

=== Component Analysis: ControlledCode ===
File: front-end/src/components/material-ui/accordion/code/ControlledCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import * as React from 'react';
import {
import { IconChevronDown } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 115
Component exports: 1

=== Component Analysis: WithBadgeCode ===
File: front-end/src/components/material-ui/avatar/code/WithBadgeCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, AvatarGroup, Stack } from '@mui/material';
import { IconMoodSmile } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 55
Component exports: 1

=== Component Analysis: VariantCode ===
File: front-end/src/components/material-ui/avatar/code/VariantCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, Stack } from '@mui/material';
import { IconMoodSmile } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: GroupedSizeCode ===
File: front-end/src/components/material-ui/avatar/code/GroupedSizeCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, AvatarGroup, Stack} from '@mui/material';
import { IconMoodSmile } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: LetterAvatarsCode ===
File: front-end/src/components/material-ui/avatar/code/LetterAvatarsCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: ImageAvatarsCode ===
File: front-end/src/components/material-ui/avatar/code/ImageAvatarsCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import  React from 'react';
import { Avatar, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 21
Component exports: 1

=== Component Analysis: SizesCode ===
File: front-end/src/components/material-ui/avatar/code/SizesCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, Stack } from '@mui/material';
import { IconMoodSmile } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: GroupedCode ===
File: front-end/src/components/material-ui/avatar/code/GroupedCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, AvatarGroup, Stack } from '@mui/material';
import { IconMoodSmile } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: IconAvatarsCode ===
File: front-end/src/components/material-ui/avatar/code/IconAvatarsCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Avatar, Stack } from '@mui/material';
import { IconMoodSmile } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: IconBottomCode ===
File: front-end/src/components/material-ui/tabs/code/IconBottomCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: TextCode ===
File: front-end/src/components/material-ui/tabs/code/TextCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 1

=== Component Analysis: IconWithLabelCode ===
File: front-end/src/components/material-ui/tabs/code/IconWithLabelCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: VerticalCode ===
File: front-end/src/components/material-ui/tabs/code/VerticalCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: ScrollableCode ===
File: front-end/src/components/material-ui/tabs/code/ScrollableCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: IconLeftCode ===
File: front-end/src/components/material-ui/tabs/code/IconLeftCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: IconRightCode ===
File: front-end/src/components/material-ui/tabs/code/IconRightCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: IconCode ===
File: front-end/src/components/material-ui/tabs/code/IconCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {Box, Divider } from '@mui/material';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import { IconHeart, IconPhone, IconUser } from "@tabler/icons-react";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 50
Component exports: 1

=== Component Analysis: MaxWidthDialog ===
File: front-end/src/components/material-ui/dialog/MaxWidthDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import CustomSelect from '../../forms/theme-elements/CustomSelect';
import CustomSwitch from '../../forms/theme-elements/CustomSwitch';
import { DialogProps } from '@mui/material/Dialog';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);
  const [fullWidth, setFullWidth] = React.useState(true);
  const [maxWidth, setMaxWidth] = React.useState<DialogProps['maxWidth']>('sm');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 101
Component exports: 1

=== Component Analysis: TransitionDialog ===
File: front-end/src/components/material-ui/dialog/TransitionDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import Slide from '@mui/material/Slide';
import { TransitionProps } from '@mui/material/transitions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 65
Component exports: 1

=== Component Analysis: AlertDialog ===
File: front-end/src/components/material-ui/dialog/AlertDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: SimpleDialog ===
File: front-end/src/components/material-ui/dialog/SimpleDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { IconUser, IconPlus } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);
  const [selectedValue, setSelectedValue] = React.useState(emails[1]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 71
Component exports: 1

=== Component Analysis: FullscreenDialog ===
File: front-end/src/components/material-ui/dialog/FullscreenDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import Slide from '@mui/material/Slide';
import { IconX } from '@tabler/icons-react';
import { TransitionProps } from '@mui/material/transitions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 74
Component exports: 1

=== Component Analysis: ResponsiveDialog ===
File: front-end/src/components/material-ui/dialog/ResponsiveDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import useMediaQuery from '@mui/material/useMediaQuery';
import { useTheme } from '@mui/material/styles';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: ScrollContentDialog ===
File: front-end/src/components/material-ui/dialog/ScrollContentDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);
  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');
  React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 83
Component exports: 1

=== Component Analysis: FormDialog ===
File: front-end/src/components/material-ui/dialog/FormDialog.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Box } from '@mui/material';
import CustomTextField from "../../forms/theme-elements/CustomTextField";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 1

=== Component Analysis: FormCode ===
File: front-end/src/components/material-ui/dialog/code/FormCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 
import CustomTextField from "../../forms/theme-elements/CustomTextField";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 67
Component exports: 1

=== Component Analysis: ScrollingContentCode ===
File: front-end/src/components/material-ui/dialog/code/ScrollingContentCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);
const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');
React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 89
Component exports: 1

=== Component Analysis: ResponsiveFullscreenCode ===
File: front-end/src/components/material-ui/dialog/code/ResponsiveFullscreenCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import {
import useMediaQuery from '@mui/material/useMediaQuery';
import { useTheme } from '@mui/material/styles';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 65
Component exports: 1

=== Component Analysis: TransitionCode ===
File: front-end/src/components/material-ui/dialog/code/TransitionCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {
import Slide from '@mui/material/Slide';
import { TransitionProps } from '@mui/material/transitions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 73
Component exports: 1

=== Component Analysis: AlertCode ===
File: front-end/src/components/material-ui/dialog/code/AlertCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { 

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 63
Component exports: 1

=== Component Analysis: SimpleCode ===
File: front-end/src/components/material-ui/dialog/code/SimpleCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import {
import { IconUser, IconPlus } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);
const [selectedValue, setSelectedValue] = React.useState(emails[1]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 76
Component exports: 1

=== Component Analysis: FullScreenCode ===
File: front-end/src/components/material-ui/dialog/code/FullScreenCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import {
import Slide from '@mui/material/Slide';
import { IconX } from '@tabler/icons-react';
import { TransitionProps } from '@mui/material/transitions';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 81
Component exports: 1

=== Component Analysis: MaxWidthCode ===
File: front-end/src/components/material-ui/dialog/code/MaxWidthCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import {
import CustomSelect from '../../forms/theme-elements/CustomSelect';
import CustomSwitch from '../../forms/theme-elements/CustomSwitch';
import { DialogProps } from '@mui/material/Dialog';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [open, setOpen] = React.useState(false);
const [fullWidth, setFullWidth] = React.useState(true);
const [maxWidth, setMaxWidth] = React.useState<DialogProps['maxWidth']>('sm');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 108
Component exports: 1

=== Component Analysis: SimpleTooltipCode ===
File: front-end/src/components/material-ui/tooltip/code/SimpleTooltipCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { styled } from '@mui/material/styles';
import { IconButton, Button, Stack, Fab, Box } from '@mui/material';
import Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';
import { IconPlus, IconTrash } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 42
Component exports: 1

=== Component Analysis: TransitionsCode ===
File: front-end/src/components/material-ui/tooltip/code/TransitionsCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { styled } from '@mui/material/styles';
import { IconButton, Button, Stack, Fab, Box } from '@mui/material';
import Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';
import Fade from '@mui/material/Fade';
import Zoom from '@mui/material/Zoom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 35
Component exports: 1

=== Component Analysis: PositionsTooltipCode ===
File: front-end/src/components/material-ui/tooltip/code/PositionsTooltipCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { styled } from '@mui/material/styles';
import { Button } from '@mui/material';
import Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';
import InlineItemCard from "@/app/components/shared/InlineItemCard";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 1

=== Component Analysis: ArrowTooltipCode ===
File: front-end/src/components/material-ui/tooltip/code/ArrowTooltipCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { styled } from '@mui/material/styles';
import { IconButton, Button, Stack, Fab, Box } from '@mui/material';
import Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';
import { IconPlus } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: VariableWidthCode ===
File: front-end/src/components/material-ui/tooltip/code/VariableWidthCode.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { styled } from '@mui/material/styles';
import { IconButton, Button, Stack, Fab, Box } from '@mui/material';
import Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';
import { IconPlus, IconTrash } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 53
Component exports: 1

=== Component Analysis: AuthenticationComponent ===
File: front-end/src/components/AuthenticationComponent.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useChurchRecords } from '../context/ChurchRecordsProvider';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 216
Component exports: 1

=== Component Analysis: ColorPaletteSelector ===
File: front-end/src/components/ColorPaletteSelector.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { Palette, Colorize, History } from '@mui/icons-material';
import { liturgicalThemes } from '../store/useTableStyleStore';

--- PROPS/INTERFACES ---
interface ColorPaletteProps {
  selectedColor: string;
  onColorChange: (color: string) => void;
  liturgicalMode: boolean;
}

// Orthodox Color Palettes
const orthodoxTraditionalColors = [
  '#2c5aa0', // Orthodox blue
  '#1976d2', // Light blue
  '#0d47a1', // Dark blue

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [customColor, setCustomColor] = useState(selectedColor);
  const [paletteMode, setPaletteMode] = useState<'orthodox' | 'liturgical' | 'themes'>('orthodox');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 278
Component exports: 1

=== Component Analysis: Scrollbar ===
File: front-end/src/components/custom-scroll/Scrollbar.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import SimpleBar from 'simplebar-react';
import 'simplebar/dist/simplebar.min.css';
import { Box, styled, SxProps } from '@mui/material';

--- PROPS/INTERFACES ---
interface PropsType {
  children: React.ReactElement | React.ReactNode;
  sx: SxProps;
}

const Scrollbar = (props: PropsType) => {
  const { children, sx, ...other } = props;
  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
    navigator.userAgent,
  );


--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: FieldRenderer ===
File: front-end/src/components/FieldRenderer/FieldRenderer.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import {
import {
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';
import { RecordField, FieldType } from '../../types/church-records-advanced.types';
import ColorPickerPopover from '../ColorPickerPopover';

--- PROPS/INTERFACES ---
interface FieldRendererProps {
  field: RecordField;
  value: any;
  color?: string;
  error?: string;
  readonly?: boolean;
  onValueChange: (value: any) => void;
  onColorChange: (color: string) => void;
}

/**

--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
  const [colorPickerAnchor, setColorPickerAnchor] = useState<HTMLElement | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 323
Component exports: 1

=== Component Analysis: RecordGenerator ===
File: front-end/src/components/RecordGenerator.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
  const [state, setState] = useState<GeneratorState>({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 361
Component exports: 1

=== Component Analysis: OcrScanPreview ===
File: front-end/src/components/OcrScanPreview.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import {
import {

--- PROPS/INTERFACES ---
interface OcrScanPreviewProps {
    imageSrc: string;
    ocrData: OcrField[];
    confidenceScore: number;
    onFieldEdit?: (fieldId: string, newValue: string) => void;
    onScanComplete?: () => void;
    title?: string;
}

const OcrScanPreview: React.FC<OcrScanPreviewProps> = ({
    imageSrc,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [scanProgress, setScanProgress] = useState(0);
    const [currentLine, setCurrentLine] = useState(0);
    const [revealedFields, setRevealedFields] = useState<string[]>([]);
    const [animatedScore, setAnimatedScore] = useState(0);
    const [editingField, setEditingField] = useState<string | null>(null);
    const [editValue, setEditValue] = useState('');
    const [scanComplete, setScanComplete] = useState(false);
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 478
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/sticky/page.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, EnTableType } from 'src/components/tables/tableData';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data, _setData] = React.useState<any>(() => [...basics]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 208
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/dense/page.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { IconCircle, IconClock } from '@tabler/icons-react';
import {
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-5.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data] = React.useState<EnTableType[]>(rows);
    const [density, setDensity] = React.useState<'sm' | 'md' | 'lg'>('md');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 289
Component exports: 2

=== Component Analysis: page ===
File: front-end/src/components/react-tables/editable/page.tsx
Date: Wed Jul 30 12:59:56 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import EditIcon from '@mui/icons-material/Edit';
import CheckIcon from '@mui/icons-material/Check';
import CloseIcon from '@mui/icons-material/Close';
import {
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import img5 from 'src/assets/images/profile/user-5.jpg';
import img6 from 'src/assets/images/profile/user-6.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data, _setData] = React.useState(() => [...basicsTableData]);
    const [editRowId, setEditRowId] = React.useState<any>(null);
    const [editedData, setEditedData] = React.useState<any>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 371
Component exports: 3

=== Component Analysis: page ===
File: front-end/src/components/react-tables/filter/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, BasicsTableDataType } from './FilterTableData';
import {
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import {

--- PROPS/INTERFACES ---
interface DebouncedInputProps extends Omit<TextFieldProps, 'onChange' | 'value'> {
  value: string;
  onChange: (value: string) => void;
  debounce?: number;
}

const DebouncedInput: React.FC<DebouncedInputProps> = ({
  value: initialValue,
  onChange,
  debounce = 500,
  ...props

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState<string>(initialValue);
  React.useEffect(() => {
  React.useEffect(() => {
  const [data, _setData] = React.useState(() => [...basics]);
  const [columnFilters, setColumnFilters] = React.useState<any>([]);
  const rerender = React.useReducer(() => ({}), {})[1];

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 386
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/row-selection/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, EnTableType } from 'src/components/tables/tableData';
import {
import CustomCheckbox from 'src/components/forms/theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
interface IndeterminateCheckboxProps extends Omit<CheckboxProps, 'ref'> {
  indeterminate?: boolean;
}

const IndeterminateCheckbox: React.FC<IndeterminateCheckboxProps> = ({
  indeterminate,
  className = '',
  ...rest
}) => {
  const ref = React.useRef<HTMLButtonElement>(null);


--- STATE MANAGEMENT ---
  React.useEffect(() => {
  const [data, _setData] = React.useState<any>(() => [...basics]);
  const [rowSelection, setRowSelection] = React.useState({});

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 269
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/sorting/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, BasicsTableDataType } from '../filter/FilterTableData';
import {
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [data, _setData] = React.useState(() => [...basics]);
  const [columnFilters, setColumnFilters] = React.useState<any>([]);
  const rerender = React.useReducer(() => ({}), {})[1];

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 318
Component exports: 1

=== Component Analysis: Columndragdrop ===
File: front-end/src/components/react-tables/drag-drop/Columndragdrop.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import {
import { SortableContext, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, EnTableType } from 'src/components/tables/tableData';
import { CSS } from '@dnd-kit/utilities';
import {
import { IconGripHorizontal } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [data, _setData] = React.useState<any>(() => [...basics]);
  const [columnOrder, setColumnOrder] = React.useState<any>(columns.map((c) => c.id));

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 300
Component exports: 1

=== Component Analysis: Rowdragdrop ===
File: front-end/src/components/react-tables/drag-drop/Rowdragdrop.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, EnTableType } from 'src/components/tables/tableData';
import {
import {
import { CSS } from '@dnd-kit/utilities';
import {
import { IconGripVertical } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [data, _setData] = React.useState<any>(() => [...basics]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 260
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/drag-drop/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import Rowdragdrop from './Rowdragdrop';
import Columndragdrop from './Columndragdrop';
import { Grid } from '@mui/material';
import PageContainer from 'src/components/container/PageContainer';
import Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/pagination/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, PaginationDataType } from './PaginationData';
import {
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import CustomSelect from 'src/components/forms/theme-elements/CustomSelect';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [data, _setData] = React.useState(() => [...basics]);
  const [columnFilters, setColumnFilters] = React.useState<any>([]);
  const rerender = React.useReducer(() => ({}), {})[1];

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 310
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/empty/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField';
import DownloadCard from 'src/components/shared/DownloadCard';
import {
import { TableType } from 'src/components/tables/tableData';
import EmptyImage from 'src/assets/images/svgs/no-data.webp';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data, _setData] = React.useState(() => []);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 180
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/column-visiblity/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, EnTableType } from 'src/components/tables/tableData';
import {
import CustomCheckbox from 'src/components/forms/theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data, _setData] = React.useState<any>(() => [...basics]);
    const [columns] = React.useState(() => [
    const [columnVisibility, setColumnVisibility] = React.useState({})

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 244
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/expanding/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, EnTableType } from 'src/components/tables/tableData';
import {
import KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';
import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [data, _setData] = React.useState<any>(() => [...basics]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 301
Component exports: 1

=== Component Analysis: page ===
File: front-end/src/components/react-tables/basic/page.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import {
import { Stack } from '@mui/system';
import DownloadCard from 'src/components/shared/DownloadCard';
import { basicsTableData, EnTableType } from 'src/components/tables/tableData';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [data, _setData] = React.useState<any>(() => [...basics]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 203
Component exports: 1

=== Component Analysis: PageContainer ===
File: front-end/src/components/container/PageContainer.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Helmet } from 'react-helmet';

--- PROPS/INTERFACES ---
type Props = {
  description?: string;
  children: any | any[]
  title?: string;
};

const PageContainer = ({ title, description, children }: Props) => (
  <div>
    <Helmet>
      <title>{title}</title>
      <meta name="description" content={description} />

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 23
Component exports: 1

=== Component Analysis: HeadlineSourcePicker ===
File: front-end/src/components/headlines/HeadlineSourcePicker.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [sources, setSources] = useState<NewsSource[]>([]);
  const [categories, setCategories] = useState<Category[]>([]);
  const [config, setConfig] = useState<ScrapingConfig>({
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [testing, setTesting] = useState<string | null>(null);
  const [message, setMessage] = useState<{ type: 'success' | 'error', text: string } | null>(null);
  const [addSourceDialog, setAddSourceDialog] = useState(false);
  const [newSource, setNewSource] = useState<Partial<NewsSource>>({
  useEffect(() => {

--- API INTEGRATION ---
  last_fetch?: string;
      const sourcesResponse = await fetch('/api/headlines/sources/manage');
      const categoriesResponse = await fetch('/api/headlines/categories');
      const configResponse = await fetch('/api/headlines/config');
      const response = await fetch(`/api/headlines/sources/${sourceId}/test`, {
      const response = await fetch('/api/headlines/sources', {
      const sourcesResponse = await fetch('/api/headlines/sources/bulk-update', {
      const categoriesResponse = await fetch('/api/headlines/categories/bulk-update', {
      const configResponse = await fetch('/api/headlines/config', {
                                Last fetch: {source.last_fetch ? new Date(source.last_fetch).toLocaleDateString() : 'Never'}

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 615
Component exports: 1

=== Component Analysis: FilterErrorBoundary ===
File: front-end/src/components/ErrorBoundary/FilterErrorBoundary.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { Component, ReactNode } from 'react';
import { Box, Typography, Button, Alert } from '@mui/material';
import { IconRefresh } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
interface Props {
  children: ReactNode;
  fallback?: ReactNode;
}

interface State {
  hasError: boolean;
  error?: Error;
  errorInfo?: string;
}


--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 107
Component exports: 1

=== Component Analysis: AdminErrorBoundary ===
File: front-end/src/components/ErrorBoundary/AdminErrorBoundary.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { Component, ErrorInfo, ReactNode } from 'react';
import {
import {
import { useNavigate } from 'react-router-dom';

--- PROPS/INTERFACES ---
interface Props {
    children: ReactNode;
    adminSection?: string;
    onError?: (error: Error, errorInfo: ErrorInfo) => void;
}

interface State {
    hasError: boolean;
    error: Error | null;
    errorInfo: ErrorInfo | null;
    errorId: string;

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
            await fetch('/api/logs/admin-errors', {
                await fetch('/api/logs/client-errors', {

--- ROUTING ---
import { useNavigate } from 'react-router-dom';

--- METRICS ---
Lines of code: 357
Component exports: 1

=== Component Analysis: ErrorBoundary ===
File: front-end/src/components/ErrorBoundary/ErrorBoundary.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { Component, ErrorInfo, ReactNode } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface Props {
    children: ReactNode;
    fallbackComponent?: ReactNode;
    onError?: (error: Error, errorInfo: ErrorInfo) => void;
}

interface State {
    hasError: boolean;
    error: Error | null;
    errorInfo: ErrorInfo | null;
    errorId: string;

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
            fetch('/api/logs/client-errors', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 322
Component exports: 1

=== Component Analysis: KanbanTaskCard ===
File: front-end/src/components/KanbanTaskCard.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { Draggable } from '@hello-pangea/dnd';
import { format, isAfter, isBefore, addDays } from 'date-fns';
import KanbanTaskModal from './KanbanTaskModal';

--- PROPS/INTERFACES ---
interface KanbanTaskCardProps {
  task: Task;
  index: number;
  onRefresh: () => void;
  boardLabels: Label[];
}

const priorityColors = {
  low: '#28a745',
  medium: '#ffc107',
  high: '#fd7e14',

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  const [taskModalOpen, setTaskModalOpen] = useState(false);

--- API INTEGRATION ---
      const response = await fetch(`/api/kanban/tasks/${task.id}`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 351
Component exports: 1

=== Component Analysis: KanbanTaskModal.clean ===
File: front-end/src/components/KanbanTaskModal.clean.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: UploadStatus ===
File: front-end/src/components/OCRUploader/UploadStatus.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { OCRFile } from '../../context/OCRContext';

--- PROPS/INTERFACES ---
interface UploadStatusProps {
    files: OCRFile[];
    showDetails?: boolean;
    onDownload?: (fileId: string, format: 'pdf' | 'xlsx') => void;
    onPreview?: (fileId: string) => void;
}

const UploadStatus: React.FC<UploadStatusProps> = ({
    files,
    showDetails = true,
    onDownload,

--- STATE MANAGEMENT ---
    const [expanded, setExpanded] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 336
Component exports: 1

=== Component Analysis: OCRUploader ===
File: front-end/src/components/OCRUploader/OCRUploader.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import {
import {
import { useDropzone } from 'react-dropzone';
import { useOCR } from '../../context/OCRContext';
import BarcodeScannerModal from './BarcodeScannerModal';
import DisclaimerModal from './DisclaimerModal';
import UploadStatus from './UploadStatus';

--- PROPS/INTERFACES ---
interface OCRUploaderProps {
    onUploadComplete?: (results: any[]) => void;
    maxFiles?: number;
    maxFileSize?: number;
    defaultLanguage?: string;
    showLanguageSelector?: boolean;
    allowMultipleFiles?: boolean;
    showPreview?: boolean;
    className?: string;
}


--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
    const [showBarcodeModal, setShowBarcodeModal] = useState(false);
    const [showDisclaimerModal, setShowDisclaimerModal] = useState(false);
    const [selectedLanguage, setSelectedLanguage] = useState(defaultLanguage);
    const [processingTier, setProcessingTier] = useState<'standard' | 'express'>('standard');
    const [email, setEmail] = useState('');
    const [sendEmail, setSendEmail] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 495
Component exports: 1

=== Component Analysis: BarcodeScannerModal ===
File: front-end/src/components/OCRUploader/BarcodeScannerModal.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { QRCodeSVG } from 'qrcode.react';
import { useOCR, OCRSession } from '../../context/OCRContext';

--- PROPS/INTERFACES ---
interface BarcodeScannerModalProps {
    open: boolean;
    onClose: () => void;
    onComplete: () => void;
    session: OCRSession | null;
}

const BarcodeScannerModal: React.FC<BarcodeScannerModalProps> = ({
    open,
    onClose,
    onComplete,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [isVerifying, setIsVerifying] = useState(false);
    const [remainingTime, setRemainingTime] = useState(0);
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 229
Component exports: 1

=== Component Analysis: DisclaimerModal ===
File: front-end/src/components/OCRUploader/DisclaimerModal.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useOCR } from '../../context/OCRContext';

--- PROPS/INTERFACES ---
interface DisclaimerModalProps {
    open: boolean;
    onClose: () => void;
    onAccept: () => void;
    language: string;
    email: string;
    processingTier: string;
}

const DisclaimerModal: React.FC<DisclaimerModalProps> = ({
    open,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [selectedLanguage, setSelectedLanguage] = useState(initialLanguage);
    const [email, setEmail] = useState(initialEmail);
    const [sendEmail, setSendEmail] = useState(false);
    const [processingTier, setProcessingTier] = useState(initialProcessingTier);
    const [acceptedTerms, setAcceptedTerms] = useState(false);
    const [acceptedPrivacy, setAcceptedPrivacy] = useState(false);
    const [acceptedProcessing, setAcceptedProcessing] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 316
Component exports: 3

=== Component Analysis: TextButtonGroup ===
File: front-end/src/components/forms/form-elements/button/TextButtonGroup.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, ButtonGroup, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: DefaultButtons ===
File: front-end/src/components/forms/form-elements/button/DefaultButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
      Link

--- METRICS ---
Lines of code: 19
Component exports: 1

=== Component Analysis: OutlinedIconButtons ===
File: front-end/src/components/forms/form-elements/button/OutlinedIconButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';
import { IconTrash, IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 23
Component exports: 1

=== Component Analysis: TextSizeButton ===
File: front-end/src/components/forms/form-elements/button/TextSizeButton.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 12
Component exports: 1

=== Component Analysis: OutlinedColorButtons ===
File: front-end/src/components/forms/form-elements/button/OutlinedColorButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: ColorButtonGroup ===
File: front-end/src/components/forms/form-elements/button/ColorButtonGroup.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, ButtonGroup, Stack } from '@mui/material';
import { IconAlignCenter, IconAlignLeft, IconAlignRight, IconPlayerPlay, IconPlayerSkipBack, IconPlayerSkipForward } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 164
Component exports: 1

=== Component Analysis: TextColorButtons ===
File: front-end/src/components/forms/form-elements/button/TextColorButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 14
Component exports: 1

=== Component Analysis: SizeButton ===
File: front-end/src/components/forms/form-elements/button/SizeButton.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: TextDefaultButtons ===
File: front-end/src/components/forms/form-elements/button/TextDefaultButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
      Link

--- METRICS ---
Lines of code: 15
Component exports: 1

=== Component Analysis: FabColorButtons ===
File: front-end/src/components/forms/form-elements/button/FabColorButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Fab, Tooltip, Stack } from '@mui/material';
import { IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: DefaultButtonGroup ===
File: front-end/src/components/forms/form-elements/button/DefaultButtonGroup.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, ButtonGroup, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: IconLoadingButtons ===
File: front-end/src/components/forms/form-elements/button/IconLoadingButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Stack } from '@mui/material';
import { IconTrash } from '@tabler/icons-react';
import LoadingButton from '@mui/lab/LoadingButton';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: TextIconButtons ===
File: front-end/src/components/forms/form-elements/button/TextIconButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';
import { IconTrash, IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: OutlinedSizeButton ===
File: front-end/src/components/forms/form-elements/button/OutlinedSizeButton.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: SizeButtonGroup ===
File: front-end/src/components/forms/form-elements/button/SizeButtonGroup.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, ButtonGroup, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: FabSizeButtons ===
File: front-end/src/components/forms/form-elements/button/FabSizeButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Fab, Tooltip, Stack } from '@mui/material';
import { IconBell } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 27
Component exports: 1

=== Component Analysis: IconColorButtons ===
File: front-end/src/components/forms/form-elements/button/IconColorButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { IconButton, Tooltip, Stack } from '@mui/material';
import { IconBell } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 35
Component exports: 1

=== Component Analysis: FabDefaultButton ===
File: front-end/src/components/forms/form-elements/button/FabDefaultButton.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Fab, Tooltip, Stack } from '@mui/material';
import { IconClipboard, IconPlus, IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 23
Component exports: 1

=== Component Analysis: VerticalButtonGroup ===
File: front-end/src/components/forms/form-elements/button/VerticalButtonGroup.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, ButtonGroup, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 30
Component exports: 1

=== Component Analysis: ColorButtons ===
File: front-end/src/components/forms/form-elements/button/ColorButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: IconSizeButtons ===
File: front-end/src/components/forms/form-elements/button/IconSizeButtons.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { IconButton, Tooltip, Stack } from '@mui/material';
import { IconBell } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: ColorButtonGroupCode ===
File: front-end/src/components/forms/form-elements/button/code/ColorButtonGroupCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, ButtonGroup, Stack } from '@mui/material';
import { IconAlignCenter, IconAlignLeft, IconAlignRight, IconPlayerPlay, IconPlayerSkipBack, IconPlayerSkipForward } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 163
Component exports: 1

=== Component Analysis: OutlinedIconCode ===
File: front-end/src/components/forms/form-elements/button/code/OutlinedIconCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';
import { IconTrash, IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: LoadingButtonsCode ===
File: front-end/src/components/forms/form-elements/button/code/LoadingButtonsCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Stack } from '@mui/material';
import { IconTrash } from '@tabler/icons-react';
import LoadingButton from '@mui/lab/LoadingButton';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: DefaultCode ===
File: front-end/src/components/forms/form-elements/button/code/DefaultCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
      Link

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: TextCode ===
File: front-end/src/components/forms/form-elements/button/code/TextCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
      Link

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: OutlineSizeCode ===
File: front-end/src/components/forms/form-elements/button/code/OutlineSizeCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 27
Component exports: 1

=== Component Analysis: TextButtonGroupCode ===
File: front-end/src/components/forms/form-elements/button/code/TextButtonGroupCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, ButtonGroup, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: OutlinedCode ===
File: front-end/src/components/forms/form-elements/button/code/OutlinedCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: FABSizeCode ===
File: front-end/src/components/forms/form-elements/button/code/FABSizeCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Fab, Tooltip, Stack } from '@mui/material';
import { IconBell } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: DefaultButtonGroupCode ===
File: front-end/src/components/forms/form-elements/button/code/DefaultButtonGroupCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, ButtonGroup, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: FABCode ===
File: front-end/src/components/forms/form-elements/button/code/FABCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Fab, Tooltip, Stack } from '@mui/material';
import { IconClipboard, IconPlus, IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: SizeButtonGroupCode ===
File: front-end/src/components/forms/form-elements/button/code/SizeButtonGroupCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, ButtonGroup, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: TextColorCode ===
File: front-end/src/components/forms/form-elements/button/code/TextColorCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 23
Component exports: 1

=== Component Analysis: IconSizesCode ===
File: front-end/src/components/forms/form-elements/button/code/IconSizesCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { IconButton, Tooltip, Stack } from '@mui/material';
import { IconBell } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: IconColorCode ===
File: front-end/src/components/forms/form-elements/button/code/IconColorCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { IconButton, Tooltip, Stack } from '@mui/material';
import { IconBell } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 44
Component exports: 1

=== Component Analysis: VerticalButtonGroupCode ===
File: front-end/src/components/forms/form-elements/button/code/VerticalButtonGroupCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: SizesCode ===
File: front-end/src/components/forms/form-elements/button/code/SizesCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 27
Component exports: 1

=== Component Analysis: ColorsCode ===
File: front-end/src/components/forms/form-elements/button/code/ColorsCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: TextSizesCode ===
File: front-end/src/components/forms/form-elements/button/code/TextSizesCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 21
Component exports: 1

=== Component Analysis: TextIconColor ===
File: front-end/src/components/forms/form-elements/button/code/TextIconColor.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Button, Stack } from '@mui/material';
import { IconTrash, IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 25
Component exports: 1

=== Component Analysis: FABColorCode ===
File: front-end/src/components/forms/form-elements/button/code/FABColorCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Fab, Tooltip, Stack } from '@mui/material';
import { IconSend } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 44
Component exports: 1

=== Component Analysis: VolumeSlider ===
File: front-end/src/components/forms/form-elements/slider/VolumeSlider.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React from "react";
import { Slider } from "@mui/material";
import ChildCard from 'src/components/shared/ChildCard'
import { IconVolume, IconVolume2 } from "@tabler/icons-react";
import { Stack } from "@mui/system";
import VolumesliderCode from "src/components/forms/form-elements/slider/code/VolumesliderCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState(30);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: RangeSlider ===
File: front-end/src/components/forms/form-elements/slider/RangeSlider.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React from 'react'
import { Slider } from '@mui/material'
import ChildCard from 'src/components/shared/ChildCard'
import TemperatureRangeCode from 'src/components/forms/form-elements/slider/code/TemperatureRangeCode'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value2, setValue2] = React.useState([20, 37])

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: RangeDefault ===
File: front-end/src/components/forms/form-elements/slider/RangeDefault.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box'
import { SliderValueLabelProps } from '@mui/material/Slider'
import { SliderThumb } from '@mui/material/Slider'
import ChildCard from 'src/components/shared/ChildCard'
import CustomRangeSlider from 'src/components/forms/theme-elements/CustomRangeSlider'
import RangesliderCode from './code/RangesliderCode'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: DiscreteSlider ===
File: front-end/src/components/forms/form-elements/slider/DiscreteSlider.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Slider } from "@mui/material";
import ChildCard from 'src/components/shared/ChildCard'
import DiscreteSliderCode from "src/components/forms/form-elements/slider/code/DiscreteSliderCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: RangesliderCode ===
File: front-end/src/components/forms/form-elements/slider/code/RangesliderCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import Box from '@mui/material/Box';
import { styled } from '@mui/material/styles';
import { SliderValueLabelProps } from '@mui/material/Slider';
import {SliderThumb} from '@mui/material/Slider';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 77
Component exports: 1

=== Component Analysis: CustomSliderCode ===
File: front-end/src/components/forms/form-elements/slider/code/CustomSliderCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { styled } from '@mui/material/styles';
import { Slider } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 38
Component exports: 1

=== Component Analysis: DiscreteSliderCode ===
File: front-end/src/components/forms/form-elements/slider/code/DiscreteSliderCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Slider } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 29
Component exports: 1

=== Component Analysis: VolumesliderCode ===
File: front-end/src/components/forms/form-elements/slider/code/VolumesliderCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from "react";
import { Slider } from '@mui/material';
import { IconVolume, IconVolume2 } from '@tabler/icons-react';
import { Stack } from "@mui/system";
import { styled } from '@mui/material/styles';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState(30);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: DisabledSliderCode ===
File: front-end/src/components/forms/form-elements/slider/code/DisabledSliderCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { Slider } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 17
Component exports: 1

=== Component Analysis: TemperatureRangeCode ===
File: front-end/src/components/forms/form-elements/slider/code/TemperatureRangeCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Slider } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value2, setValue2] = React.useState([20, 37]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: DefaultsliderCode ===
File: front-end/src/components/forms/form-elements/slider/code/DefaultsliderCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { Slider } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 19
Component exports: 1

=== Component Analysis: Position ===
File: front-end/src/components/forms/form-elements/switch/Position.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Box, Switch, FormGroup, FormControlLabel } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: Custom ===
File: front-end/src/components/forms/form-elements/switch/Custom.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Box } from '@mui/material';
import CustomSwitch from '../../theme-elements/CustomSwitch';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 15
Component exports: 1

=== Component Analysis: Default ===
File: front-end/src/components/forms/form-elements/switch/Default.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Box, Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 12
Component exports: 1

=== Component Analysis: Sizes ===
File: front-end/src/components/forms/form-elements/switch/Sizes.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Box, Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 11
Component exports: 1

=== Component Analysis: Colors ===
File: front-end/src/components/forms/form-elements/switch/Colors.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Box, Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 14
Component exports: 1

=== Component Analysis: PositionSwitchCode ===
File: front-end/src/components/forms/form-elements/switch/code/PositionSwitchCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, Switch, FormGroup, FormControlLabel } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 46
Component exports: 1

=== Component Analysis: ColorsSwitchCode ===
File: front-end/src/components/forms/form-elements/switch/code/ColorsSwitchCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 26
Component exports: 1

=== Component Analysis: DefaultSwitchCode ===
File: front-end/src/components/forms/form-elements/switch/code/DefaultSwitchCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: DefaultLabelSwitchCode ===
File: front-end/src/components/forms/form-elements/switch/code/DefaultLabelSwitchCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, Switch, FormGroup, FormControlLabel } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: SizesSwitchCode ===
File: front-end/src/components/forms/form-elements/switch/code/SizesSwitchCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 22
Component exports: 1

=== Component Analysis: CustomSwitchCode ===
File: front-end/src/components/forms/form-elements/switch/code/CustomSwitchCode.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { styled } from '@mui/material/styles';
import { Switch } from '@mui/material';
import { Box } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 59
Component exports: 1

=== Component Analysis: DefaultLabel ===
File: front-end/src/components/forms/form-elements/switch/DefaultLabel.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Box, Switch, FormGroup, FormControlLabel } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 12
Component exports: 1

=== Component Analysis: Position ===
File: front-end/src/components/forms/form-elements/checkbox/Position.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { FormGroup, FormControlLabel, FormControl } from '@mui/material';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: Custom ===
File: front-end/src/components/forms/form-elements/checkbox/Custom.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box } from '@mui/material';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 38
Component exports: 1

=== Component Analysis: Default ===
File: front-end/src/components/forms/form-elements/checkbox/Default.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box } from '@mui/material';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: DefaultColors ===
File: front-end/src/components/forms/form-elements/checkbox/DefaultColors.tsx
Date: Wed Jul 30 12:59:57 AM EDT 2025

--- IMPORTS ---
import { Box, Checkbox } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 47
Component exports: 1

=== Component Analysis: Sizes ===
File: front-end/src/components/forms/form-elements/checkbox/Sizes.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';
import CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';
import CheckBoxIcon from '@mui/icons-material/CheckBox';
import Favorite from '@mui/icons-material/Favorite';
import FavoriteBorder from '@mui/icons-material/FavoriteBorder';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 50
Component exports: 1

=== Component Analysis: Colors ===
File: front-end/src/components/forms/form-elements/checkbox/Colors.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, FormControlLabel } from '@mui/material';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 52
Component exports: 1

=== Component Analysis: DefaultCheckboxCode ===
File: front-end/src/components/forms/form-elements/checkbox/code/DefaultCheckboxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Box } from '@mui/material';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';
import { styled } from '@mui/material/styles';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 109
Component exports: 1

=== Component Analysis: SizesCheckboxCode ===
File: front-end/src/components/forms/form-elements/checkbox/code/SizesCheckboxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';
import CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';
import CheckBoxIcon from '@mui/icons-material/CheckBox';
import Favorite from '@mui/icons-material/Favorite';
import FavoriteBorder from '@mui/icons-material/FavoriteBorder';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 58
Component exports: 1

=== Component Analysis: CustomEleCheckboxCode ===
File: front-end/src/components/forms/form-elements/checkbox/code/CustomEleCheckboxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Box } from '@mui/material';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';
import { styled } from '@mui/material/styles';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 107
Component exports: 1

=== Component Analysis: DefaultcolorsCheckboxCode ===
File: front-end/src/components/forms/form-elements/checkbox/code/DefaultcolorsCheckboxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, Checkbox } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 55
Component exports: 1

=== Component Analysis: PositionCheckboxCode ===
File: front-end/src/components/forms/form-elements/checkbox/code/PositionCheckboxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { FormGroup, FormControlLabel, FormControl } from '@mui/material';
import { styled } from '@mui/material/styles';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 121
Component exports: 1

=== Component Analysis: ColorsCheckboxCode ===
File: front-end/src/components/forms/form-elements/checkbox/code/ColorsCheckboxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, FormControlLabel } from '@mui/material';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';
import { styled } from '@mui/material/styles';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 125
Component exports: 1

=== Component Analysis: Position ===
File: front-end/src/components/forms/form-elements/radio/Position.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, RadioGroup, FormControlLabel } from '@mui/material';
import CustomRadio from "../../theme-elements/CustomRadio"

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: Custom ===
File: front-end/src/components/forms/form-elements/radio/Custom.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box } from '@mui/material';
import CustomRadio from '../../theme-elements/CustomRadio';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: Default ===
File: front-end/src/components/forms/form-elements/radio/Default.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, Radio } from '@mui/material';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 27
Component exports: 1

=== Component Analysis: Sizes ===
File: front-end/src/components/forms/form-elements/radio/Sizes.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, Radio } from '@mui/material';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [selectedValue, setSelectedValue] = React.useState('a');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: Colors ===
File: front-end/src/components/forms/form-elements/radio/Colors.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, Radio } from '@mui/material';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 70
Component exports: 1

=== Component Analysis: ColorLabel ===
File: front-end/src/components/forms/form-elements/radio/ColorLabel.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, FormControlLabel } from '@mui/material';
import CustomRadio from '../../theme-elements/CustomRadio';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 45
Component exports: 1

=== Component Analysis: CustomExRadioCode ===
File: front-end/src/components/forms/form-elements/radio/code/CustomExRadioCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Box } from '@mui/material';
import { styled } from '@mui/material/styles';
import Radio, { RadioProps } from '@mui/material/Radio';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 94
Component exports: 1

=== Component Analysis: ColorsRadioCode ===
File: front-end/src/components/forms/form-elements/radio/code/ColorsRadioCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Box, Radio } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 70
Component exports: 1

=== Component Analysis: ColorLabelRadioCode ===
File: front-end/src/components/forms/form-elements/radio/code/ColorLabelRadioCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, FormControlLabel } from '@mui/material';
import { styled } from '@mui/material/styles';
import Radio, { RadioProps } from '@mui/material/Radio';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 109
Component exports: 1

=== Component Analysis: DefaultRadioCode ===
File: front-end/src/components/forms/form-elements/radio/code/DefaultRadioCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Box, Radio } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [checked, setChecked] = React.useState(true);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: PositionRadioCode ===
File: front-end/src/components/forms/form-elements/radio/code/PositionRadioCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box, RadioGroup, FormControlLabel  } from '@mui/material';
import { styled } from '@mui/material/styles';
import Radio, { RadioProps } from '@mui/material/Radio';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 95
Component exports: 1

=== Component Analysis: SizesRadioCode ===
File: front-end/src/components/forms/form-elements/radio/code/SizesRadioCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { Box, Radio } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [selectedValue, setSelectedValue] = React.useState('a');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 41
Component exports: 1

=== Component Analysis: BasicDateTime ===
File: front-end/src/components/forms/form-elements/date-time/BasicDateTime.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import React from 'react'
import dayjs, { Dayjs } from 'dayjs'
import ChildCard from 'src/components/shared/ChildCard'
import { LocalizationProvider } from '@mui/x-date-pickers'
import { MobileDateTimePicker } from '@mui/x-date-pickers/MobileDateTimePicker'
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'
import BasicDateTimeCode from './code/BasicDateTimeCode'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value3, setValue3] = React.useState<Dayjs | null>(

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 44
Component exports: 1

=== Component Analysis: MuiDateTimePicker ===
File: front-end/src/components/forms/form-elements/date-time/MuiDateTimePicker.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import React from 'react'
import dayjs, { Dayjs } from 'dayjs'
import ChildCard from 'src/components/shared/ChildCard'
import { LocalizationProvider } from '@mui/x-date-pickers'
import { TimePicker } from '@mui/x-date-pickers/TimePicker'
import TimepickerCode from './code/TimepickerCode'
import { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers'
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value2, setValue2] = React.useState<Dayjs | null>(dayjs())

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 49
Component exports: 1

=== Component Analysis: DifferentDateTime ===
File: front-end/src/components/forms/form-elements/date-time/DifferentDateTime.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import React from 'react'
import ChildCard from 'src/components/shared/ChildCard'
import dayjs, { Dayjs } from 'dayjs'
import { LocalizationProvider } from '@mui/x-date-pickers'
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'
import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'
import DifferentDesignCode from './code/DifferentDesignCode'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState<Dayjs | null>(dayjs())

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 44
Component exports: 1

=== Component Analysis: TimepickerCode ===
File: front-end/src/components/forms/form-elements/date-time/code/TimepickerCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import dayjs, { Dayjs } from 'dayjs';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { TimePicker } from '@mui/x-date-pickers/TimePicker';
import { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers'
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value2, setValue2] = React.useState<Dayjs | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 67
Component exports: 1

=== Component Analysis: BasicDateTimeCode ===
File: front-end/src/components/forms/form-elements/date-time/code/BasicDateTimeCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import dayjs, { Dayjs } from 'dayjs';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { MobileDateTimePicker } from '@mui/x-date-pickers/MobileDateTimePicker';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value3, setValue3] = React.useState<Dayjs | null>(

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 56
Component exports: 1

=== Component Analysis: DifferentDesignCode ===
File: front-end/src/components/forms/form-elements/date-time/code/DifferentDesignCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import dayjs, { Dayjs } from 'dayjs';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState<Dayjs | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 61
Component exports: 1

=== Component Analysis: CountrySelectAutocomplete ===
File: front-end/src/components/forms/form-elements/autoComplete/CountrySelectAutocomplete.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box } from '@mui/material'
import Autocomplete from '@mui/material/Autocomplete'
import CustomTextField from '../../theme-elements/CustomTextField'
import countryData from './countrydata'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 54
Component exports: 1

=== Component Analysis: ComboBoxAutocomplete ===
File: front-end/src/components/forms/form-elements/autoComplete/ComboBoxAutocomplete.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CustomTextField from '../../theme-elements/CustomTextField';
import Autocomplete from '@mui/material/Autocomplete';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 149
Component exports: 1

=== Component Analysis: MultipleValuesAutocomplete ===
File: front-end/src/components/forms/form-elements/autoComplete/MultipleValuesAutocomplete.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import Autocomplete from '@mui/material/Autocomplete';
import CustomTextField from '../../theme-elements/CustomTextField';
import top100Films from './data';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 22
Component exports: 1

=== Component Analysis: SizesAutocomplete ===
File: front-end/src/components/forms/form-elements/autoComplete/SizesAutocomplete.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import Autocomplete from '@mui/material/Autocomplete';
import CustomTextField from '../../theme-elements/CustomTextField';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 163
Component exports: 1

=== Component Analysis: CheckboxesAutocomplete ===
File: front-end/src/components/forms/form-elements/autoComplete/CheckboxesAutocomplete.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import Autocomplete from '@mui/material/Autocomplete';
import top100Films from './data';
import CustomCheckbox from '../../theme-elements/CustomCheckbox';
import CustomTextField from '../../theme-elements/CustomTextField';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: FreeSoloAutocomplete ===
File: front-end/src/components/forms/form-elements/autoComplete/FreeSoloAutocomplete.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Stack } from '@mui/material';
import Autocomplete from '@mui/material/Autocomplete';
import CustomTextField from '../../theme-elements/CustomTextField';
import top100Films from './data';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 46
Component exports: 1

=== Component Analysis: countrydata ===
File: front-end/src/components/forms/form-elements/autoComplete/countrydata.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 426
Component exports: 1

=== Component Analysis: ControlledStateAutocomplete ===
File: front-end/src/components/forms/form-elements/autoComplete/ControlledStateAutocomplete.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Typography } from '@mui/material';
import Autocomplete from '@mui/material/Autocomplete';
import CustomTextField from "../../theme-elements/CustomTextField";
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState<string | null>(options[0]);
  const [inputValue, setInputValue] = React.useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 1

=== Component Analysis: ControlledStateCode ===
File: front-end/src/components/forms/form-elements/autoComplete/code/ControlledStateCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import Autocomplete from '@mui/material/Autocomplete';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [value, setValue] = React.useState<string | null>(options[0]);
const [inputValue, setInputValue] = React.useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 71
Component exports: 1

=== Component Analysis: CountrySelectCode ===
File: front-end/src/components/forms/form-elements/autoComplete/code/CountrySelectCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Box } from '@mui/material';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';0...............................................0.
import Autocomplete from '@mui/material/Autocomplete';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 492
Component exports: 1

=== Component Analysis: FreeSoloCode ===
File: front-end/src/components/forms/form-elements/autoComplete/code/FreeSoloCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Stack } from '@mui/material';
import Autocomplete from '@mui/material/Autocomplete';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 116
Component exports: 1

=== Component Analysis: CheckboxesCode ===
File: front-end/src/components/forms/form-elements/autoComplete/code/CheckboxesCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';
import Autocomplete from '@mui/material/Autocomplete';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 166
Component exports: 1

=== Component Analysis: MultipleValuesCode ===
File: front-end/src/components/forms/form-elements/autoComplete/code/MultipleValuesCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import Autocomplete from '@mui/material/Autocomplete';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 95
Component exports: 1

=== Component Analysis: SizesCode ===
File: front-end/src/components/forms/form-elements/autoComplete/code/SizesCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import Autocomplete from '@mui/material/Autocomplete';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 185
Component exports: 1

=== Component Analysis: ComboBoxCode ===
File: front-end/src/components/forms/form-elements/autoComplete/code/ComboBoxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import Autocomplete from '@mui/material/Autocomplete';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 171
Component exports: 1

=== Component Analysis: BasicIcons ===
File: front-end/src/components/forms/form-horizontal/BasicIcons.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Grid, InputAdornment, Button } from '@mui/material';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import { IconBuildingArch, IconMail, IconMessage2, IconPhone, IconUser } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 175
Component exports: 1

=== Component Analysis: FormTabs ===
File: front-end/src/components/forms/form-horizontal/FormTabs.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, Button, Grid, IconButton, InputAdornment, MenuItem, Stack, Tab } from '@mui/material';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import BlankCard from '../../shared/BlankCard';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomSelect from '../theme-elements/CustomSelect';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import { IconEye, IconEyeOff } from '@tabler/icons-react';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState('1');
  const [country, setCountry] = React.useState('');
  const [language, setLanguage] = React.useState('en');
  const [showPassword, setShowPassword] = React.useState(false);
  const [showPassword2, setShowPassword2] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
              <Tab label="Social Links" value="3" />
                      Linkedin

--- METRICS ---
Lines of code: 604
Component exports: 1

=== Component Analysis: FormSeparator ===
File: front-end/src/components/forms/form-horizontal/FormSeparator.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import {
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import CustomSelect from '../theme-elements/CustomSelect';
import { Stack } from '@mui/system';
import { IconEye, IconEyeOff } from '@tabler/icons-react';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [country, setCountry] = React.useState('');
  const [showPassword, setShowPassword] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 260
Component exports: 1

=== Component Analysis: BasicLayout ===
File: front-end/src/components/forms/form-horizontal/BasicLayout.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Grid, InputAdornment, Button } from '@mui/material';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 137
Component exports: 1

=== Component Analysis: FormLabelAlignment ===
File: front-end/src/components/forms/form-horizontal/FormLabelAlignment.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import {
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import CustomSelect from '../theme-elements/CustomSelect';
import { Stack } from '@mui/system';
import { IconEye, IconEyeOff } from '@tabler/icons-react';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [country, setCountry] = React.useState('');
  const [showPassword, setShowPassword] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 267
Component exports: 1

=== Component Analysis: CollapsibleForm ===
File: front-end/src/components/forms/form-horizontal/CollapsibleForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import {
import { IconChevronDown, IconHelp } from '@tabler/icons-react';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomRadio from '../theme-elements/CustomRadio';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import { Box } from '@mui/system';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState('');
  const [value2, setValue2] = React.useState('');
  const [value3, setValue3] = React.useState('radio1');
  const [expanded, setExpanded] = React.useState<string | false>('panel1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 361
Component exports: 1

=== Component Analysis: BasicLayoutCode ===
File: front-end/src/components/forms/form-horizontal/code/BasicLayoutCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Grid, InputAdornment, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import { Typography } from '@mui/material';
import { OutlinedInput } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 182
Component exports: 1

=== Component Analysis: BasicIconsCode ===
File: front-end/src/components/forms/form-horizontal/code/BasicIconsCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Grid, InputAdornment, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { OutlinedInput } from '@mui/material';
import { IconBuildingArch, IconMail, IconMessage2, IconPhone, IconUser } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 206
Component exports: 1

=== Component Analysis: FormSeparatorCode ===
File: front-end/src/components/forms/form-horizontal/code/FormSeparatorCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import {
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { TextField } from '@mui/material';
import { OutlinedInput } from '@mui/material';
import { Select } from '@mui/material';
import { Stack } from '@mui/system';
import { IconEye, IconEyeOff } from '@tabler/icons-react

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [country, setCountry] = React.useState('');
  const [showPassword, setShowPassword] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 300
Component exports: 1

=== Component Analysis: FVRegister ===
File: front-end/src/components/forms/form-validation/FVRegister.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { useFormik } from 'formik';
import * as yup from 'yup';
import { Link } from 'react-router-dom';
import { Box, Button, Stack, FormGroup, FormControlLabel, Typography } from '@mui/material';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomCheckbox from '../theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
          component={Link}

--- METRICS ---
Lines of code: 123
Component exports: 1

=== Component Analysis: FVRadio ===
File: front-end/src/components/forms/form-validation/FVRadio.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { useFormik } from 'formik';
import * as yup from 'yup';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 100
Component exports: 1

=== Component Analysis: FVCheckbox ===
File: front-end/src/components/forms/form-validation/FVCheckbox.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { useFormik } from 'formik';
import * as yup from 'yup';
import { Box, Button, Stack, FormHelperText } from '@mui/material';
import CustomCheckbox from '../theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 56
Component exports: 1

=== Component Analysis: FVOnLeave ===
File: front-end/src/components/forms/form-validation/FVOnLeave.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { useFormik } from 'formik';
import * as yup from 'yup';
import { Box, Button, Stack } from '@mui/material';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomFormLabel from '../theme-elements/CustomFormLabel';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 71
Component exports: 1

=== Component Analysis: FVSelect ===
File: front-end/src/components/forms/form-validation/FVSelect.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { useFormik } from 'formik';
import * as yup from 'yup';
import { Box, Button, Stack, FormHelperText, MenuItem } from '@mui/material';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomSelect from '../theme-elements/CustomSelect';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 62
Component exports: 1

=== Component Analysis: FVLogin ===
File: front-end/src/components/forms/form-validation/FVLogin.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { useFormik } from 'formik';
import * as yup from 'yup';
import { Link } from 'react-router-dom';
import { Box, Button, Stack, FormGroup, FormControlLabel, Typography } from '@mui/material';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomCheckbox from '../theme-elements/CustomCheckbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
          component={Link}

--- METRICS ---
Lines of code: 100
Component exports: 1

=== Component Analysis: SelectCode ===
File: front-end/src/components/forms/form-validation/code/SelectCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { useFormik } from 'formik';
import * as yup from 'yup';
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { Select } from '@mui/material';
import { Box, Button, Stack, FormHelperText, MenuItem } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 87
Component exports: 1

=== Component Analysis: RadioCode ===
File: front-end/src/components/forms/form-validation/code/RadioCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { useFormik } from 'formik';
import * as yup from 'yup';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 108
Component exports: 1

=== Component Analysis: CheckboxCode ===
File: front-end/src/components/forms/form-validation/code/CheckboxCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { useFormik } from 'formik';
import * as yup from 'yup';
import { Box, Button, Stack, FormHelperText } from '@mui/material';
import { styled } from '@mui/material/styles';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 128
Component exports: 1

=== Component Analysis: OnLeaveCode ===
File: front-end/src/components/forms/form-validation/code/OnLeaveCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { useFormik } from 'formik';
import * as yup from 'yup';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import { Typography } from '@mui/material';
import { Box, Button, Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 110
Component exports: 1

=== Component Analysis: FormCustomCode ===
File: front-end/src/components/forms/form-custom/code/FormCustomCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import * as React from 'react';
import {
import { SliderThumb } from '@mui/material/Slider';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';
import { TimePicker } from '@mui/x-date-pickers/TimePicker';
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import { Select } from '@mui/material';
import { Slider } from '@mui/material';
import { Switch } from '@mui/material';
import { Button } from '@mui/material';
import { Typography } from '@mui/material';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';
import Radio, { RadioProps } from '@mui/material/Radio';
import { useTheme } from '@mui/material/styles';
import { Card, CardHeader, CardContent, Divider, Box } from '@mui/material';
import { useSelector } from '@/store/hooks';
import { AppState } from '@/store/store';
import { IconVolume, IconVolume2 } from '@tabler/icons-react';
import { Stack } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [age, setAge] = React.useState('1');
  const [select1, setSelect] = React.useState('1');
  const [select2, setSelect2] = React.useState('1');
  const [value, setValue] = React.useState(null);
  const [value2, setValue2] = React.useState(null);
  const [value3, setValue3] = React.useState(30);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 671
Component exports: 1

=== Component Analysis: CustomSlider ===
File: front-end/src/components/forms/theme-elements/CustomSlider.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Slider } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: CustomSwitch ===
File: front-end/src/components/forms/theme-elements/CustomSwitch.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: CustomDisabledButton ===
File: front-end/src/components/forms/theme-elements/CustomDisabledButton.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Button } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 9
Component exports: 1

=== Component Analysis: CustomOutlinedButton ===
File: front-end/src/components/forms/theme-elements/CustomOutlinedButton.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Button } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: CustomCheckbox ===
File: front-end/src/components/forms/theme-elements/CustomCheckbox.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 69
Component exports: 1

=== Component Analysis: CustomSelect ===
File: front-end/src/components/forms/theme-elements/CustomSelect.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Select } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 8
Component exports: 1

=== Component Analysis: CustomRangeSlider ===
File: front-end/src/components/forms/theme-elements/CustomRangeSlider.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Slider } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 23
Component exports: 1

=== Component Analysis: CustomOutlinedInput ===
File: front-end/src/components/forms/theme-elements/CustomOutlinedInput.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { OutlinedInput } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 22
Component exports: 1

=== Component Analysis: CustomFormLabel ===
File: front-end/src/components/forms/theme-elements/CustomFormLabel.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 20
Component exports: 1

=== Component Analysis: CustomTextField ===
File: front-end/src/components/forms/theme-elements/CustomTextField.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 20
Component exports: 1

=== Component Analysis: CustomRadio ===
File: front-end/src/components/forms/theme-elements/CustomRadio.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import Radio, { RadioProps } from '@mui/material/Radio';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: CustomSocialButton ===
File: front-end/src/components/forms/theme-elements/CustomSocialButton.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { styled } from '@mui/material/styles';
import { Button } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: FormWizardSteps ===
File: front-end/src/components/forms/form-wizard/FormWizardSteps.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import React from 'react'
import {
import CustomTextField from 'src/components/forms/theme-elements/CustomTextField'
import CustomCheckbox from 'src/components/forms/theme-elements/CustomCheckbox'
import CustomFormLabel from 'src/components/forms/theme-elements/CustomFormLabel'
import ParentCard from 'src/components/shared/ParentCard'
import { Stack } from '@mui/system'
import FormWizardCode from './code/FormWizardCode'

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [activeStep, setActiveStep] = React.useState(0)
  const [skipped, setSkipped] = React.useState(new Set())

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 209
Component exports: 1

=== Component Analysis: FormWizardCode ===
File: front-end/src/components/forms/form-wizard/code/FormWizardCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from "react";
import {
import { styled } from '@mui/material/styles';
import { TextField } from '@mui/material';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';
import { Typography } from '@mui/material';
import { Stack } from '@mui/system';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [activeStep, setActiveStep] = React.useState(0);
  const [skipped, setSkipped] = React.useState(new Set());

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 279
Component exports: 1

=== Component Analysis: FbDisabledForm ===
File: front-end/src/components/forms/form-layouts/FbDisabledForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, Button } from '@mui/material';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import ParentCard from '../../shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 1

=== Component Analysis: FbInputVariants ===
File: front-end/src/components/forms/form-layouts/FbInputVariants.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { FormControl } from "@mui/material";
import CustomTextField from "../theme-elements/CustomTextField";
import CustomFormLabel from "../theme-elements/CustomFormLabel";
import ParentCard from "../../shared/ParentCard";
import InputVariantsCode from "src/components/forms/form-layouts/code/InputVariantsCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 63
Component exports: 1

=== Component Analysis: FbLeftIconForm ===
File: front-end/src/components/forms/form-layouts/FbLeftIconForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import React from "react";
import {
import CustomCheckbox from "../theme-elements/CustomCheckbox";
import CustomFormLabel from "../theme-elements/CustomFormLabel";
import ParentCard from "../../shared/ParentCard";
import { IconLock, IconMail, IconUser } from "@tabler/icons-react";
import LeftIconFormCode from "src/components/forms/form-layouts/code/LeftIconFormCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [state, setState] = React.useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 129
Component exports: 1

=== Component Analysis: FbDefaultForm ===
File: front-end/src/components/forms/form-layouts/FbDefaultForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import React from "react";
import {
import CustomTextField from "../theme-elements/CustomTextField";
import CustomSelect from "../theme-elements/CustomSelect";
import CustomCheckbox from "../theme-elements/CustomCheckbox";
import CustomRadio from "../theme-elements/CustomRadio";
import CustomFormLabel from "../theme-elements/CustomFormLabel";
import ParentCard from "../../shared/ParentCard";
import DefaultFormCode from "src/components/forms/form-layouts/code/DefaultFormCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [state, setState] = React.useState({
  const [value, setValue] = React.useState("");
  const [number, setNumber] = React.useState("");

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 223
Component exports: 1

=== Component Analysis: FbOrdinaryForm ===
File: front-end/src/components/forms/form-layouts/FbOrdinaryForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { FormControlLabel, Button } from '@mui/material';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomCheckbox from '../theme-elements/CustomCheckbox';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import ParentCard from '../../shared/ParentCard';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [state, setState] = React.useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 1

=== Component Analysis: FbReadonlyForm ===
File: front-end/src/components/forms/form-layouts/FbReadonlyForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Button } from '@mui/material';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import ParentCard from '../../shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 67
Component exports: 1

=== Component Analysis: index ===
File: front-end/src/components/forms/form-layouts/index.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import FbOrdinaryForm from './FbOrdinaryForm';
import FbDefaultForm from './FbDefaultForm';
import FbBasicHeaderForm from './FbBasicHeaderForm';
import FbReadonlyForm from './FbReadonlyForm';
import FbDisabledForm from './FbDisabledForm';
import FbLeftIconForm from './FbLeftIconForm';
import FbRightIconForm from './FbRightIconForm';
import FbInputVariants from './FbInputVariants';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 19
Component exports: 1

=== Component Analysis: FbBasicHeaderForm ===
File: front-end/src/components/forms/form-layouts/FbBasicHeaderForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import React from "react";
import {
import CustomTextField from "../theme-elements/CustomTextField";
import CustomSelect from "../theme-elements/CustomSelect";
import CustomRadio from "../theme-elements/CustomRadio";
import CustomFormLabel from "../theme-elements/CustomFormLabel";
import ParentCard from "../../shared/ParentCard";
import BasicHeaderFormCode from "src/components/forms/form-layouts/code/BasicHeaderFormCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [currency, setCurrency] = React.useState("");
  const [selectedValue, setSelectedValue] = React.useState("");
  const [country, setCountry] = React.useState("");

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 283
Component exports: 1

=== Component Analysis: FbRightIconForm ===
File: front-end/src/components/forms/form-layouts/FbRightIconForm.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import {
import CustomCheckbox from '../theme-elements/CustomCheckbox';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import ParentCard from '../../shared/ParentCard';
import { IconLock, IconUser, IconMail } from '@tabler/icons-react';
import { Stack } from '@mui/system';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [state, setState] = React.useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 121
Component exports: 1

=== Component Analysis: LeftIconFormCode ===
File: front-end/src/components/forms/form-layouts/code/LeftIconFormCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from "react";
import {
import { IconLock, IconMail, IconUser } from "@tabler/icons-react";
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [state, setState] = React.useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 197
Component exports: 1

=== Component Analysis: DefaultFormCode ===
File: front-end/src/components/forms/form-layouts/code/DefaultFormCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from "react";
import {
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { TextField } from '@mui/material';
import { Select } from '@mui/material';
import Radio, { RadioProps } from '@mui/material/Radio';
import Checkbox, { CheckboxProps } from '@mui/material/Checkbox';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [state, setState] = React.useState({
const [value, setValue] = React.useState('');
const [number, setNumber] = React.useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 375
Component exports: 1

=== Component Analysis: InputVariantsCode ===
File: front-end/src/components/forms/form-layouts/code/InputVariantsCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { FormControl } from '@mui/material';
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { TextField } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 93
Component exports: 1

=== Component Analysis: BasicHeaderFormCode ===
File: front-end/src/components/forms/form-layouts/code/BasicHeaderFormCode.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from "react";
import {
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { TextField } from '@mui/material';
import { Select } from '@mui/material';
import Radio, { RadioProps } from '@mui/material/Radio';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
const [currency, setCurrency] = React.useState('');
const [selectedValue, setSelectedValue] = React.useState('');
const [country, setCountry] = React.useState('');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 367
Component exports: 1

=== Component Analysis: BasicIcons ===
File: front-end/src/components/forms/form-vertical/BasicIcons.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Grid, InputAdornment, Button } from '@mui/material';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import { IconBuildingArch, IconMail, IconMessage2, IconPhone, IconUser } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 115
Component exports: 1

=== Component Analysis: FormTabs ===
File: front-end/src/components/forms/form-vertical/FormTabs.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Box, Button, Grid, IconButton, InputAdornment, MenuItem, Stack, Tab } from '@mui/material';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';
import BlankCard from '../../shared/BlankCard';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomSelect from '../theme-elements/CustomSelect';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import { IconEye, IconEyeOff } from '@tabler/icons-react';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState('1');
  const [country, setCountry] = React.useState('');
  const [language, setLanguage] = React.useState('en');
  const [showPassword, setShowPassword] = React.useState(false);
  const [showPassword2, setShowPassword2] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
              <Tab label="Social Links" value="3" />
                    <CustomFormLabel htmlFor="ft-linkedin">Linkedin</CustomFormLabel>

--- METRICS ---
Lines of code: 388
Component exports: 1

=== Component Analysis: FormSeparator ===
File: front-end/src/components/forms/form-vertical/FormSeparator.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import {
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import CustomSelect from '../theme-elements/CustomSelect';
import { Stack } from '@mui/system';
import { IconEye, IconEyeOff } from '@tabler/icons-react';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [country, setCountry] = React.useState('');
  const [language, setLanguage] = React.useState('');
  const [showPassword, setShowPassword] = React.useState(false);
  const [showPassword2, setShowPassword2] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 226
Component exports: 1

=== Component Analysis: BasicLayout ===
File: front-end/src/components/forms/form-vertical/BasicLayout.tsx
Date: Wed Jul 30 12:59:58 AM EDT 2025

--- IMPORTS ---
import { Grid, InputAdornment, Button } from '@mui/material';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 77
Component exports: 1

=== Component Analysis: CollapsibleForm ===
File: front-end/src/components/forms/form-vertical/CollapsibleForm.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import {
import { IconChevronDown, IconHelp } from '@tabler/icons-react';
import CustomFormLabel from '../theme-elements/CustomFormLabel';
import CustomTextField from '../theme-elements/CustomTextField';
import CustomRadio from '../theme-elements/CustomRadio';
import CustomOutlinedInput from '../theme-elements/CustomOutlinedInput';
import { Box } from '@mui/system';
import CustomSelect from '../theme-elements/CustomSelect';
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value, setValue] = React.useState('');
  const [value2, setValue2] = React.useState('');
  const [value3, setValue3] = React.useState('radio1');
  const [state, setStates] = React.useState('');
  const [expanded, setExpanded] = React.useState<string | false>('panel1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 306
Component exports: 1

=== Component Analysis: BasicLayoutCode ===
File: front-end/src/components/forms/form-vertical/code/BasicLayoutCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Grid, InputAdornment, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { TextField } from '@mui/material';
import { OutlinedInput } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 127
Component exports: 1

=== Component Analysis: BasicIconsCode ===
File: front-end/src/components/forms/form-vertical/code/BasicIconsCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Grid, InputAdornment, Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { OutlinedInput } from '@mui/material';
import { IconBuildingArch, IconMail, IconMessage2, IconPhone, IconUser } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 151
Component exports: 1

=== Component Analysis: ChurchSetupWizard ===
File: front-end/src/components/ChurchSetupWizard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useSnackbar } from 'notistack';
import axios from 'axios';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeStep, setActiveStep] = useState(0);
  const [recentChurches, setRecentChurches] = useState<Church[]>([]);
  const [selectedChurch, setSelectedChurch] = useState<Church | null>(null);
  const [churchDetails, setChurchDetails] = useState<ChurchDetails | null>(null);
  const [connectionStatus, setConnectionStatus] = useState<'idle' | 'testing' | 'success' | 'error'>('idle');
  const [connectionError, setConnectionError] = useState<string>('');
  const [clergyMembers, setClergyMembers] = useState<ClergyMember[]>([]);
  const [brandingSettings, setBrandingSettings] = useState<BrandingSettings>({
  const [loading, setLoading] = useState(false);
  const [clergyDialogOpen, setClergyDialogOpen] = useState(false);
  const [newClergy, setNewClergy] = useState<ClergyMember>({
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
import axios from 'axios';
      const response = await axios.get('/api/churches/recent?limit=10');
      const response = await axios.post(`/api/churches/test-connection/${church.church_id}`);
      const response = await axios.get(`/api/churches/${church.church_id}/details`);
      const response = await axios.get(`/api/churches/${selectedChurch.church_id}/clergy`);
      const response = await axios.post(`/api/churches/${selectedChurch.church_id}/clergy`, newClergy);
      await axios.delete(`/api/churches/${selectedChurch.church_id}/clergy/${clergyId}`);
      await axios.post(`/api/churches/${selectedChurch.church_id}/branding`, formData, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 746
Component exports: 1

=== Component Analysis: TemplateCreationDialog ===
File: front-end/src/components/templates/TemplateCreationDialog.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { templateService } from '../../services/templateService';

--- PROPS/INTERFACES ---
interface TemplateCreationDialogProps {
  open: boolean;
  onClose: () => void;
  onTemplateCreated: () => void;
  editTemplate?: Template | null;
}

const steps = ['Template Info', 'Field Mapping', 'Preview & Create'];

const fieldTypes = [
  { value: 'string', label: 'Text' },

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [activeStep, setActiveStep] = useState(0);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [templateName, setTemplateName] = useState('');
  const [description, setDescription] = useState('');
  const [recordType, setRecordType] = useState('custom');
  const [fields, setFields] = useState<Field[]>([
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [predefinedTemplates, setPredefinedTemplates] = useState<any>(null);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 548
Component exports: 1

=== Component Analysis: FieldMappingEditor ===
File: front-end/src/components/templates/FieldMappingEditor.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {

--- PROPS/INTERFACES ---
interface FieldMappingEditorProps {
  open: boolean;
  onClose: () => void;
  fields: Field[];
  onSave: (fields: Field[]) => void;
  title?: string;
  mode?: 'edit' | 'create';
}

const FIELD_TYPES = [
  'string', 'number', 'date', 'datetime', 'boolean', 

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [fields, setFields] = useState<Field[]>(initialFields);
  const [editingField, setEditingField] = useState<number | null>(null);
  const [expandedField, setExpandedField] = useState<string | false>(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 622
Component exports: 1

=== Component Analysis: TemplatePreviewDialog ===
File: front-end/src/components/templates/TemplatePreviewDialog.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { DataGrid, GridColDef } from '@mui/x-data-grid';
import { AgGridReact } from 'ag-grid-react';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';

--- PROPS/INTERFACES ---
interface TemplatePreviewDialogProps {
  open: boolean;
  onClose: () => void;
  template: Template;
}

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [activeTab, setActiveTab] = useState(0);
    return `import React, { useState, useEffect } from 'react';
  const [rowData, setRowData] = useState([]);
  const [loading, setLoading] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      // const response = await fetch('/api/${template.name.toLowerCase()}');
            This is a preview with sample data. The actual component will load real data from your API.

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 507
Component exports: 2

=== Component Analysis: GitOpsPanel ===
File: front-end/src/components/GitOpsPanel.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { ComponentInfo } from '../hooks/useComponentRegistry';
import { gitOpsBridge } from '../ai/git/gitOpsBridge';
import { commitHandler, CommitData } from '../ai/git/commitHandler';
import { prGenerator, PullRequest, PRResult } from '../ai/git/prGenerator';
import { gitConfigManager, GitConfig } from '../ai/git/config';

--- PROPS/INTERFACES ---
interface GitOpsPanelProps {
  component: ComponentInfo;
  isOpen: boolean;
  onClose: () => void;
}

interface GitOpsState {
  isConfigured: boolean;
  isInitialized: boolean;
  pendingPRs: PullRequest[];
  commitHistory: CommitData[];

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [state, setState] = useState<GitOpsState>({
  const [gitConfig, setGitConfig] = useState<GitConfig>(gitConfigManager.getConfig());
  const [showConfigDialog, setShowConfigDialog] = useState(false);
  const [showPRDialog, setShowPRDialog] = useState(false);
  const [selectedPR, setSelectedPR] = useState<PullRequest | null>(null);
  const [commentText, setCommentText] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 717
Component exports: 1

=== Component Analysis: KanbanTaskModal ===
File: front-end/src/components/KanbanTaskModal.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { DatePicker } from '@mui/x-date-pickers/DatePicker';
import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';
import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';
import { format } from 'date-fns';
import MarkdownUpload from './MarkdownUpload';

--- PROPS/INTERFACES ---
interface KanbanTaskModalProps {
  open: boolean;
  onClose: () => void;
  task: Task;
  onRefresh: () => void;
  boardLabels: Label[];
}

const priorityColors = {
  low: '#28a745',
  medium: '#ffc107',

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [isEditing, setIsEditing] = useState(false);
  const [formData, setFormData] = useState({
  const [comments, setComments] = useState<Comment[]>([]);
  const [newComment, setNewComment] = useState('');
  const [users, setUsers] = useState<User[]>([]);
  const [selectedLabels, setSelectedLabels] = useState<Label[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch(`/api/kanban/tasks/${task.id}/comments`, {
      const response = await fetch('/api/users', {
      const response = await fetch(`/api/kanban/tasks/${task.id}`, {
      const response = await fetch(`/api/kanban/tasks/${task.id}/comments`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 522
Component exports: 1

=== Component Analysis: SiteEditorErrorBoundary ===
File: front-end/src/components/SiteEditorErrorBoundary.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { Component, ErrorInfo, ReactNode } from 'react';
import { Box, Typography, Alert, Button } from '@mui/material';
import { useAuth } from '../context/AuthContext';

--- PROPS/INTERFACES ---
interface Props {
  children: ReactNode;
}

interface State {
  hasError: boolean;
  error: Error | null;
  errorInfo: ErrorInfo | null;
}

class SiteEditorErrorBoundary extends Component<Props & { user: any }, State> {

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 97
Component exports: 1

=== Component Analysis: OrthodoxBanner ===
File: front-end/src/components/OrthodoxBanner/OrthodoxBanner.jsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useState } from 'react';
import './OrthodoxBanner.css';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect, useState } from 'react';
  const [currentLangIndex, setCurrentLangIndex] = useState(0);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 75
Component exports: 1

=== Component Analysis: SiteEditorOverlay ===
File: front-end/src/components/SiteEditorOverlay.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
import { Box, Fab, Tooltip, IconButton, Chip } from '@mui/material';
import {
import { useAuth } from '../context/AuthContext';
import { useComponentRegistry, ComponentInfo, generateComponentId, extractComponentInfo } from '../hooks/useComponentRegistry';
import { useInspectorState } from '../hooks/useInspectorState';
import { editorBridge } from '../services/om-ai/editorBridge';
import ComponentInspector from './ComponentInspector';
import '../styles/inspector.css';
import VRTSettingsPanel from './VRTSettingsPanel';

--- PROPS/INTERFACES ---
interface SiteEditorOverlayProps {
  children?: React.ReactNode;
}

const SiteEditorOverlay: React.FC<SiteEditorOverlayProps> = ({ children }) => {
  const { user, isSuperAdmin } = useAuth();
  const [isEditMode, setIsEditMode] = useState(false);
  const [hoveredComponent, setHoveredComponent] = useState<ComponentInfo | null>(null);
  const [omaiStatus, setOmaiStatus] = useState({ isAvailable: false });
  const [vrtSettingsOpen, setVrtSettingsOpen] = useState(false);
  const overlayRef = useRef<HTMLDivElement>(null);

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
  const [isEditMode, setIsEditMode] = useState(false);
  const [hoveredComponent, setHoveredComponent] = useState<ComponentInfo | null>(null);
  const [omaiStatus, setOmaiStatus] = useState({ isAvailable: false });
  const [vrtSettingsOpen, setVrtSettingsOpen] = useState(false);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
      console.log('API Routes:', hoveredComponent.apiRoutes);

--- METRICS ---
Lines of code: 368
Component exports: 1

=== Component Analysis: TableThemeDemo ===
File: front-end/src/components/TableThemeDemo.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { TableThemeSelector } from './TableThemeSelector';
import '../styles/table-themes.css';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [selectedTheme, setSelectedTheme] = useState<string>('table-theme-ocean-serenity');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 232
Component exports: 1

=== Component Analysis: SiteEditorFallback ===
File: front-end/src/components/SiteEditorFallback.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { Box, Typography, Alert, Button, Card, CardContent } from '@mui/material';
import { useAuth } from '../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 87
Component exports: 1

=== Component Analysis: Banner2 ===
File: front-end/src/components/widgets/banners/Banner2.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { CardContent, Typography, Button, Box } from '@mui/material';
import starBg from 'src/assets/images/backgrounds/gold.png';
import ParentCard from '../../shared/ParentCard';
import NotificationCode from './code/NotificationCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 32
Component exports: 1

=== Component Analysis: Banner1 ===
File: front-end/src/components/widgets/banners/Banner1.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Card, CardContent, Typography, Button, Box, Grid } from '@mui/material';
import trackBg from 'src/assets/images/backgrounds/login-bg.svg';
import ParentCard from '../../shared/ParentCard';
import Transection from './code/TransectionCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 62
Component exports: 1

=== Component Analysis: Banner4 ===
File: front-end/src/components/widgets/banners/Banner4.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { CardContent, Typography, Button, Box } from '@mui/material';
import oopsBg from 'src/assets/images/backgrounds/maintenance.svg';
import ParentCard from 'src/components/shared/ParentCard';
import ErrorBannerCode from './code/ErrorBannerCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: Banner5 ===
File: front-end/src/components/widgets/banners/Banner5.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { CardContent, Typography, Button, Box } from '@mui/material';
import shopBg from 'src/assets/images/products/empty-shopping-cart.svg';
import ParentCard from '../../shared/ParentCard';
import EmptyCartCode from './code/EmptyCartCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 34
Component exports: 1

=== Component Analysis: Banner3 ===
File: front-end/src/components/widgets/banners/Banner3.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { CardContent, Typography, Button, Avatar, Badge, Box, Stack } from '@mui/material';
import userBg from 'src/assets/images/profile/user-1.jpg';
import ParentCard from '../../shared/ParentCard';
import FriendCardCode from './code/FriendCardCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 43
Component exports: 1

=== Component Analysis: ErrorBannerCode ===
File: front-end/src/components/widgets/banners/code/ErrorBannerCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { CardContent, Typography, Button, Card } from '@mui/material';
import { Box } from '@mui/system';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 2

=== Component Analysis: TransectionCode ===
File: front-end/src/components/widgets/banners/code/TransectionCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import { Card, CardContent, Typography, Button, Box, Grid } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 66
Component exports: 2

=== Component Analysis: FriendCardCode ===
File: front-end/src/components/widgets/banners/code/FriendCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { CardContent, Typography, Button, Avatar, Badge, Card } from '@mui/material';
import { Box, Stack } from '@mui/system';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 2

=== Component Analysis: EmptyCartCode ===
File: front-end/src/components/widgets/banners/code/EmptyCartCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { CardContent, Typography, Button, Card } from '@mui/material';
import { Box } from '@mui/system';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 2

=== Component Analysis: NotificationCode ===
File: front-end/src/components/widgets/banners/code/NotificationCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { CardContent, Typography, Button, Card } from '@mui/material';
import { Box } from '@mui/system';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 2

=== Component Analysis: Settings ===
File: front-end/src/components/widgets/cards/Settings.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { CardContent, Typography, Avatar, Divider, Button, Box, Stack } from '@mui/material';
import ParentCard from '../../shared/ParentCard';
import { IconMessage, IconVolume } from '@tabler/icons-react';
import CustomSlider from '../../forms/theme-elements/CustomSlider';
import CustomSwitch from '../../forms/theme-elements/CustomSwitch';
import SettingsCode from './code/SettingsCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value3, setValue3] = React.useState(45);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 68
Component exports: 1

=== Component Analysis: ComplexCard ===
File: front-end/src/components/widgets/cards/ComplexCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { Link } from 'react-router-dom';
import {
import ParentCard from 'src/components/shared/ParentCard';
import { IconMessage2, IconEye, IconPoint } from '@tabler/icons-react';
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';
import user3 from 'src/assets/images/profile/user-3.jpg';
import img1 from 'src/assets/images/blog/blog-img1.jpg';
import img2 from 'src/assets/images/blog/blog-img2.jpg';
import img3 from 'src/assets/images/blog/blog-img3.jpg';
import ComplexCardCode from './code/ComplexCardCode';
import BlankCard from '../../shared/BlankCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                <Typography component={Link} to="/">
                      component={Link}

--- METRICS ---
Lines of code: 155
Component exports: 1

=== Component Analysis: FollowerCard ===
File: front-end/src/components/widgets/cards/FollowerCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { CardContent, Typography, Grid, Button, Avatar, Box, Stack } from '@mui/material';
import { IconMapPin } from '@tabler/icons-react';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import BlankCard from '../../shared/BlankCard';
import ParentCard from 'src/components/shared/ParentCard';
import FollowerCardCode from './code/FollowerCardCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 80
Component exports: 1

=== Component Analysis: GiftCard ===
File: front-end/src/components/widgets/cards/GiftCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { CardContent, Typography, Grid, Button, CardMedia, IconButton, Stack, Skeleton } from '@mui/material';
import img1 from 'src/assets/images/products/s1.jpg';
import img2 from 'src/assets/images/products/s2.jpg';
import BlankCard from '../../shared/BlankCard';
import { IconGift } from '@tabler/icons-react';
import ParentCard from '../../shared/ParentCard';
import GiftCardCode from './code/GiftCardCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 80
Component exports: 1

=== Component Analysis: UpcomingActivity ===
File: front-end/src/components/widgets/cards/UpcomingActivity.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar, Box } from '@mui/material';
import ParentCard from '../../shared/ParentCard';
import { IconDatabase, IconMail, IconMapPin, IconPhone, IconScreenShare } from '@tabler/icons-react';
import UpcomingActivityCode from './code/UpcomingActivityCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 117
Component exports: 1

=== Component Analysis: EcommerceCard ===
File: front-end/src/components/widgets/cards/EcommerceCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { Link } from 'react-router-dom';
import { CardContent, Typography, Grid, Rating, Tooltip, Fab, Stack, Skeleton } from '@mui/material';
import img1 from 'src/assets/images/products/s4.jpg';
import img2 from 'src/assets/images/products/s5.jpg';
import img3 from 'src/assets/images/products/s7.jpg';
import img4 from 'src/assets/images/products/s11.jpg';
import BlankCard from '../../shared/BlankCard';
import ParentCard from '../../shared/ParentCard';
import { IconBasket } from '@tabler/icons-react';
import EcommerceCardCode from './code/EcommerceCardCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
              <Typography component={Link} to="/">

--- METRICS ---
Lines of code: 119
Component exports: 1

=== Component Analysis: ProfileCard ===
File: front-end/src/components/widgets/cards/ProfileCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { CardContent, Typography, Grid, IconButton, Divider, Avatar, Box, Stack, Skeleton } from '@mui/material';
import { useTheme } from '@mui/material/styles';
import {
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import BlankCard from '../../shared/BlankCard';
import ParentCard from '../../shared/ParentCard';
import ProfileCardCode from './code/ProfileCardCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 127
Component exports: 1

=== Component Analysis: MusicCard ===
File: front-end/src/components/widgets/cards/MusicCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { CardContent, Typography, Grid, Card, CardMedia, Box, IconButton, Stack, Skeleton } from '@mui/material';
import img1 from 'src/assets/images/blog/blog-img5.jpg';
import img2 from 'src/assets/images/blog/blog-img4.jpg';
import img3 from 'src/assets/images/blog/blog-img3.jpg';
import { IconPlayerPlay, IconPlayerSkipBack, IconPlayerSkipForward } from '@tabler/icons-react';
import ParentCard from '../../shared/ParentCard';
import MusicCardCode from './code/MusicCardCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  const [isLoading, setLoading] = React.useState(true);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 97
Component exports: 1

=== Component Analysis: FriendCard ===
File: front-end/src/components/widgets/cards/FriendCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { CardContent, Typography, Grid, Button, Box, AvatarGroup, Avatar, Stack } from '@mui/material';
import img1 from 'src/assets/images/profile/user-1.jpg';
import img2 from 'src/assets/images/profile/user-2.jpg';
import img3 from 'src/assets/images/profile/user-3.jpg';
import img4 from 'src/assets/images/profile/user-4.jpg';
import BlankCard from '../../shared/BlankCard';
import ParentCard from '../../shared/ParentCard';
import FriendCardCode from './code/FriendCardCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 91
Component exports: 1

=== Component Analysis: EcommerceCardCode ===
File: front-end/src/components/widgets/cards/code/EcommerceCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React, { useEffect } from 'react';
import { Link } from 'react-router-dom';
import { CardContent, Typography, Grid, Rating, Tooltip, Fab, Card } from '@mui/material';
import { Stack } from '@mui/system';
import { IconBasket } from '@tabler/icons-react';
import Image from 'next/image';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
            <Typography component={Link} href="/">

--- METRICS ---
Lines of code: 100
Component exports: 2

=== Component Analysis: FriendCardCode ===
File: front-end/src/components/widgets/cards/code/FriendCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { CardContent, Typography, Grid, Button, Box, AvatarGroup, Avatar, Card } from '@mui/material';
import { Stack } from '@mui/system';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 82
Component exports: 2

=== Component Analysis: ProfileCardCode ===
File: front-end/src/components/widgets/cards/code/ProfileCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React, { useEffect } from 'react';
import { CardContent, Typography, Grid, IconButton, Divider, Avatar, Box, Card } from '@mui/material';
import { useTheme } from '@mui/material/styles';
import { Stack } from '@mui/system';
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 104
Component exports: 2

=== Component Analysis: ComplexCardCode ===
File: front-end/src/components/widgets/cards/code/ComplexCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React, { useEffect } from 'react';
import { Link } from 'react-router-dom';
import {
import { IconMessage2, IconEye, IconPoint } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
                <Typography component={Link} href="/">
                      component={Link}

--- METRICS ---
Lines of code: 129
Component exports: 2

=== Component Analysis: FollowerCardCode ===
File: front-end/src/components/widgets/cards/code/FollowerCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { CardContent, Typography, Grid, Button, Avatar, Box, Card } from '@mui/material';
import { Stack } from '@mui/system';
import { IconMapPin } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 77
Component exports: 2

=== Component Analysis: UpcomingActivityCode ===
File: front-end/src/components/widgets/cards/code/UpcomingActivityCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar, Box } from '@mui/material';
import { IconDatabase, IconMail, IconMapPin, IconPhone, IconScreenShare } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 115
Component exports: 2

=== Component Analysis: SettingsCode ===
File: front-end/src/components/widgets/cards/code/SettingsCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React from 'react';
import { CardContent, Typography, Avatar, Divider, Button, Card } from '@mui/material';
import { Box, Stack } from '@mui/system';
import { IconMessage, IconVolume } from '@tabler/icons-react';
import { styled } from '@mui/material/styles';
import { Slider } from '@mui/material';
import { Switch } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [value3, setValue3] = React.useState(45);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 127
Component exports: 2

=== Component Analysis: MusicCardCode ===
File: front-end/src/components/widgets/cards/code/MusicCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React, { useEffect } from 'react';
import { CardContent, Typography, Grid, Card, CardMedia, Box, IconButton, Stack, Skeleton } from '@mui/material';
import { IconPlayerPlay, IconPlayerSkipBack, IconPlayerSkipForward } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 85
Component exports: 2

=== Component Analysis: GiftCardCode ===
File: front-end/src/components/widgets/cards/code/GiftCardCode.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import CodeDialog from 'src/components/shared/CodeDialog';
import React, { useEffect } from 'react';
import { CardContent, Typography, Grid, Button, CardMedia, IconButton, Card } from '@mui/material';
import { Stack } from '@mui/system';
import { IconGift } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 66
Component exports: 2

=== Component Analysis: Views ===
File: front-end/src/components/widgets/charts/Views.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { CardContent, Typography, Stack } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 109
Component exports: 1

=== Component Analysis: PageImpressions ===
File: front-end/src/components/widgets/charts/PageImpressions.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { CardContent, Typography, Avatar, Grid, Stack } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { IconArrowDownRight } from '@tabler/icons-react';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 115
Component exports: 1

=== Component Analysis: Followers ===
File: front-end/src/components/widgets/charts/Followers.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { CardContent, Typography, Stack } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 83
Component exports: 1

=== Component Analysis: CurrentValue ===
File: front-end/src/components/widgets/charts/CurrentValue.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Box, Button, CardContent, Grid, Typography, Stack } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 330
Component exports: 1

=== Component Analysis: Earned ===
File: front-end/src/components/widgets/charts/Earned.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { CardContent, Typography, Stack } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 82
Component exports: 1

=== Component Analysis: MostVisited ===
File: front-end/src/components/widgets/charts/MostVisited.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { CardContent, Typography, MenuItem, Stack, Box } from '@mui/material';
import BlankCard from '../../shared/BlankCard';
import CustomSelect from '../../forms/theme-elements/CustomSelect';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [month, setMonth] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 137
Component exports: 1

=== Component Analysis: SalesTwo ===
File: front-end/src/components/dashboards/ecommerce/SalesTwo.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Box, Typography } from '@mui/material';
import DashboardCard from '../../shared/DashboardCard';
import { Props } from 'react-apexcharts';
import { IconArrowUpRight, IconShoppingCart } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 136
Component exports: 1

=== Component Analysis: RevenueUpdates ===
File: front-end/src/components/dashboards/ecommerce/RevenueUpdates.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar, Box } from '@mui/material';
import DashboardCard from '../../shared/DashboardCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 116
Component exports: 1

=== Component Analysis: Expence ===
File: front-end/src/components/dashboards/ecommerce/Expence.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Typography } from '@mui/material';
import { Props } from 'react-apexcharts';
import DashboardCard from '../../shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 74
Component exports: 1

=== Component Analysis: YearlySales ===
File: front-end/src/components/dashboards/ecommerce/YearlySales.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import DashboardWidgetCard from '../../shared/DashboardWidgetCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 87
Component exports: 1

=== Component Analysis: PaymentGateways ===
File: front-end/src/components/dashboards/ecommerce/PaymentGateways.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar, Box, Button } from '@mui/material';
import DashboardCard from '../../shared/DashboardCard';
import icon1Img from "src/assets/images/svgs/icon-paypal.svg"
import icon2Img from "src/assets/images/svgs/icon-office-bag.svg"
import icon3Img from "src/assets/images/svgs/icon-master-card.svg"
import icon4Img from "src/assets/images/svgs/icon-pie.svg"

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 120
Component exports: 1

=== Component Analysis: SalesOverview ===
File: front-end/src/components/dashboards/ecommerce/SalesOverview.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Box } from '@mui/material';
import { IconGridDots } from '@tabler/icons-react';
import { Props } from 'react-apexcharts';
import DashboardCard from '../../shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 149
Component exports: 1

=== Component Analysis: RecentTransactions ===
File: front-end/src/components/dashboards/ecommerce/RecentTransactions.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import DashboardCard from '../../shared/DashboardCard';
import {
import { Link, Typography } from '@mui/material';
import Timeline from '@mui/lab/Timeline';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link, Typography } from '@mui/material';
              <Link href="/" underline="none">
              </Link>
              <Link href="/" underline="none">
              </Link>
              <Link href="/" underline="none">
              </Link>

--- METRICS ---
Lines of code: 103
Component exports: 1

=== Component Analysis: WelcomeCard ===
File: front-end/src/components/dashboards/ecommerce/WelcomeCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Avatar, Typography, Card, CardContent, Grid, Divider, Stack } from '@mui/material';
import { IconArrowUpRight } from '@tabler/icons-react';
import welcomeImg from 'src/assets/images/backgrounds/welcome-bg2.png';
import userImg from 'src/assets/images/profile/user-1.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: Sales ===
File: front-end/src/components/dashboards/ecommerce/Sales.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Box, Typography } from '@mui/material';
import { Props } from 'react-apexcharts';
import DashboardCard from '../../shared/DashboardCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 97
Component exports: 1

=== Component Analysis: MonthlyEarnings ===
File: front-end/src/components/dashboards/ecommerce/MonthlyEarnings.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar } from '@mui/material';
import { IconArrowUpLeft } from '@tabler/icons-react';
import DashboardCard from '../../shared/DashboardCard';
import icon1Img from 'src/assets/images/svgs/icon-master-card-2.svg';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 96
Component exports: 1

=== Component Analysis: ProductPerformances ===
File: front-end/src/components/dashboards/ecommerce/ProductPerformances.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import DashboardCard from '../../shared/DashboardCard';
import CustomSelect from '../../forms/theme-elements/CustomSelect';
import { Props } from 'react-apexcharts';
import {
import img1 from 'src/assets/images/products/s6.jpg';
import img2 from 'src/assets/images/products/s9.jpg';
import img3 from 'src/assets/images/products/s7.jpg';
import img4 from 'src/assets/images/products/s4.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [month, setMonth] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 443
Component exports: 1

=== Component Analysis: Growth ===
File: front-end/src/components/dashboards/ecommerce/Growth.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Box, Typography, Avatar } from '@mui/material';
import DashboardCard from '../../shared/DashboardCard';
import { Props } from 'react-apexcharts';
import { IconArrowUpRight } from '@tabler/icons-react';
import icon1 from 'src/assets/images/svgs/icon-bars.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 92
Component exports: 1

=== Component Analysis: Projects ===
File: front-end/src/components/dashboards/modern/Projects.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar } from '@mui/material';
import { IconArrowUpLeft } from '@tabler/icons-react';
import DashboardCard from '../../shared/DashboardCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 114
Component exports: 1

=== Component Analysis: RevenueUpdates ===
File: front-end/src/components/dashboards/modern/RevenueUpdates.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { MenuItem, Grid, Stack, Typography, Button, Avatar, Box } from '@mui/material';
import { IconGridDots } from '@tabler/icons-react';
import DashboardCard from '../../shared/DashboardCard';
import CustomSelect from '../../forms/theme-elements/CustomSelect';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [month, setMonth] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 190
Component exports: 1

=== Component Analysis: EmployeeSalary ===
File: front-end/src/components/dashboards/modern/EmployeeSalary.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import DashboardWidgetCard from '../../shared/DashboardWidgetCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 87
Component exports: 1

=== Component Analysis: Social ===
File: front-end/src/components/dashboards/modern/Social.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Link } from 'react-router-dom';
import { Stack, Typography, Avatar, Box, AvatarGroup } from '@mui/material';
import { IconMessage2 } from '@tabler/icons-react';
import DashboardCard from '../../shared/DashboardCard';
import ProfileImg from '../../../assets/images/profile/user-1.jpg';
import User1Img from '../../../assets/images/profile/user-2.jpg';
import User2Img from '../../../assets/images/profile/user-3.jpg';
import User3Img from '../../../assets/images/profile/user-4.jpg';
import User4Img from '../../../assets/images/profile/user-5.jpg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { Link } from 'react-router-dom';
          <Link to="/">
          </Link>

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: YearlyBreakup ===
File: front-end/src/components/dashboards/modern/YearlyBreakup.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Grid, Stack, Typography, Avatar } from '@mui/material';
import { IconArrowUpLeft } from '@tabler/icons-react';
import DashboardCard from '../../shared/DashboardCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 126
Component exports: 1

=== Component Analysis: MiniControlPanel ===
File: front-end/src/components/dashboards/modern/MiniControlPanel.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { useNavigate } from 'react-router-dom';
import {

--- PROPS/INTERFACES ---
interface MiniControlPanelProps {
    cards?: ControlCard[];
}

const MiniControlPanel: React.FC<MiniControlPanelProps> = ({ cards }) => {
    const navigate = useNavigate();

    const defaultCards: ControlCard[] = [
        {
            label: 'Add New Record',
            description: 'Create baptism, marriage, or funeral record',

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 193
Component exports: 1

=== Component Analysis: Customers ===
File: front-end/src/components/dashboards/modern/Customers.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar } from '@mui/material';
import { IconArrowDownRight } from '@tabler/icons-react';
import DashboardCard from '../../shared/DashboardCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 92
Component exports: 1

=== Component Analysis: SocialToolbar ===
File: front-end/src/components/dashboards/modern/SocialToolbar.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { useNavigate } from 'react-router-dom';
import {

--- PROPS/INTERFACES ---
interface SocialToolbarProps {
    items?: SocialItem[];
    position?: 'top-right' | 'floating' | 'inline';
}

const SocialToolbar: React.FC<SocialToolbarProps> = ({
    items,
    position = 'top-right'
}) => {
    const navigate = useNavigate();
    const [notificationAnchor, setNotificationAnchor] = useState<HTMLButtonElement | null>(null);

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [notificationAnchor, setNotificationAnchor] = useState<HTMLButtonElement | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
    const navigate = useNavigate();

--- METRICS ---
Lines of code: 240
Component exports: 1

=== Component Analysis: WeeklyStats ===
File: front-end/src/components/dashboards/modern/WeeklyStats.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar, Box } from '@mui/material';
import DashboardCard from '../../shared/DashboardCard';
import { IconGridDots } from '@tabler/icons-react';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 161
Component exports: 1

=== Component Analysis: WhatsNewEditor_Simple ===
File: front-end/src/components/dashboards/modern/WhatsNewEditor_Simple.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: MonthlyEarnings ===
File: front-end/src/components/dashboards/modern/MonthlyEarnings.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import Chart from 'react-apexcharts';
import { useTheme } from '@mui/material/styles';
import { Stack, Typography, Avatar, Fab } from '@mui/material';
import { IconArrowDownRight, IconCurrencyDollar } from '@tabler/icons-react';
import DashboardCard from '../../shared/DashboardCard';
import { Props } from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 94
Component exports: 1

=== Component Analysis: WhatsNewEditor ===
File: front-end/src/components/dashboards/modern/WhatsNewEditor.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { IconEdit, IconCheck, IconX } from '@tabler/icons-react';
import { useAuth } from '../../../context/AuthContext';

--- PROPS/INTERFACES ---
interface WhatsNewEditorProps {
    editable?: boolean;
}

const WhatsNewEditor: React.FC<WhatsNewEditorProps> = ({ editable }) => {
    const { user } = useAuth();
    const [content, setContent] = useState('');
    const [isEditing, setIsEditing] = useState(false);
    const [editContent, setEditContent] = useState('');

    // Check if user can edit (priest, deacon, admin, super_admin)

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [content, setContent] = useState('');
    const [isEditing, setIsEditing] = useState(false);
    const [editContent, setEditContent] = useState('');
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 148
Component exports: 1

=== Component Analysis: TopPerformers ===
File: front-end/src/components/dashboards/modern/TopPerformers.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import DashboardCard from '../../shared/DashboardCard';
import CustomSelect from '../../forms/theme-elements/CustomSelect';
import {
import TopPerformerData from './TopPerformerData';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [month, setMonth] = React.useState('1');

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 140
Component exports: 1

=== Component Analysis: TopCards ===
File: front-end/src/components/dashboards/modern/TopCards.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import { Box, CardContent, Grid, Typography } from '@mui/material';
import icon1 from '../../../assets/images/svgs/icon-connect.svg';
import icon2 from '../../../assets/images/svgs/icon-user-male.svg';
import icon3 from '../../../assets/images/svgs/icon-briefcase.svg';
import icon4 from '../../../assets/images/svgs/icon-mailbox.svg';
import icon5 from '../../../assets/images/svgs/icon-favorites.svg';
import icon6 from '../../../assets/images/svgs/icon-speech-bubble.svg';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 89
Component exports: 1

=== Component Analysis: SellingProducts ===
File: front-end/src/components/dashboards/modern/SellingProducts.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, CardContent, Chip, Paper, Stack, Typography, LinearProgress } from '@mui/material';
import { useTheme } from '@mui/material/styles';
import SavingsImg from '../../../assets/images/backgrounds/piggy.png';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 91
Component exports: 1

=== Component Analysis: TodaysSummary ===
File: front-end/src/components/dashboards/modern/TodaysSummary.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 190
Component exports: 1

=== Component Analysis: DatabaseStatus ===
File: front-end/src/components/dashboards/orthodoxmetrics/DatabaseStatus.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 107
Component exports: 1

=== Component Analysis: TopChurches ===
File: front-end/src/components/dashboards/orthodoxmetrics/TopChurches.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Card, CardContent, Typography, Box } from '@mui/material';
import Chart from 'react-apexcharts';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 83
Component exports: 1

=== Component Analysis: ExportActions ===
File: front-end/src/components/dashboards/orthodoxmetrics/ExportActions.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 93
Component exports: 2

=== Component Analysis: OCRQueueStats ===
File: front-end/src/components/dashboards/orthodoxmetrics/OCRQueueStats.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Card, CardContent, Typography, Box, LinearProgress, Stack } from '@mui/material';
import { IconFileText, IconLoader, IconCheck } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 76
Component exports: 1

=== Component Analysis: AdminWelcomeCard ===
File: front-end/src/components/dashboards/orthodoxmetrics/AdminWelcomeCard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Avatar, Typography, Card, CardContent, Grid, Divider, Stack } from '@mui/material';
import { IconShield, IconTrendingUp } from '@tabler/icons-react';
import { useAuth } from '../../../context/AuthContext';
import welcomeImg from 'src/assets/images/backgrounds/welcome-bg2.png';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 73
Component exports: 1

=== Component Analysis: SystemNotifications ===
File: front-end/src/components/dashboards/orthodoxmetrics/SystemNotifications.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 109
Component exports: 1

=== Component Analysis: AuditLogFeed ===
File: front-end/src/components/dashboards/orthodoxmetrics/AuditLogFeed.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 130
Component exports: 1

=== Component Analysis: SacramentsStats ===
File: front-end/src/components/dashboards/orthodoxmetrics/SacramentsStats.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Card, CardContent, Typography, Box, Grid, Avatar } from '@mui/material';
import { IconDroplet, IconHeart, IconCross } from '@tabler/icons-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 75
Component exports: 1

=== Component Analysis: BaptismRecordsComponent ===
File: front-end/src/components/BaptismRecordsComponent.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import {
import {
import { useBaptismRecords, useDropdownOptions, useCertificateGeneration } from '../api/church-records.hooks';
import { usePermissions } from '../context/ChurchRecordsProvider';
import type { BaptismRecord, SearchFilters } from '../types/church-records.types';

--- PROPS/INTERFACES ---
interface BaptismRecordDialogProps {
  open: boolean;
  onClose: () => void;
  record: BaptismRecord | null;
  isEdit: boolean;
  onSave: (record: Partial<BaptismRecord>) => void;
  options: any;
  loading: boolean;
}

const BaptismRecordDialog: React.FC<BaptismRecordDialogProps> = ({

--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
  const [filters, setFilters] = useState<SearchFilters>({
  const [selectedRecord, setSelectedRecord] = useState<BaptismRecord | null>(null);
  const [isDialogOpen, setIsDialogOpen] = useState(false);
  const [isEditMode, setIsEditMode] = useState(false);
  const [formData, setFormData] = useState<Partial<BaptismRecord>>({
  React.useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 536
Component exports: 1

=== Component Analysis: AutoLearningOCR ===
File: front-end/src/components/ai/AutoLearningOCR.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { autoLearningAPI } from '../../services/autoLearningAPI';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [taskConfig, setTaskConfig] = useState<TaskConfig>({
    const [showStartDialog, setShowStartDialog] = useState(false);
    const [showResultsDialog, setShowResultsDialog] = useState(false);
    const [selectedTab, setSelectedTab] = useState(0);

--- API INTEGRATION ---
        queryFn: () => autoLearningAPI.getStatus().then(res => res.status),
        refetchInterval: 5000, // Refresh every 5 seconds
        queryFn: () => autoLearningAPI.getLearningRules(),
        mutationFn: (config: TaskConfig) => autoLearningAPI.startTask(config),
        mutationFn: () => autoLearningAPI.stopTask(),
        mutationFn: () => autoLearningAPI.resetTask(),

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 468
Component exports: 1

=== Component Analysis: AIAdminPanel ===
File: front-end/src/components/ai/AIAdminPanel.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useQuery } from '@tanstack/react-query';
import { aiService } from '../../services/aiService';
import AIContentGenerator from './AIContentGenerator';
import AIAnalyticsDashboard from './AIAnalyticsDashboard';
import AIOCRProcessor from './AIOCRProcessor';
import AITranslationAssistant from './AITranslationAssistant';
import AIDeploymentAutomation from './AIDeploymentAutomation';
import AILogAnalysis from './AILogAnalysis';
import AutoLearningOCR from './AutoLearningOCR';

--- PROPS/INTERFACES ---
interface AIServiceStatusProps {
    serviceName: string;
    status: 'online' | 'offline' | 'degraded';
    responseTime?: number;
    uptime?: number;
    icon: React.ReactNode;
}

const AIServiceStatus: React.FC<AIServiceStatusProps> = ({
    serviceName,
    status,
--
interface AIQuickStatsProps {
    title: string;
    value: string | number;
    change?: number;
    icon: React.ReactNode;
    color?: 'primary' | 'success' | 'warning' | 'error';
}

const AIQuickStats: React.FC<AIQuickStatsProps> = ({
    title,
    value,

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [activeTab, setActiveTab] = useState(0);

--- API INTEGRATION ---
        refetch: refetchHealth,
        refetchInterval: 30000, // 30 seconds
        refetch: refetchMetrics,
        refetchInterval: 60000, // 1 minute
                        <IconButton onClick={() => refetchHealth()}>

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 548
Component exports: 2

=== Component Analysis: AIAnalyticsDashboard ===
File: front-end/src/components/ai/AIAnalyticsDashboard.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useQuery, useMutation } from '@tanstack/react-query';
import { aiService, AIAnalyticsResponse } from '../../services/aiService';
import { Line, Bar, Doughnut } from 'react-chartjs-2';
import {

--- PROPS/INTERFACES ---
interface AIInsightCardProps {
    insight: {
        type: string;
        title: string;
        description: string;
        confidence: number;
        actionable: boolean;
        recommendations?: string[];
    };
}


--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [activeTab, setActiveTab] = useState(0);
    const [analysisType, setAnalysisType] = useState<'trends' | 'anomalies' | 'predictions' | 'insights'>('insights');

--- API INTEGRATION ---
        refetch,
        refetchInterval: 300000, // 5 minutes
                        <Button size="small" onClick={() => refetch()}>
                    <IconButton onClick={() => refetch()}>

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 430
Component exports: 6

=== Component Analysis: AIDeploymentAutomation ===
File: front-end/src/components/ai/AIDeploymentAutomation.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useMutation } from '@tanstack/react-query';
import { aiService } from '../../services/aiService';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [open, setOpen] = useState(false);
    const [activeTab, setActiveTab] = useState(0);
    const [request, setRequest] = useState<DeploymentRequest>({
    const [deploymentResult, setDeploymentResult] = useState<DeploymentResult | null>(null);

--- API INTEGRATION ---
            const response = await fetch('http://localhost:8001/api/admin/generate-deployment', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 428
Component exports: 2

=== Component Analysis: AILogAnalysis ===
File: front-end/src/components/ai/AILogAnalysis.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useMutation, useQuery } from '@tanstack/react-query';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [open, setOpen] = useState(false);
    const [activeTab, setActiveTab] = useState(0);
    const [selectedLogSource, setSelectedLogSource] = useState(logSources[0]);
    const [customLogData, setCustomLogData] = useState('');
    const [analysisResult, setAnalysisResult] = useState<LogAnalysisResult | null>(null);

--- API INTEGRATION ---
    // Mock function to fetch log data - in real implementation would fetch from server
    const fetchLogData = async (source: LogSourceConfig): Promise<string> => {
        // Simulate fetching log data
            const response = await fetch('http://localhost:8001/api/admin/analyze-logs', {
            const logData = await fetchLogData(selectedLogSource);
            console.error('Failed to fetch log data:', error);

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 521
Component exports: 5

=== Component Analysis: AITranslationAssistant ===
File: front-end/src/components/ai/AITranslationAssistant.tsx
Date: Wed Jul 30 12:59:59 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useMutation, useQuery } from '@tanstack/react-query';
import { aiService, AITranslationRequest, AITranslationResponse } from '../../services/aiService';

--- PROPS/INTERFACES ---
interface TranslationQualityDisplayProps {
    quality: {
        fluency: number;
        accuracy: number;
        cultural_appropriateness: number;
    };
}

const TranslationQualityDisplay: React.FC<TranslationQualityDisplayProps> = ({ quality }) => {
    const getQualityColor = (score: number) => {
        if (score >= 0.8) return 'success';

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [open, setOpen] = useState(false);
    const [request, setRequest] = useState<AITranslationRequest>({
    const [translationResult, setTranslationResult] = useState<AITranslationResponse | null>(null);
    const [showHistory, setShowHistory] = useState(false);
    const [translationHistory, setTranslationHistory] = useState<TranslationHistoryItem[]>([]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 466
Component exports: 2

=== Component Analysis: AIContentGenerator ===
File: front-end/src/components/ai/AIContentGenerator.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import { useMutation } from '@tanstack/react-query';
import { aiService, AIContentRequest, AIContentResponse } from '../../services/aiService';

--- PROPS/INTERFACES ---
interface AIContentGeneratorProps {
    onContentGenerated?: (content: string) => void;
    defaultContentType?: string;
    defaultContext?: string;
}

export const AIContentGenerator: React.FC<AIContentGeneratorProps> = ({
    onContentGenerated,
    defaultContentType = 'documentation',
    defaultContext = '',
}) => {

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [open, setOpen] = useState(false);
    const [request, setRequest] = useState<AIContentRequest>({
    const [generatedContent, setGeneratedContent] = useState<AIContentResponse | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 315
Component exports: 2

=== Component Analysis: AIOCRProcessor ===
File: front-end/src/components/ai/AIOCRProcessor.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useCallback } from 'react';
import {
import {
import { useDropzone } from 'react-dropzone';
import { useMutation } from '@tanstack/react-query';
import { aiService, AIOCRResponse } from '../../services/aiService';

--- PROPS/INTERFACES ---
interface OCRResultDisplayProps {
    result: AIOCRResponse;
    onCopy: () => void;
    onDownload: () => void;
}

const OCRResultDisplay: React.FC<OCRResultDisplayProps> = ({ result, onCopy, onDownload }) => {
    const [activeTab, setActiveTab] = useState(0);

    const tabLabels = ['Extracted Text', 'Structured Data', 'Analysis'];


--- STATE MANAGEMENT ---
import React, { useState, useCallback } from 'react';
    const [activeTab, setActiveTab] = useState(0);
    const [open, setOpen] = useState(false);
    const [file, setFile] = useState<File | null>(null);
    const [ocrResult, setOcrResult] = useState<AIOCRResponse | null>(null);
    const [settings, setSettings] = useState({

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 432
Component exports: 2

=== Component Analysis: JITTerminal ===
File: front-end/src/components/terminal/JITTerminal.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useEffect, useRef, useState, useCallback } from 'react';
import { 
import {
import { Terminal } from 'xterm';
import { FitAddon } from 'xterm-addon-fit';
import { WebLinksAddon } from 'xterm-addon-web-links';
import { SearchAddon } from 'xterm-addon-search';
import 'xterm/css/xterm.css';

--- PROPS/INTERFACES ---
interface JITTerminalProps {
  isOpen: boolean;
  onClose: () => void;
  sessionId?: string;
  user: {
    id: string;
    name: string;
    role: string;
  };
}


--- STATE MANAGEMENT ---
import React, { useEffect, useRef, useState, useCallback } from 'react';
  const [session, setSession] = useState<JITSession | null>(null);
  const [isConnecting, setIsConnecting] = useState(false);
  const [isConnected, setIsConnected] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [timeRemaining, setTimeRemaining] = useState<number>(0);
  const [commandLog, setCommandLog] = useState<string[]>([]);
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
      await fetch('/api/jit/end-session', {

--- ROUTING ---
import { WebLinksAddon } from 'xterm-addon-web-links';
    terminal.current.loadAddon(new WebLinksAddon());

--- METRICS ---
Lines of code: 557
Component exports: 2

=== Component Analysis: MultiSelectTreeView ===
File: front-end/src/components/muitrees/simpletree/MultiSelectTreeView.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import MultiSelectTreeViewCode from '../code/simpletreecode/MultiSelectTreeViewCode';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 37
Component exports: 1

=== Component Analysis: BasicCustomIcons ===
File: front-end/src/components/muitrees/simpletree/BasicCustomIcons.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box';
import AddBoxIcon from '@mui/icons-material/AddBox';
import IndeterminateCheckBoxIcon from '@mui/icons-material/IndeterminateCheckBox';
import SvgIcon from '@mui/material/SvgIcon';
import { styled } from '@mui/material/styles';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem, treeItemClasses } from '@mui/x-tree-view/TreeItem';
import ParentCard from 'src/components/shared/ParentCard';
import BasicCustomIconsCode from '../code/simpletreecode/BasicCustomIconsCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 71
Component exports: 1

=== Component Analysis: ControlledSelectiontree ===
File: front-end/src/components/muitrees/simpletree/ControlledSelectiontree.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import Button from '@mui/material/Button';
import ControlledSelectionCode from '../code/simpletreecode/ControlledSelectionCode';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [selectedItems, setSelectedItems] = React.useState<any>([]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 78
Component exports: 1

=== Component Analysis: BasicSimpleTreeView ===
File: front-end/src/components/muitrees/simpletree/BasicSimpleTreeView.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import Box from "@mui/material/Box";
import { SimpleTreeView } from "@mui/x-tree-view/SimpleTreeView";
import { TreeItem } from "@mui/x-tree-view/TreeItem";
import ParentCard from 'src/components/shared/ParentCard';
import BasicSimpleTreeViewCode from "../code/simpletreecode/BasicSimpleTreeViewCode";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: CheckboxSelection ===
File: front-end/src/components/muitrees/simpletree/CheckboxSelection.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import Box from '@mui/material/Box';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import CheckboxSelectionCode from '../code/simpletreecode/CheckboxSelectionCode';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 36
Component exports: 1

=== Component Analysis: ControlledExpansionTree ===
File: front-end/src/components/muitrees/simpletree/ControlledExpansionTree.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import ControlledExpansionTreeCode from '../code/simpletreecode/ControlledExpansionTreeCode';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [expandedItems, setExpandedItems] = React.useState<any>([]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 75
Component exports: 1

=== Component Analysis: CustomTreeItemView ===
File: front-end/src/components/muitrees/simpletree/CustomTreeItemView.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import { styled } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Avatar from '@mui/material/Avatar';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import ParentCard from 'src/components/shared/ParentCard';
import CustomTreeItemCode from '../code/simpletreecode/CustomTreeItemCode';

--- PROPS/INTERFACES ---
          <input type="checkbox" {...getCheckboxProps()} />
          <Box sx={{ flexGrow: 1, display: 'flex', gap: 1 }}>
            <Avatar
              sx={(theme) => ({
                background: theme.palette.primary.main,
                width: 24,
                height: 24,
                fontSize: '0.8rem',
              })}
            >
              {(label)[0]}

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 93
Component exports: 1

=== Component Analysis: ApiMethodSetItemExpansion ===
File: front-end/src/components/muitrees/simpletree/ApiMethodSetItemExpansion.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import * as React from 'react'
import Box from '@mui/material/Box'
import Stack from '@mui/material/Stack'
import Button from '@mui/material/Button'
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView'
import { TreeItem } from '@mui/x-tree-view/TreeItem'
import { useTreeViewApiRef } from '@mui/x-tree-view/hooks'
import ApiMethodSetItemExpansionCode from '../code/simpletreecode/ApiMethodSetItemExpansionCode'
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 64
Component exports: 1

=== Component Analysis: ApiMethodFocusItem ===
File: front-end/src/components/muitrees/simpletree/ApiMethodFocusItem.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import ParentCard from 'src/components/shared/ParentCard';
import ApiMethodFocusItemCode from '../code/simpletreecode/ApiMethodFocusItemCode';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 50
Component exports: 1

=== Component Analysis: TrackitemclicksTree ===
File: front-end/src/components/muitrees/simpletree/TrackitemclicksTree.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import Typography from '@mui/material/Typography';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import TrackitemclicksTreeCode from '../code/simpletreecode/TrackitemclicksTreeCode';
import ParentCard from 'src/components/shared/ParentCard';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [lastClickedItem, setLastClickedItem] = React.useState<any>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 47
Component exports: 1

=== Component Analysis: ApiMethodSetItemExpansionCode ===
File: front-end/src/components/muitrees/code/simpletreecode/ApiMethodSetItemExpansionCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import { useTreeViewApiRef } from '@mui/x-tree-view/hooks';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 78
Component exports: 2

=== Component Analysis: TrackitemclicksTreeCode ===
File: front-end/src/components/muitrees/code/simpletreecode/TrackitemclicksTreeCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import Typography from '@mui/material/Typography';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [lastClickedItem, setLastClickedItem] = React.useState<any>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 66
Component exports: 2

=== Component Analysis: BasicSimpleTreeViewCode ===
File: front-end/src/components/muitrees/code/simpletreecode/BasicSimpleTreeViewCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 56
Component exports: 2

=== Component Analysis: ApiMethodFocusItemCode ===
File: front-end/src/components/muitrees/code/simpletreecode/ApiMethodFocusItemCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 68
Component exports: 2

=== Component Analysis: CustomTreeItemCode ===
File: front-end/src/components/muitrees/code/simpletreecode/CustomTreeItemCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import { styled } from '@mui/material/styles';
import Box from '@mui/material/Box';
import Avatar from '@mui/material/Avatar';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';

--- PROPS/INTERFACES ---
             <input type="checkbox" {...getCheckboxProps()} />
             <Box sx={{ flexGrow: 1, display: 'flex', gap: 1 }}>
               <Avatar
                 sx={(theme) => ({
                   background: theme.palette.primary.main,
                   width: 24,
                   height: 24,
                   fontSize: '0.8rem',
                 })}
               >
                 {(label )[0]}

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 112
Component exports: 2

=== Component Analysis: ControlledSelectionCode ===
File: front-end/src/components/muitrees/code/simpletreecode/ControlledSelectionCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';
import Button from '@mui/material/Button';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [selectedItems, setSelectedItems] = React.useState<any>([]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 98
Component exports: 2

=== Component Analysis: CheckboxSelectionCode ===
File: front-end/src/components/muitrees/code/simpletreecode/CheckboxSelectionCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 54
Component exports: 2

=== Component Analysis: BasicCustomIconsCode ===
File: front-end/src/components/muitrees/code/simpletreecode/BasicCustomIconsCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import AddBoxIcon from '@mui/icons-material/AddBox';
import IndeterminateCheckBoxIcon from '@mui/icons-material/IndeterminateCheckBox';
import SvgIcon, { SvgIconOwnProps } from '@mui/material/SvgIcon';
import { styled } from '@mui/material/styles';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem, treeItemClasses } from '@mui/x-tree-view/TreeItem';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 89
Component exports: 2

=== Component Analysis: MultiSelectTreeViewCode ===
File: front-end/src/components/muitrees/code/simpletreecode/MultiSelectTreeViewCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 57
Component exports: 2

=== Component Analysis: ControlledExpansionTreeCode ===
File: front-end/src/components/muitrees/code/simpletreecode/ControlledExpansionTreeCode.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import CodeDialog from "src/components/shared/CodeDialog";
import * as React from 'react';
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';
import { TreeItem } from '@mui/x-tree-view/TreeItem';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
    const [expandedItems, setExpandedItems] = React.useState<any>([]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 93
Component exports: 2

=== Component Analysis: ParishMap ===
File: front-end/src/components/custom/ParishMap.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef, useMemo } from 'react';
import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';
import MarkerClusterGroup from 'react-leaflet-markercluster';
import 'leaflet/dist/leaflet.css';
import 'react-leaflet-markercluster/dist/styles.min.css';
import L from 'leaflet';
import { Disclosure, Transition } from '@headlessui/react';
import { ChevronUpIcon, XMarkIcon, FunnelIcon } from '@heroicons/react/24/outline';

--- PROPS/INTERFACES ---
interface ParishMapProps {
  dataSource?: string;
  iconOptions?: IconOptions;
  showFilters?: boolean;
  mapOptions?: MapOptions;
  clusterOptions?: ClusterOptions;
}

// Mock data for demonstration
const mockParishData: ParishGeoJSON = {
  type: "FeatureCollection",

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef, useMemo } from 'react';
  const [filters, setFilters] = useState<FilterState>({
  useEffect(() => {
  useEffect(() => {
  const [parishes, setParishes] = useState<ParishFeature[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
    // Endpoint to fetch parish GeoJSON data
 * @param {string} props.dataSource - URL to fetch GeoJSON parish data
    const fetchParishes = async () => {
        const response = await fetch(dataSource);
          throw new Error(`Failed to fetch parishes: ${response.status} ${response.statusText}`);
        console.error('Error fetching parish data:', err);
    fetchParishes();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 900
Component exports: 1

=== Component Analysis: AdvancedCard ===
File: front-end/src/components/custom/AdvancedCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { format } from 'date-fns';
import { useTheme } from '@mui/material/styles';

--- PROPS/INTERFACES ---
interface AdvancedCardProps {
  title: string;
  description?: string;
  tags?: string[];
  onAction?: () => void;
}

const AdvancedCard: React.FC<AdvancedCardProps> = ({
  title,
  description,
  tags = [],

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [lastClicked, setLastClicked] = useState<Date | null>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 68
Component exports: 1

=== Component Analysis: VRTSettingsPanel ===
File: front-end/src/components/VRTSettingsPanel.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { SnapshotConfig } from '../ai/visualTesting/snapshotEngine';
import { DiffConfig } from '../ai/visualTesting/diffAnalyzer';
import { ConfidenceConfig } from '../ai/visualTesting/confidenceAdjuster';
import { PlaywrightConfig } from '../ai/visualTesting/playwrightTests';
import { LearningConfig } from '../ai/learning/regressionFeedback';
import { checkVRTAccess, logVRTAction, vrtSecurity } from '../ai/vrt/vrtSecurity';

--- PROPS/INTERFACES ---
interface VRTSettingsPanelProps {
  isOpen: boolean;
  onClose: () => void;
}

interface VRTSettings {
  snapshot: SnapshotConfig;
  diff: DiffConfig;
  confidence: ConfidenceConfig;
  playwright: PlaywrightConfig;
  learning: LearningConfig;

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [successMessage, setSuccessMessage] = useState<string | null>(null);
  const [settings, setSettings] = useState<VRTSettings>({
  const [selectedTab, setSelectedTab] = useState(0);
  const [hasChanges, setHasChanges] = useState(false);
  const [saving, setSaving] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 1306
Component exports: 1

=== Component Analysis: KanbanBoard ===
File: front-end/src/components/KanbanBoard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { Droppable } from 'react-beautiful-dnd';
import KanbanColumn from './KanbanColumn';

--- PROPS/INTERFACES ---
interface KanbanBoardProps {
  board: Board;
  onAddTask: (columnId: number) => void;
  onRefresh: () => void;
}

const KanbanBoard: React.FC<KanbanBoardProps> = ({ board, onAddTask, onRefresh }) => {
  // Group tasks by column
  const tasksByColumn = (board.tasks || []).reduce((acc, task) => {
    if (!acc[task.column_id]) {
      acc[task.column_id] = [];

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 96
Component exports: 1

=== Component Analysis: ChurchSetupWizard ===
File: front-end/src/components/setup/ChurchSetupWizard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import { CheckCircle, Settings, Church, Template } from '@mui/icons-material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [activeStep, setActiveStep] = useState(0);
  const [loading, setLoading] = useState(false);
  const [churchData, setChurchData] = useState({

--- API INTEGRATION ---
      const response = await fetch('/api/admin/churches', {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 452
Component exports: 1

=== Component Analysis: TemplateSetupCompletion ===
File: front-end/src/components/setup/TemplateSetupCompletion.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import { Template, CheckCircle, Build, Visibility, Edit } from '@mui/icons-material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [loading, setLoading] = useState(false);
  const [setupStatus, setSetupStatus] = useState(null);
  const [templateOptions, setTemplateOptions] = useState({
  const [activeStep, setActiveStep] = useState(0);
  useEffect(() => {

--- API INTEGRATION ---
    fetchSetupStatus();
  const fetchSetupStatus = async () => {
      const response = await fetch(`/api/admin/churches/${churchId}/setup-status`, {
      console.error('Error fetching setup status:', error);
      const response = await fetch(`/api/admin/churches/${churchId}/complete-template-setup`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 396
Component exports: 1

=== Component Analysis: SiteEditorTest ===
File: front-end/src/components/SiteEditorTest.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { Box, Typography, Alert, Button } from '@mui/material';
import { useAuth } from '../context/AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 71
Component exports: 1

=== Component Analysis: ComponentInspector ===
File: front-end/src/components/ComponentInspector.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { Box, Typography, TextField, Button, Chip, Divider, Alert, CircularProgress, Accordion, AccordionSummary, AccordionDetails, List, ListItem, ListItemText, ListItemIcon, Switch, FormControlLabel } from '@mui/material';
import {
import { ComponentInfo } from '../hooks/useComponentRegistry';
import { editorBridge, FixResponse } from '../services/om-ai/editorBridge';
import { OMAIStatus } from '../services/om-ai/editorBridge';
import { autoFixEngine, AutoFixConfig } from '../ai/autoFixEngine';
import { DetectedIssue, IssueSeverity } from '../ai/errorClassifier';
import { FixRecord } from '../ai/fixLogger';
import GitOpsPanel from './GitOpsPanel';
import VisualRegressionDashboard from './VisualRegressionDashboard';
import ManualFixEditor from './ManualFixEditor';

--- PROPS/INTERFACES ---
interface ComponentInspectorProps {
  isOpen: boolean;
  component: ComponentInfo | null;
  onClose: () => void;
  onApplyChanges: () => void;
  onDiscardChanges: () => void;
  onToggleEditMode: () => void;
  onUpdateChanges: (changes: Record<string, any>) => void;
  isEditMode: boolean;
  pendingChanges: Record<string, any>;
  omaiStatus: OMAIStatus;

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [omaiResponse, setOmaiResponse] = useState<FixResponse | null>(null);
  const [isOmaiLoading, setIsOmaiLoading] = useState(false);
  const [editingProps, setEditingProps] = useState<Record<string, any>>({});
  const [detectedIssues, setDetectedIssues] = useState<DetectedIssue[]>([]);
  const [isAutoFixing, setIsAutoFixing] = useState(false);
  const [autoFixResult, setAutoFixResult] = useState<any>(null);
  const [fixHistory, setFixHistory] = useState<FixRecord[]>([]);
  const [autoFixConfig, setAutoFixConfig] = useState<AutoFixConfig>(autoFixEngine.getConfig());
  const [showAutoFixSettings, setShowAutoFixSettings] = useState(false);
  const [showGitOpsPanel, setShowGitOpsPanel] = useState(false);
  const [vrtDashboardOpen, setVrtDashboardOpen] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/editor/save-component', {
      const response = await fetch('/api/editor/rollback-component', {

--- ROUTING ---
      console.log('API Routes:', component.apiRoutes);
        {/* API Routes */}
        {component.apiRoutes && component.apiRoutes.length > 0 && (
              API Routes
              {component.apiRoutes.map((route, index) => (

--- METRICS ---
Lines of code: 983
Component exports: 1

=== Component Analysis: slider ===
File: front-end/src/components/ui/slider.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
interface SliderProps {
  value: number[];
  onValueChange: (value: number[]) => void;
  max: number;
  min: number;
  step: number;
  className?: string;
}

export const Slider: React.FC<SliderProps> = ({
  value,

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 40
Component exports: 1

=== Component Analysis: switch ===
File: front-end/src/components/ui/switch.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
interface SwitchProps {
  checked: boolean;
  onCheckedChange: (checked: boolean) => void;
  disabled?: boolean;
  className?: string;
}

export const Switch: React.FC<SwitchProps> = ({
  checked,
  onCheckedChange,
  disabled = false,

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 43
Component exports: 1

=== Component Analysis: SimpleOCRUploader ===
File: front-end/src/components/SimpleOCRUploader.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { toast } from 'react-toastify';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
    const [state, setState] = useState<OCRUploadState>({

--- API INTEGRATION ---
                const res = await fetch(endpoint, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 267
Component exports: 2

=== Component Analysis: ParishMap ===
File: front-end/src/components/bigbook/custom/ParishMap.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef, useMemo } from 'react';
import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';
import MarkerClusterGroup from 'react-leaflet-markercluster';
import 'leaflet/dist/leaflet.css';
import 'react-leaflet-markercluster/dist/styles.min.css';
import L from 'leaflet';
import { Disclosure, Transition } from '@headlessui/react';
import { ChevronUpIcon, XMarkIcon, FunnelIcon } from '@heroicons/react/24/outline';

--- PROPS/INTERFACES ---
interface ParishMapProps {
  dataSource?: string;
  iconOptions?: IconOptions;
  showFilters?: boolean;
  mapOptions?: MapOptions;
  clusterOptions?: ClusterOptions;
}

// Mock data for demonstration
const mockParishData: ParishGeoJSON = {
  type: "FeatureCollection",

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef, useMemo } from 'react';
  const [filters, setFilters] = useState<FilterState>({
  useEffect(() => {
  useEffect(() => {
  const [parishes, setParishes] = useState<ParishFeature[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
    // Endpoint to fetch parish GeoJSON data
 * @param {string} props.dataSource - URL to fetch GeoJSON parish data
    const fetchParishes = async () => {
        const response = await fetch(dataSource);
          throw new Error(`Failed to fetch parishes: ${response.status} ${response.statusText}`);
        console.error('Error fetching parish data:', err);
    fetchParishes();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 900
Component exports: 1

=== Component Analysis: api-routes-viewer ===
File: front-end/src/components/bigbook/custom/api-routes-viewer.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useMemo, useCallback } from 'react';
import { Search, Filter, Eye, Code, Database, Users, Globe, Download, Play, Brain, TestTube, BarChart3, Settings, FileText, ExternalLink, Terminal, Zap, Send, Copy, AlertTriangle, CheckCircle } from 'lucide-react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useMemo, useCallback } from 'react';
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedMethod, setSelectedMethod] = useState('ALL');
  const [selectedDomain, setSelectedDomain] = useState('ALL');
  const [selectedTags, setSelectedTags] = useState([]);
  const [selectedRoute, setSelectedRoute] = useState(null);
  const [expandedSections, setExpandedSections] = useState(new Set());
  const [viewMode, setViewMode] = useState('grouped'); // 'grouped', 'list', 'analytics'
  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);
  const [showApiTester, setShowApiTester] = useState(false);
  const [testRequest, setTestRequest] = useState({
  const [testResponse, setTestResponse] = useState(null);
  const [isTestingRoute, setIsTestingRoute] = useState(false);
  const [omaiAnalysis, setOmaiAnalysis] = useState(null);
  const [isLoadingOmai, setIsLoadingOmai] = useState(false);
  const [jitOutput, setJitOutput] = useState(null);
  const [isRunningJit, setIsRunningJit] = useState(false);

--- API INTEGRATION ---
      const response = await fetch('/api/omai/analyze-route', {
      const response = await fetch('/api/jit-terminal/run-route', {
      const response = await fetch(testUrl, requestConfig);
    let fetchCode = `// Test ${route.method} ${route.path}\n`;
    fetchCode += `const response = await fetch('${baseUrl}${route.path}', {\n`;
    fetchCode += `  method: '${route.method}',\n`;
    fetchCode += `  headers: {\n`;
    fetchCode += `    'Content-Type': 'application/json',\n`;
      fetchCode += `    'Authorization': 'Bearer YOUR_TOKEN_HERE',\n`;
    fetchCode += `  },\n`;
      fetchCode += `  body: JSON.stringify({\n`;
      fetchCode += `    // Add your request body here\n`;
      fetchCode += `  })\n`;
    fetchCode += `});\n`;
    fetchCode += `const data = await response.json();\n`;
    fetchCode += `console.log(data);`;
    return fetchCode;

--- ROUTING ---
import { Search, Filter, Eye, Code, Database, Users, Globe, Download, Play, Brain, TestTube, BarChart3, Settings, FileText, ExternalLink, Terminal, Zap, Send, Copy, AlertTriangle, CheckCircle } from 'lucide-react';
const getRoutesData = () => {
      totalRoutes: 691,
      unusedRoutes: 0,
      highUsageRoutes: 79
const ApiRoutesViewer = () => {
  const routesData = getRoutesData();
  const [selectedRoute, setSelectedRoute] = useState(null);
  const [isTestingRoute, setIsTestingRoute] = useState(false);
  const filteredRoutes = useMemo(() => {
  const groupedRoutes = useMemo(() => {
    filteredRoutes.forEach(route => {
  }, [filteredRoutes]);
  // 🔗 Component Preview Links - Map routes to frontend components
          '✅ Route definition is valid',
          { level: 'info', message: 'Route analysis started', timestamp: new Date().toISOString() },
  const testApiRoute = useCallback(async (route) => {
    setIsTestingRoute(true);
      setIsTestingRoute(false);
  const exportFilteredRoutes = useCallback((format) => {
    const data = filteredRoutes.map(route => ({
  }, [filteredRoutes]);
            <div className="text-gray-500">Total Routes</div>
            <div className="text-2xl font-bold text-blue-600">{metadata.totalRoutes || 0}</div>
            <div className="text-2xl font-bold text-orange-600">{metadata.highUsageRoutes || 0}</div>
            <div className="text-2xl font-bold text-indigo-600">{filteredRoutes.length}</div>
            <div className="text-gray-500">Unused Routes</div>
            <div className="text-2xl font-bold text-red-600">{metadata.unusedRoutes || 0}</div>
                <ExternalLink className="w-3 h-3" />
              Search Routes
                onClick={() => exportFilteredRoutes('json')}
                onClick={() => exportFilteredRoutes('csv')}
          {statistics.topRoutes && (
              <h3 className="text-lg font-semibold mb-4">Most Referenced Routes</h3>
                {statistics.topRoutes.slice(0, 10).map((route, idx) => (
      {/* Routes Display - Grouped View */}
          {Object.entries(groupedRoutes).map(([domain, methods]) => (
                      {domain === 'system' ? 'System Routes' : `${domain.toUpperCase()} API`}
                              setSelectedRoute(route);
      {/* Routes Display - List View */}
                {filteredRoutes.slice(0, 50).map((route, idx) => (
                          setSelectedRoute(route);
            {filteredRoutes.length > 50 && (
                Showing first 50 of {filteredRoutes.length} routes. Use filters to narrow results.
      {selectedRoute && (
                <h2 className="text-2xl font-bold text-gray-900">Route Inspector</h2>
                    onClick={() => setSelectedRoute(null)}
                {/* Route Header */}
                  <span className={`px-4 py-2 rounded text-sm font-bold border ${getMethodColor(selectedRoute.method)}`}>
                    {selectedRoute.method}
                    {selectedRoute.path}
                      {selectedRoute.references?.total || 0}
                      { id: 'components', label: 'Components', icon: ExternalLink },
                          {selectedRoute.description || 'No description available'}
                          {selectedRoute.file}
                          {selectedRoute.lineNumber && `:${selectedRoute.lineNumber}`}
                            {selectedRoute.references?.total || 0}
                            {selectedRoute.references?.frontend || 0}
                            {selectedRoute.references?.backend || 0}
                    {selectedRoute.middleware && selectedRoute.middleware.length > 0 && (
                          {selectedRoute.middleware.map((mw, idx) => (
                    {selectedRoute.tags && selectedRoute.tags.length > 0 && (
                          {selectedRoute.tags.map(tag => (
                      const mappings = getComponentMapping(selectedRoute);
                                <ExternalLink className="w-5 h-5 text-blue-500" />
                                onClick={() => window.open(`/sandbox/component-preview?component=${mapping.component}&route=${encodeURIComponent(selectedRoute.path)}`, '_blank')}
                          <ExternalLink className="w-12 h-12 mx-auto mb-4 text-gray-300" />
                      {['POST', 'PUT', 'PATCH'].includes(selectedRoute.method) && (
                        onClick={() => testApiRoute(selectedRoute)}
                        disabled={isTestingRoute}
                        <span>{isTestingRoute ? 'Testing...' : 'Send Request'}</span>
                          const curlCommand = `curl -X ${selectedRoute.method} "${window.location.origin}${selectedRoute.path}" \\
  ${['POST', 'PUT', 'PATCH'].includes(selectedRoute.method) && testRequest.body ? `-d '${testRequest.body}'` : ''}`;
                      <h3 className="text-lg font-semibold">AI Route Analysis</h3>
                        onClick={() => consultOMAI(selectedRoute)}
                        onClick={() => runInJitTerminal(selectedRoute)}
export default ApiRoutesViewer;

--- METRICS ---
Lines of code: 1330
Component exports: 5

=== Component Analysis: PermissionDebugger ===
File: front-end/src/components/debug/PermissionDebugger.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { useAuth } from '../../context/AuthContext';
import { Box, Typography, Paper, List, ListItem, ListItemText } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 51
Component exports: 1

=== Component Analysis: NotificationList ===
File: front-end/src/components/notifications/NotificationList.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNotifications, NotificationType } from '../../contexts/NotificationContext';
import { formatDistanceToNow } from 'date-fns';

--- PROPS/INTERFACES ---
interface TabPanelProps {
    children?: React.ReactNode;
    index: number;
    value: number;
}

const TabPanel: React.FC<TabPanelProps> = ({ children, value, index }) => (
    <div role="tabpanel" hidden={value !== index}>
        {value === index && <Box sx={{ pt: 2 }}>{children}</Box>}
    </div>
);

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [activeTab, setActiveTab] = useState(0);
    const [filteredNotifications, setFilteredNotifications] = useState<NotificationType[]>([]);
    const [searchTerm, setSearchTerm] = useState('');
    const [categoryFilter, setCategoryFilter] = useState('all');
    const [priorityFilter, setPriorityFilter] = useState('all');
    const [sortBy, setSortBy] = useState('newest');
    const [page, setPage] = useState(1);
    const [selectedNotifications, setSelectedNotifications] = useState<number[]>([]);
    const [showFilters, setShowFilters] = useState(false);
    const [bulkActionAnchor, setBulkActionAnchor] = useState<null | HTMLElement>(null);
    const [refreshing, setRefreshing] = useState(false);
    useEffect(() => {

--- API INTEGRATION ---
        fetchNotifications,
        await fetchNotifications();
            const response = await fetch(`/api/social/notifications/${notificationId}/action`, {
                await fetchNotifications();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 714
Component exports: 1

=== Component Analysis: NotificationPreferences ===
File: front-end/src/components/notifications/NotificationPreferences.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useNotifications, NotificationPreference } from '../../contexts/NotificationContext';
import { LoadingButton } from '@mui/lab';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [localPreferences, setLocalPreferences] = useState<NotificationPreference[]>([]);
    const [saving, setSaving] = useState(false);
    const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);
    const [hasChanges, setHasChanges] = useState(false);
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 403
Component exports: 1

=== Component Analysis: NotificationBell ===
File: front-end/src/components/notifications/NotificationBell.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import {
import { useNotifications, NotificationType } from '../../contexts/NotificationContext';
import { formatDistanceToNow } from 'date-fns';

--- PROPS/INTERFACES ---
interface NotificationDropdownProps {
    anchorEl: HTMLElement | null;
    open: boolean;
    onClose: () => void;
}

const NotificationDropdown: React.FC<NotificationDropdownProps> = ({ anchorEl, open, onClose }) => {
    const {
        notifications,
        loading,
        markAsRead,
--
interface NotificationBellProps {
    className?: string;
}

export const NotificationBell: React.FC<NotificationBellProps> = ({ className }) => {
    const { counts, hasUnreadNotifications } = useNotifications();
    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {
        setAnchorEl(event.currentTarget);
    };

--- STATE MANAGEMENT ---
    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
        fetchNotifications

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 372
Component exports: 2

=== Component Analysis: OrthodoxAvatars ===
File: front-end/src/components/avatars/OrthodoxAvatars.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 294
Component exports: 20

=== Component Analysis: OrthodoxAvatars_new ===
File: front-end/src/components/avatars/OrthodoxAvatars_new.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: ScreenshotCapture ===
File: front-end/src/components/dev/ScreenshotCapture.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import {
import {
import html2canvas from 'html2canvas';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [open, setOpen] = useState(false);
  const [taskId, setTaskId] = useState('');
  const [screenshotIndex, setScreenshotIndex] = useState('01');
  const [capturing, setCapturing] = useState(false);
  const [results, setResults] = useState<ScreenshotResult[]>([]);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 247
Component exports: 1

=== Component Analysis: DownloadCard ===
File: front-end/src/components/shared/DownloadCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { useTheme } from '@mui/material/styles';
import { Card, CardHeader, Tooltip, Divider, IconButton } from '@mui/material';
import { useContext } from 'react';
import { IconDownload } from '@tabler/icons-react';
import { CustomizerContext } from "src/context/CustomizerContext";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useContext } from 'react';
  const { isCardShadow } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 39
Component exports: 1

=== Component Analysis: AppCard ===
File: front-end/src/components/shared/AppCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { Card } from '@mui/material';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
type Props = {
  children: any | any[]
};

const AppCard = ({ children }: Props) => {

  const { isCardShadow } = useContext(CustomizerContext);

  return (
    <Card
      sx={{ display: 'flex', p: 0 }}

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isCardShadow } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: OrthodoxThemeToggle ===
File: front-end/src/components/shared/OrthodoxThemeToggle.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import {
import {
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
interface OrthodoxThemeToggleProps {
  showText?: boolean;
  variant?: 'icon' | 'switch' | 'menu';
  size?: 'small' | 'medium' | 'large';
}

const OrthodoxThemeToggle: React.FC<OrthodoxThemeToggleProps> = ({
  showText = false,
  variant = 'icon',
  size = 'medium'
}) => {

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  } = useContext(CustomizerContext);
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 313
Component exports: 1

=== Component Analysis: ChildCard ===
File: front-end/src/components/shared/ChildCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Card, CardHeader, CardContent, Divider } from '@mui/material';

--- PROPS/INTERFACES ---
type Props = {
  title?: string;
  children: any | any[];
  codeModel?: any | any[];
};

const ChildCard = ({ title, children, codeModel }: Props) => (
  <Card sx={{ padding: 0, borderColor: (theme: any) => theme.palette.divider }} variant="outlined">
    {title ? (
      <>
        <CardHeader title={title} action={codeModel} />

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 28
Component exports: 1

=== Component Analysis: DashboardWidgetCard ===
File: front-end/src/components/shared/DashboardWidgetCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { useTheme } from '@mui/material/styles';
import { Card, CardContent, Typography, Box, Stack } from '@mui/material';
import { IconGridDots } from '@tabler/icons-react';
import { CustomizerContext } from "src/context/CustomizerContext";

--- PROPS/INTERFACES ---
type Props = {
  title: string;
  subtitle: string;
  dataLabel1: string;
  dataItem1: string;
  dataLabel2: string;
  dataItem2: string;
  children: any;
};

const DashboardWidgetCard = ({

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isCardShadow } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 118
Component exports: 1

=== Component Analysis: BlankCard ===
File: front-end/src/components/shared/BlankCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { Card } from '@mui/material';
import React, { useContext } from 'react';
import { useTheme } from '@mui/material/styles';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
type Props = {
  className?: string;
  children: any | any[];
  sx?: any;
};

const BlankCard = ({ children, className, sx }: Props) => {

  const { isCardShadow } = useContext(CustomizerContext);
  const theme = useTheme();
  const borderColor = theme.palette.grey[200];

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isCardShadow } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 33
Component exports: 1

=== Component Analysis: ComingSoon ===
File: front-end/src/components/shared/ComingSoon.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';

--- PROPS/INTERFACES ---
interface ComingSoonProps {
  pageName?: string;
}

const ComingSoon: React.FC<ComingSoonProps> = ({ pageName = "This page" }) => {
  useEffect(() => {
    // Create floating particles
    const createParticles = () => {
      const particles = document.getElementById('particles');
      if (!particles) return;
      

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 341
Component exports: 1

=== Component Analysis: ScrollToTop ===
File: front-end/src/components/shared/ScrollToTop.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { useEffect, ReactElement } from 'react';
import { useLocation } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { useEffect, ReactElement } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useLocation } from 'react-router-dom';
  const { pathname } = useLocation();

--- METRICS ---
Lines of code: 16
Component exports: 1

=== Component Analysis: InlineItemCard ===
File: front-end/src/components/shared/InlineItemCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box } from '@mui/material';

--- PROPS/INTERFACES ---
type Props = {
  children: any | any[];
};

const InlineItemCard = ({ children }: Props) => (
  <Box
    sx={{
      display: {
        xs: 'flex',
        sm: 'inline-block',
      },

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 31
Component exports: 1

=== Component Analysis: DashboardCard ===
File: front-end/src/components/shared/DashboardCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { useTheme } from '@mui/material/styles';
import { Card, CardContent, Typography, Stack, Box } from '@mui/material';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
type Props = {
  title?: string;
  subtitle?: string;
  action?: any | any;
  footer?: any;
  cardheading?: string | any;
  headtitle?: string | any;
  headsubtitle?: string | any;
  children?: any;
  middlecontent?: string | any;
};

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isCardShadow } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 88
Component exports: 1

=== Component Analysis: ThreeColumn ===
File: front-end/src/components/shared/ThreeColumn.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState } from 'react';
import { Button, Box, Drawer, useMediaQuery, Paper, Theme } from '@mui/material';

--- PROPS/INTERFACES ---
type Props = {
  middleChild: any | string;
  leftChild: any | string;
  rightChild: any;
};

const ThreeColumn = ({ leftChild, middleChild, rightChild }: Props) => {
  const [isLeftSidebarOpen, setLeftSidebarOpen] = useState(false);
  const [isRightSidebarOpen, setRightSidebarOpen] = useState(false);
  const lgUp = useMediaQuery((theme: Theme) => theme.breakpoints.up('lg'));
  const mdUp = useMediaQuery((theme: Theme) => theme.breakpoints.up('md'));

--- STATE MANAGEMENT ---
import React, { useState } from 'react';
  const [isLeftSidebarOpen, setLeftSidebarOpen] = useState(false);
  const [isRightSidebarOpen, setRightSidebarOpen] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 89
Component exports: 1

=== Component Analysis: CodeDialog ===
File: front-end/src/components/shared/CodeDialog.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from "react";
import { IconCode, IconX } from "@tabler/icons-react";
import SyntaxHighlighter from "react-syntax-highlighter";
import { docco } from "react-syntax-highlighter/dist/esm/styles/hljs";
import Dialog from "@mui/material/Dialog";
import DialogContent from "@mui/material/DialogContent";
import DialogTitle from "@mui/material/DialogTitle";
import Tooltip from "@mui/material/Tooltip";
import IconButton from "@mui/material/IconButton";
import Box from "@mui/material/Box";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
  const [open, setOpen] = React.useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 62
Component exports: 1

=== Component Analysis: ParentCard ===
File: front-end/src/components/shared/ParentCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { useTheme } from '@mui/material/styles';
import { Card, CardHeader, CardContent, Divider, Box } from '@mui/material';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
type Props = {
  title: string;
  footer?: string | any;
  codeModel?: any | any[];
  children: any;
};

const ParentCard = ({ title, children, footer, codeModel }: Props) => {

  const theme = useTheme();
  const borderColor = theme.palette.divider;

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isCardShadow } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 43
Component exports: 1

=== Component Analysis: OrthodoxChurchIcon ===
File: front-end/src/components/shared/OrthodoxChurchIcon.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { SvgIcon, SvgIconProps } from '@mui/material';

--- PROPS/INTERFACES ---
interface OrthodoxChurchIconProps extends SvgIconProps {
    /** Whether the church is active/enabled - affects coloring */
    isActive?: boolean;
    /** Unique ID for gradients to avoid conflicts when multiple icons are on same page */
    uniqueId?: string | number;
}

const OrthodoxChurchIcon: React.FC<OrthodoxChurchIconProps> = ({
    isActive = true,
    uniqueId = 'default',
    ...props

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 91
Component exports: 1

=== Component Analysis: OrthodoxBanner ===
File: front-end/src/components/shared/OrthodoxBanner.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import { Box, Typography, Container } from '@mui/material';

--- PROPS/INTERFACES ---
interface OrthodoxBannerProps {
  title?: string;
  subtitle?: string;
  showGradient?: boolean;
  compact?: boolean;
  autoRotate?: boolean;
  initialLanguage?: string;
}
const OrthodoxBanner: React.FC<OrthodoxBannerProps> = ({
  title,
  subtitle,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [currentIndex, setCurrentIndex] = useState(
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 232
Component exports: 1

=== Component Analysis: BaseCard ===
File: front-end/src/components/shared/BaseCard.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useContext } from 'react';
import { Card, CardHeader, CardContent, Divider } from '@mui/material';
import { CustomizerContext } from 'src/context/CustomizerContext';

--- PROPS/INTERFACES ---
type Props = {
  title: string;
  children: any | any[];
};

const BaseCard = ({ title, children }: Props) => {
  const { isCardShadow } = useContext(CustomizerContext);


  return (
    <Card

--- STATE MANAGEMENT ---
import React, { useContext } from 'react';
  const { isCardShadow } = useContext(CustomizerContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 30
Component exports: 1

=== Component Analysis: ThemeCustomizer ===
File: front-end/src/components/Theme/ThemeCustomizer.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useTheme, ThemeConfig, ThemeName, THEME_CONFIGS } from '../../context/ThemeContext';

--- PROPS/INTERFACES ---
interface ThemeCustomizerProps {
  variant?: 'button' | 'menu' | 'full';
  showLabel?: boolean;
  size?: 'small' | 'medium' | 'large';
}

/**
 * Theme Color Preview Component
 */
const ThemeColorPreview: React.FC<{ themeConfig: ThemeConfig }> = ({ themeConfig }) => (
  <Box sx={{ display: 'flex', gap: 0.5, alignItems: 'center' }}>

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  const [showAdvanced, setShowAdvanced] = useState(false);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 470
Component exports: 1

=== Component Analysis: ThemedLayout ===
File: front-end/src/components/Theme/ThemedLayout.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { Box } from '@mui/material';
import { useTheme } from '../../context/ThemeContext';

--- PROPS/INTERFACES ---
interface ThemedLayoutProps {
  children: React.ReactNode;
  className?: string;
}

/**
 * ThemedLayout Component
 * Wraps content with appropriate theme classes and applies CSS custom properties
 */
export const ThemedLayout: React.FC<ThemedLayoutProps> = ({ 
  children, 

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 72
Component exports: 3

=== Component Analysis: AGGridViewOnly ===
File: front-end/src/components/AGGridViewOnly/AGGridViewOnly.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useMemo, useCallback, useState } from 'react';
import { AgGridReact } from 'ag-grid-react';
import { ColDef, CellClickedEvent, SelectionChangedEvent } from 'ag-grid-community';
import {
import {
import {
import { devLogStateChange } from '../../utils/devLogger';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-material.css';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useMemo, useCallback, useState } from 'react';
  const [selectedRows, setSelectedRows] = useState<ChurchRecord[]>([]);

--- API INTEGRATION ---
    const selected = event.api.getSelectedRows() as ChurchRecord[];

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 340
Component exports: 3

=== Component Analysis: AuthRedirect ===
File: front-end/src/components/auth/AuthRedirect.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useEffect } from 'react';
import { useAuth } from '../../context/AuthContext';
import { useNavigate } from 'react-router-dom';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useEffect } from 'react';
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
  const navigate = useNavigate();

--- METRICS ---
Lines of code: 24
Component exports: 1

=== Component Analysis: ProtectedRoute ===
File: front-end/src/components/auth/ProtectedRoute.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Navigate } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import { UserRole } from '../../types/orthodox-metrics.types';
import { Box, CircularProgress } from '@mui/material';

--- PROPS/INTERFACES ---
interface ProtectedRouteProps {
  children: React.ReactNode;
  requiredRole?: UserRole | UserRole[];
  requiredPermission?: string;
}

const ProtectedRoute: React.FC<ProtectedRouteProps> = ({
  children,
  requiredRole,
  requiredPermission,
}) => {

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
interface ProtectedRouteProps {
const ProtectedRoute: React.FC<ProtectedRouteProps> = ({
export default ProtectedRoute;

--- METRICS ---
Lines of code: 50
Component exports: 1

=== Component Analysis: TableControlPanel ===
File: front-end/src/components/TableControlPanel.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import {
import { 
import { TableTheme } from '../store/useTableStyleStore';

--- PROPS/INTERFACES ---
interface TableControlPanelProps {
  selectedElement: string;
  onElementSelect: (element: string) => void;
  tableTheme: TableTheme;
  onBorderStyleChange: (color: string, width: number, radius: number) => void;
}

const elementOptions = [
  { value: 'header', label: 'Header', icon: <ViewHeadline /> },
  { value: 'cell', label: 'Cell', icon: <CropDin /> },
  { value: 'row', label: 'Row', icon: <ViewColumn /> }

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 219
Component exports: 1

=== Component Analysis: ComponentRegistry ===
File: front-end/src/components/registry/ComponentRegistry.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { Suspense, lazy, useEffect, useState } from 'react';
import { CircularProgress, Box, Alert, Typography } from '@mui/material';
import { useNavigate } from 'react-router-dom';

--- PROPS/INTERFACES ---
interface AddonComponentProps {
  config: AddonConfig;
  [key: string]: any;
}

const AddonComponent: React.FC<AddonComponentProps> = ({ config, ...props }) => {
  const [Component, setComponent] = useState<React.ComponentType<any> | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {

--- STATE MANAGEMENT ---
import React, { Suspense, lazy, useEffect, useState } from 'react';
  const [Component, setComponent] = useState<React.ComponentType<any> | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {
  const [registry, setRegistry] = useState<AddonsRegistry | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {
      const [isValidRoute, setIsValidRoute] = useState<boolean | null>(null);
      useEffect(() => {

--- API INTEGRATION ---
        // Try fetching as a remote script if local import fails
        const response = await fetch(entry);
 * Hook to fetch and manage addons registry
  const fetchRegistry = async () => {
      const response = await fetch('/api/bigbook/addons', {
        throw new Error(`Failed to fetch addons registry: ${response.statusText}`);
    fetchRegistry();
    fetchRegistry();
      const response = await fetch('/api/bigbook/addons', {

--- ROUTING ---
import { useNavigate } from 'react-router-dom';
          this.buildRouteMap();
  private buildRouteMap(): void {
  public getAddonByRoute(route: string): AddonConfig | undefined {
  public hasRoute(route: string): boolean {
  public createAddonRoute(config: AddonConfig): React.ReactElement {
export const withAddonRoute = (route: string) => {
    const AddonRouteWrapper: React.FC<any> = (props) => {
      const navigate = useNavigate();
      const [isValidRoute, setIsValidRoute] = useState<boolean | null>(null);
        const checkRoute = async () => {
          const isValid = registry.hasRoute(route);
          setIsValidRoute(isValid);
        checkRoute();
      if (isValidRoute === null) {
      if (!isValidRoute) {
    AddonRouteWrapper.displayName = `withAddonRoute(${WrappedComponent.displayName || WrappedComponent.name})`;
    return AddonRouteWrapper;
 * Dynamic Addon Route Component
export const DynamicAddonRoute: React.FC<{ route: string }> = ({ route }) => {

--- METRICS ---
Lines of code: 450
Component exports: 8

=== Component Analysis: SocialPermissionsToggle ===
File: front-end/src/components/SocialPermissionsToggle.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect } from 'react';
import {
import {
import { useAuth } from '../context/AuthContext';

--- PROPS/INTERFACES ---
interface SocialPermissionsToggleProps {
    userId: number;
    userEmail: string;
    userRole: string;
    onPermissionsChanged?: () => void;
}

const SocialPermissionsToggle: React.FC<SocialPermissionsToggleProps> = ({
    userId,
    userEmail,
    userRole,

--- STATE MANAGEMENT ---
import React, { useState, useEffect } from 'react';
    const [loading, setLoading] = useState(false);
    const [permissions, setPermissions] = useState<SocialPermission[]>([]);
    const [socialEnabled, setSocialEnabled] = useState(false);
    const [error, setError] = useState<string>('');
    const [success, setSuccess] = useState<string>('');
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
            const response = await fetch(`/api/admin/social-permissions/user/${userId}`, {
            const response = await fetch(`/api/admin/social-permissions/user/${userId}`, {
            const response = await fetch(`/api/admin/social-permissions/user/${userId}/enable`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 351
Component exports: 1

=== Component Analysis: main ===
File: front-end/src/tools/main.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: ChurchSetupTool ===
File: front-end/src/tools/ChurchSetupTool.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: ReviewStep ===
File: front-end/src/tools/steps/ReviewStep.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: BasicInfoStep ===
File: front-end/src/tools/steps/BasicInfoStep.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: DatabaseStep ===
File: front-end/src/tools/steps/DatabaseStep.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: DeploymentStep ===
File: front-end/src/tools/steps/DeploymentStep.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: FilesGenerationStep ===
File: front-end/src/tools/steps/FilesGenerationStep.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: AuthStep ===
File: front-end/src/tools/steps/AuthStep.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: ConfigurationStep ===
File: front-end/src/tools/steps/ConfigurationStep.jsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
No imports found

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 0
Component exports: 0
0

=== Component Analysis: SiteStructureVisualizer ===
File: front-end/src/tools/SiteStructureVisualizer.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
import {
import {
import cytoscape from 'cytoscape';
import dagre from 'cytoscape-dagre';
import popper from 'cytoscape-popper';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { useState, useEffect, useRef, useCallback } from 'react';
    const [structure, setStructure] = useState<ProjectStructure | null>(null);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState<string | null>(null);
    const [searchTerm, setSearchTerm] = useState('');
    const [selectedTypes, setSelectedTypes] = useState<string[]>(['page', 'component', 'layout', 'route', 'api', 'hook']);
    const [selectedNode, setSelectedNode] = useState<FileNode | null>(null);
    const [showNodeDetails, setShowNodeDetails] = useState(false);
    const [activeTab, setActiveTab] = useState(0);
    const [layoutName, setLayoutName] = useState('dagre');
    const [showLabels, setShowLabels] = useState(true);
    const [groupByType, setGroupByType] = useState(false);
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
    Route,
    routeDefinitions: RouteDefinition[];
interface RouteDefinition {
                // Route relationships
            // Routes
            { path: '/src/routes/Router.tsx', type: 'route' },
            { path: '/src/routes/AuthRoutes.tsx', type: 'route' },
        if (path.includes('/routes/') || fileName.includes('Router')) return 'route';
            routes: [] as RouteDefinition[]
        route: <Route />,
                                            Routes ({selectedNode.routeDefinitions.length})

--- METRICS ---
Lines of code: 948
Component exports: 5

=== Component Analysis: churchData ===
File: front-end/src/api/churches/churchData.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { http, HttpResponse } from 'msw';
import { Church } from 'src/types/orthodox-metrics.types';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 382
Component exports: 2

=== Component Analysis: ContactsData ===
File: front-end/src/api/contacts/ContactsData.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';
import user3 from 'src/assets/images/profile/user-3.jpg';
import user4 from 'src/assets/images/profile/user-4.jpg';
import user5 from 'src/assets/images/profile/user-5.jpg';
import type { ContactType } from 'src/types/apps/contact';
import { Chance } from 'chance';
import { http, HttpResponse } from 'msw';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 549
Component exports: 2

=== Component Analysis: EmailData ===
File: front-end/src/api/email/EmailData.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import user1 from 'src/assets/images/profile/user-1.jpg';
import user2 from 'src/assets/images/profile/user-2.jpg';
import user3 from 'src/assets/images/profile/user-3.jpg';
import user4 from 'src/assets/images/profile/user-4.jpg';
import user5 from 'src/assets/images/profile/user-5.jpg';
import user6 from 'src/assets/images/profile/user-1.jpg';
import user7 from 'src/assets/images/profile/user-2.jpg';
import user8 from 'src/assets/images/profile/user-3.jpg';
import type { EmailType } from 'src/types/apps/email';
import adobe from 'src/assets/images/chat/icon-adobe.svg';
import chrome from 'src/assets/images/chat/icon-chrome.svg';
import figma from 'src/assets/images/chat/icon-figma.svg';
import java from 'src/assets/images/chat/icon-javascript.svg';
import zip from 'src/assets/images/chat/icon-zip-folder.svg';
import { sub } from 'date-fns';
import { http, HttpResponse } from 'msw';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 537
Component exports: 2

=== Component Analysis: invoceLists ===
File: front-end/src/api/invoice/invoceLists.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { http, HttpResponse } from 'msw';
import { InvoiceList } from 'src/types/apps/invoice';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 708
Component exports: 2

=== Component Analysis: KanbanData ===
File: front-end/src/api/kanban/KanbanData.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { TodoCategory } from '../../types/apps/kanban';
import img1 from '../../assets/images/kanban/kanban-img-1.jpg';
import img2 from '../../assets/images/kanban/kanban-img-2.jpg';
import img3 from '../../assets/images/kanban/kanban-img-3.jpg';
import img4 from '../../assets/images/kanban/kanban-img-4.jpg';
import { http, HttpResponse } from 'msw';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
  // Mock API endpoint to fetch TodoData

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 324
Component exports: 3

=== Component Analysis: test-grid ===
File: front-end/src/test-grid.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React from 'react';
import { Box, Grid, Container } from '@mui/material';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
No hooks found

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 19
Component exports: 1

=== Component Analysis: I18nContext ===
File: front-end/src/context/I18nContext.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';
import type { SupportedLanguage, TranslationKey, Translations } from '../types/orthodox-metrics.types';

--- PROPS/INTERFACES ---
interface I18nProviderProps {
  children: ReactNode;
  defaultLanguage?: SupportedLanguage;
}

// Available languages configuration
const AVAILABLE_LANGUAGES = [
  {
    code: 'en' as SupportedLanguage,
    name: 'English',
    nativeName: 'English',

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';
  const [language, setLanguageState] = useState<SupportedLanguage>(defaultLanguage);
  const [translations, setTranslations] = useState<Translations>({});
  const [isLoading, setIsLoading] = useState(true);
  useEffect(() => {
  const context = useContext(I18nContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 555
Component exports: 6

=== Component Analysis: AuthContext ===
File: front-end/src/context/AuthContext.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';
import AuthService from '../services/authService';
import type { User, UserRole } from '../types/orthodox-metrics.types';
import { 

--- PROPS/INTERFACES ---
interface AuthProviderProps {
  children: ReactNode;
}

export const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(false); // Start with false to render immediately
  const [error, setError] = useState<string | null>(null);

  // Initialize auth state from localStorage ONLY - no API calls
  useEffect(() => {

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(false); // Start with false to render immediately
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {
  const context = useContext(AuthContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 355
Component exports: 3

=== Component Analysis: index ===
File: front-end/src/context/ConatactContext/index.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { createContext, useState, useEffect, ReactNode } from 'react';
import { ContactType } from '../../types/apps/contact';
import React from "react";
import useSWR from 'swr';
import { deleteFetcher, getFetcher, postFetcher, putFetcher } from 'src/api/globalFetcher';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { createContext, useState, useEffect, ReactNode } from 'react';
  const [contacts, setContacts] = useState<ContactType[]>([]);
  const [starredContacts, setStarredContacts] = useState<number[]>([]);
  const [selectedContact, setSelectedContact] = useState<ContactType | null>(null);
  const [selectedDepartment, setSelectedDepartment] = useState<string>('All');
  const [searchTerm, setSearchTerm] = useState<string>('');
  const [openModal, setOpenModal] = useState<boolean>(false);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<any>(null);
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 165
Component exports: 3

=== Component Analysis: index ===
File: front-end/src/context/InvoiceContext/index.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useEffect, useState, useContext } from 'react';
import { InvoiceList } from '../../types/apps/invoice';
import { orthodoxMetricsAPI } from 'src/api/orthodox-metrics.api';
import type {

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { createContext, useEffect, useState, useContext } from 'react';
  const context = useContext(InvoiceContext);
  const [invoices, setInvoices] = useState<InvoiceList[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<Error | null>(null);
  const [totalCount, setTotalCount] = useState(0);
  const [currentPage, setCurrentPage] = useState(1);
  const [filters, setFilters] = useState<InvoiceFilters>({
  useEffect(() => {

--- API INTEGRATION ---
  fetchInvoices: () => Promise<void>;
  const fetchInvoices = async () => {
      const response: PaginatedResponse<Invoice> = await metricsAPI.invoices.getAll({
      console.error('Error fetching invoices:', err);
    fetchInvoices();
      const invoice = await metricsAPI.invoices.getById(id);
      console.error('Error fetching invoice:', err);
      const invoice = await metricsAPI.invoices.getByInvoiceNumber(invoiceNumber);
      console.error('Error fetching invoice by number:', err);
      const newInvoice = await metricsAPI.invoices.create(invoiceData);
      await fetchInvoices(); // Refresh the list
      const updatedInvoice = await metricsAPI.invoices.update(id, updates);
      await fetchInvoices(); // Refresh the list
      await metricsAPI.invoices.delete(id);
      await fetchInvoices(); // Refresh the list
      const updatedInvoice = await metricsAPI.invoices.markPaid(id, paidDate);
      await fetchInvoices(); // Refresh the list
      const pdfBlob = await metricsAPI.invoices.generatePDF(id);
      await metricsAPI.invoices.sendEmail(id, email);
      const exportBlob = await metricsAPI.invoices.export(filters, format);
    fetchInvoices,

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 242
Component exports: 10

=== Component Analysis: index ===
File: front-end/src/context/EmailContext/index.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useState, Dispatch, SetStateAction, useEffect } from 'react';
import { EmailType } from '../../types/apps/email';
import useSWR from 'swr';
import { deleteFetcher, getFetcher } from 'src/api/globalFetcher';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { createContext, useState, Dispatch, SetStateAction, useEffect } from 'react';
    const [emails, setEmails] = useState<EmailType[]>([]);
    const [selectedEmail, setSelectedEmail] = useState<EmailType | null>(null);
    const [filter, setFilter] = useState<string>('inbox');
    const [searchQuery, setSearchQuery] = useState<string>('');
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<any>(null);
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 112
Component exports: 2

=== Component Analysis: index ===
File: front-end/src/context/OCRContext/index.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { createContext, useState, useContext, useEffect } from 'react';
import React from "react";
import { useAuth } from '../AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { createContext, useState, useContext, useEffect } from 'react';
    const context = useContext(OCRContext);
    const [session, setSession] = useState<OCRSession | null>(null);
    const [files, setFiles] = useState<OCRFile[]>([]);
    const [config, setConfig] = useState<OCRUploadConfig | null>(null);
    const [languages, setLanguages] = useState<OCRLanguage[]>([]);
    const [disclaimers, setDisclaimers] = useState<OCRDisclaimer[]>([]);
    const [loading, setLoading] = useState<boolean>(false);
    const [error, setError] = useState<string | null>(null);
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
    // Data fetching
    fetchLanguages: () => Promise<void>;
    fetchDisclaimers: () => Promise<void>;
    fetchConfig: () => Promise<void>;
    fetchLanguages: async () => { },
    fetchDisclaimers: async () => { },
    fetchConfig: async () => { },
            fetchConfig();
            fetchLanguages();
            fetchDisclaimers();
            const response = await fetch('/api/ocr/secure/session', {
            const response = await fetch(`/api/ocr/secure/verify/${sessionId}`, {
            const response = await fetch('/api/ocr/secure/disclaimer', {
                const response = await fetch('/api/ocr-en', {
                const response = await fetch(`/api/ocr/secure/results/${jobId}`, {
            const response = await fetch(`/api/ocr/secure/download/${file.results.id}?format=${format}`, {
    const fetchConfig = async (): Promise<void> => {
            const response = await fetch('/api/ocr/secure/config', {
            console.error('Error fetching OCR config:', err);
    const fetchLanguages = async (): Promise<void> => {
            const response = await fetch('/api/ocr/secure/languages', {
            console.error('Error fetching languages:', err);
    const fetchDisclaimers = async (): Promise<void> => {
            const response = await fetch('/api/ocr/secure/disclaimers', {
            console.error('Error fetching disclaimers:', err);
                fetchLanguages,
                fetchDisclaimers,
                fetchConfig,

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 655
Component exports: 9

=== Component Analysis: index ===
File: front-end/src/context/NotesContext/index.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect } from 'react';
import type { NotesType } from '../../types/apps/note';
import { useAuth } from '../AuthContext';
import { ensureArray } from '../../utils/arrayUtils';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect } from 'react';
    const [notes, setNotes] = useState<NotesType[]>([]);
    const [categories, setCategories] = useState<any[]>([]);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);
    const [selectedNoteId, setSelectedNoteId] = useState<number | null>(null);
    const [filters, setFilters] = useState(initialContext.filters);
    useEffect(() => {

--- API INTEGRATION ---
    const fetchNotes = async () => {
            const response = await fetch(`/api/notes?${queryParams.toString()}`, {
                throw new Error(`Failed to fetch notes: ${response.status}`);
                setError(data.message || 'Failed to fetch notes');
            setError(err.message || 'Failed to fetch notes');
    const fetchCategories = async () => {
            const response = await fetch('/api/notes/categories', {
            console.error('Error fetching categories:', err);
            fetchNotes();
            fetchCategories();
            const response = await fetch('/api/notes', {
            const response = await fetch(`/api/notes/${id}`, {
            const response = await fetch(`/api/notes/${id}`, {
            const response = await fetch('/api/notes/bulk-delete', {
        await fetchNotes();
            const response = await fetch(`/api/notes/${id}/share`, {
                await fetchNotes();

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 389
Component exports: 2

=== Component Analysis: index ===
File: front-end/src/context/ChatContext/index.tsx
Date: Wed Jul 30 01:00:00 AM EDT 2025

--- IMPORTS ---
import { createContext, useState, useEffect, ReactNode, Dispatch, SetStateAction } from 'react';
import React from "react";
import useSWR from 'swr';
import { ChatsType, MessageType } from '../../types/apps/chat';
import { getFetcher, postFetcher } from 'src/api/globalFetcher';

--- PROPS/INTERFACES ---
export interface ChatContextProps {
    chatData: ChatsType[];
    chatContent: any[];
    chatSearch: string;
    selectedChat: ChatsType | null;
    loading: boolean;
    error: string;
    activeChatId: number | null;
    setChatContent: Dispatch<SetStateAction<any[]>>;
    setChatSearch: Dispatch<SetStateAction<string>>;
    setSelectedChat: Dispatch<SetStateAction<ChatsType | null>>;

--- STATE MANAGEMENT ---
import { createContext, useState, useEffect, ReactNode, Dispatch, SetStateAction } from 'react';
    const [chatData, setChatData] = useState<ChatsType[]>([]);
    const [chatContent, setChatContent] = useState<any[]>([]);
    const [chatSearch, setChatSearch] = useState<string>('');
    const [selectedChat, setSelectedChat] = useState<ChatsType | null>(null);
    const [activeChatId, setActiveChatId] = useState<number | null>(1);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string>('');
    useEffect(() => {

--- API INTEGRATION ---
            console.log("Failed to fetch the data")

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 107
Component exports: 3

=== Component Analysis: index ===
File: front-end/src/context/EcommerceContext/index.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import React from "react";
import { createContext, useState, useEffect } from 'react';
import { ProductType } from '../../types/apps/eCommerce';
import useSWR from 'swr';
import { deleteFetcher, getFetcher, postFetcher, putFetcher } from "src/api/globalFetcher";

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { createContext, useState, useEffect } from 'react';
    const [products, setProducts] = useState<ProductType[]>([]);
    const [searchProduct, setSearchProduct] = useState<string>('');
    const [selectedCategory, setSelectedCategory] = useState<string>('All');
    const [sortBy, setSortBy] = useState<string>('newest');
    const [priceRange, setPriceRange] = useState<string>('All');
    const [selectedGender, setSelectedGender] = useState<string>('All');
    const [selectedColor, setSelectedColor] = useState<string>('All');
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<any>(null);
    const [cartItems, setCartItems] = useState(() => {
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
    // Function to fetch a product by its ID

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 276
Component exports: 2

=== Component Analysis: index ===
File: front-end/src/context/UserDataContext/index.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import { createContext, useState, useEffect } from 'react';
import { PostType, profiledataType } from '../../types/apps/userProfile';
import React from "react";
import useSWR from 'swr';
import { getFetcher, postFetcher } from 'src/api/globalFetcher';
import { ensureArray } from '../../utils/arrayUtils';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { createContext, useState, useEffect } from 'react';
    const [posts, setPosts] = useState<PostType[]>(config.posts);
    const [users, setUsers] = useState<any[]>(config.users);
    const [gallery, setGallery] = useState<any[]>(config.gallery);
    const [followers, setFollowers] = useState<any[]>(config.followers);
    const [search, setSearch] = useState<string>(config.search);
    const [error, setError] = useState<any>(null);
    const [loading, setLoading] = useState<boolean>(config.loading);
    const [profileData] = useState<profiledataType>({
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 176
Component exports: 3

=== Component Analysis: ChurchRecordsProvider ===
File: front-end/src/context/ChurchRecordsProvider.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';
import { useAuth } from '../api/church-records.hooks';
import type { User } from '../types/church-records.types';
import { 

--- PROPS/INTERFACES ---
interface ChurchRecordsProviderProps {
  children: ReactNode;
}

export const ChurchRecordsProvider: React.FC<ChurchRecordsProviderProps> = ({ children }) => {
  const auth = useAuth();
  const [isInitialized, setIsInitialized] = useState(false);

  useEffect(() => {
    // Initialize authentication state on mount
    if (!auth.loading && !isInitialized) {

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';
  const [isInitialized, setIsInitialized] = useState(false);
  useEffect(() => {
  const context = useContext(ChurchRecordsContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 190
Component exports: 5

=== Component Analysis: index ===
File: front-end/src/context/TicketContext/index.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import { createContext, useState, useEffect } from 'react';
import { TicketType } from '../../types/apps/ticket';
import { getFetcher, deleteFetcher } from 'src/api/globalFetcher';
import useSWR from 'swr';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import { createContext, useState, useEffect } from 'react';
    const [tickets, setTickets] = useState<TicketType[]>([]);
    const [ticketSearch, setTicketSearch] = useState<string>('');
    const [filter, setFilter] = useState<string>('total_tickets');
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<any>(null);
    // Fetch tickets from the API when the component mounts using useEffect
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 74
Component exports: 3

=== Component Analysis: index ===
File: front-end/src/context/BlogContext/index.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import { createContext, useState, useEffect, ReactNode, Dispatch, SetStateAction } from 'react';
import { BlogPostType, BlogType } from '../../types/apps/blog';
import React from "react";
import useSWR from 'swr';
import { getFetcher } from 'src/api/globalFetcher';

--- PROPS/INTERFACES ---
export interface BlogContextProps {
    posts: BlogPostType[];
    sortBy: string;
    selectedPost: BlogPostType | null;
    isLoading: boolean;
    setPosts: Dispatch<SetStateAction<BlogPostType[]>>;
    setSortBy: Dispatch<SetStateAction<string>>;
    setSelectedPost: Dispatch<SetStateAction<BlogPostType | null>>;
    setLoading: Dispatch<SetStateAction<boolean>>;
    addComment: (postId: number, newComment: BlogType) => void;


--- STATE MANAGEMENT ---
import { createContext, useState, useEffect, ReactNode, Dispatch, SetStateAction } from 'react';
    const [posts, setPosts] = useState<BlogPostType[]>([]);
    const [sortBy, setSortBy] = useState<string>('newest');
    const [selectedPost, setSelectedPost] = useState<BlogPostType | null>(null);
    const [isLoading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<any>(null);
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 86
Component exports: 3

=== Component Analysis: RecordsContext ===
File: front-end/src/context/RecordsContext.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
import { useAuth } from './AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
  const context = useContext(RecordsContext);
  const [recordTypes, setRecordTypes] = useState<RecordType[]>([]);
  const [selectedChurch, setSelectedChurch] = useState<any>(null);
  const [availableChurches, setAvailableChurches] = useState<any[]>([]);
  const [filters, setFilters] = useState<RecordFilter>(defaultFilters);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  useEffect(() => {

--- API INTEGRATION ---
      const response = await fetch('/api/admin/churches?is_active=1', {
      const response = await fetch('/api/churches', {
      const response = await fetch(`/api/admin/church-database/${churchDbId}/record-counts`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 305
Component exports: 11

=== Component Analysis: index ===
File: front-end/src/context/kanbancontext/index.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useState, useEffect, ReactNode } from 'react';
import { useAuth } from '../AuthContext';

--- PROPS/INTERFACES ---
interface KanbanDataContextProps {
    children: ReactNode;
}

interface KanbanContextType {
    // New backend-integrated state
    boards: KanbanBoard[];
    currentBoard: KanbanBoard | null;
    loading: boolean;
    error: string | null;


--- STATE MANAGEMENT ---
import React, { createContext, useState, useEffect, ReactNode } from 'react';
    const [boards, setBoards] = useState<KanbanBoard[]>([]);
    const [currentBoard, setCurrentBoard] = useState<KanbanBoard | null>(null);
    const [loading, setLoading] = useState<boolean>(false);
    const [error, setError] = useState<string | null>(null);
    const [todoCategories, setTodoCategories] = useState<TodoCategory[]>([]);
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {
    useEffect(() => {

--- API INTEGRATION ---
    fetchBoards: () => Promise<void>;
    fetchBoard: (boardId: number) => Promise<void>;
    // Auto-fetch boards when user is authenticated
            console.log('User authenticated, fetching boards...');
            fetchBoards().catch(error => {
                console.error('Failed to fetch boards on authentication:', error);
    const fetchBoards = async () => {
            console.log('Not authenticated, skipping board fetch');
            console.log('Fetching boards from API...');
            const response = await fetch('/api/kanban/boards', {
                throw new Error(`Failed to fetch boards: ${response.status} ${response.statusText}`);
                throw new Error(data.message || 'Failed to fetch boards');
            console.error('Error in fetchBoards:', err);
            setError(err.message || 'Failed to fetch boards');
    const fetchBoard = async (boardId: number) => {
            const response = await fetch(`/api/kanban/boards/${boardId}`, {
                throw new Error(`Failed to fetch board: ${response.status}`);
                throw new Error(data.message || 'Failed to fetch board');
            setError(err.message || 'Failed to fetch board');
            const response = await fetch('/api/kanban/boards', {
                await fetchBoards(); // Refresh boards list
            const response = await fetch(`/api/kanban/boards/${boardId}`, {
                await fetchBoards(); // Refresh boards list
                    await fetchBoard(boardId); // Refresh current board if it's the one being updated
            const response = await fetch(`/api/kanban/boards/${boardId}`, {
                await fetchBoards(); // Refresh boards list
            const response = await fetch('/api/kanban/columns', {
                    await fetchBoard(boardId); // Refresh current board
            const response = await fetch(`/api/kanban/columns/${columnId}`, {
                await fetchBoard(currentBoard.id); // Refresh current board
            const response = await fetch(`/api/kanban/columns/${columnId}`, {
                await fetchBoard(currentBoard.id); // Refresh current board
            const response = await fetch('/api/kanban/tasks', {
                await fetchBoard(currentBoard.id); // Refresh current board
            const response = await fetch(`/api/kanban/tasks/${taskId}`, {
                await fetchBoard(currentBoard.id); // Refresh current board
            const response = await fetch(`/api/kanban/tasks/${taskId}`, {
                await fetchBoard(currentBoard.id); // Refresh current board
            const response = await fetch(`/api/kanban/tasks/${taskId}/move`, {
                await fetchBoard(currentBoard.id); // Refresh current board
            fetchBoards().then(() => {
                    fetchBoard(boards[0].id);
    // Auto-load first board when boards are fetched
            fetchBoard(boards[0].id);
                fetchBoards,
                fetchBoard,

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 604
Component exports: 7

=== Component Analysis: CustomizerContext ===
File: front-end/src/context/CustomizerContext.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import { createContext, useState, ReactNode, useEffect } from 'react';
import config from './config'
import React from "react";

--- PROPS/INTERFACES ---
interface CustomizerContextProps {
    children: ReactNode;
}

// Helper functions for localStorage
const getStoredValue = (key: string, defaultValue: any): any => {
    if (typeof window === 'undefined') return defaultValue;
    try {
        const stored = localStorage.getItem(`orthodoxmetrics-${key}`);
        return stored !== null ? JSON.parse(stored) : defaultValue;
    } catch (error) {

--- STATE MANAGEMENT ---
import { createContext, useState, ReactNode, useEffect } from 'react';
    const [activeDir, setActiveDirState] = useState<string>(() => 
    const [activeMode, setActiveModeState] = useState<string>(() => 
    const [activeTheme, setActiveThemeState] = useState<string>(() => 
    const [activeLayout, setActiveLayoutState] = useState<string>(() => 
    const [isCardShadow, setIsCardShadowState] = useState<boolean>(() => 
    const [isLayout, setIsLayoutState] = useState<string>(() => 
    const [isBorderRadius, setIsBorderRadiusState] = useState<number>(() => 
    const [isCollapse, setIsCollapseState] = useState<string>(() => 
    const [isLanguage, setIsLanguage] = useState<string>(config.isLanguage);
    const [isSidebarHover, setIsSidebarHover] = useState<boolean>(false);
    const [isMobileSidebar, setIsMobileSidebar] = useState<boolean>(false);
    useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 175
Component exports: 2

=== Component Analysis: ChurchRecordsContext ===
File: front-end/src/context/ChurchRecordsContext.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
import { useAuth } from './AuthContext';

--- PROPS/INTERFACES ---
No props interface found

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';
  const context = useContext(ChurchRecordsContext);
  const [records, setRecords] = useState<ChurchRecord[]>([]);
  const [availableParishes, setAvailableParishes] = useState<string[]>([]);
  const [availableClergy, setAvailableClergy] = useState<string[]>([]);
  const [filters, setFilters] = useState<RecordFilter>(defaultFilters);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [pagination, setPaginationState] = useState({
  useEffect(() => {
  const [hasLoadedOnce, setHasLoadedOnce] = useState(false);
  useEffect(() => {

--- API INTEGRATION ---
      const churchesResponse = await fetch('/api/admin/churches?is_active=1', {
        throw new Error('Failed to fetch churches');
      // Define the types to fetch
          const recordsResponse = await fetch(`${endpoint}?${params.toString()}`, {
          console.warn(`⚠️ Error fetching ${recordType} records:`, recordError);
      const response = await fetch('/api/records/export', {
      const response = await fetch(`/api/records/${recordId}/certificate`, {

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 513
Component exports: 9

=== Component Analysis: WebSocketContext ===
File: front-end/src/context/WebSocketContext.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useEffect, useState, useRef, useCallback } from 'react';
import { io, Socket } from 'socket.io-client';
import { useAuth } from './AuthContext';

--- PROPS/INTERFACES ---
interface WebSocketProviderProps {
  children: React.ReactNode;
}

export const WebSocketProvider: React.FC<WebSocketProviderProps> = ({ children }) => {
  const { user, isAuthenticated } = useAuth();
  const [socket, setSocket] = useState<Socket | null>(null);
  const [isConnected, setIsConnected] = useState(false);
  const [onlineUsers, setOnlineUsers] = useState<Set<number>>(new Set());
  
  // Store event listeners to clean them up

--- STATE MANAGEMENT ---
import React, { createContext, useContext, useEffect, useState, useRef, useCallback } from 'react';
  const context = useContext(WebSocketContext);
  const [socket, setSocket] = useState<Socket | null>(null);
  const [isConnected, setIsConnected] = useState(false);
  const [onlineUsers, setOnlineUsers] = useState<Set<number>>(new Set());
  useEffect(() => {
  useEffect(() => {

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 327
Component exports: 3

=== Component Analysis: ThemeContext ===
File: front-end/src/context/ThemeContext.tsx
Date: Wed Jul 30 01:00:01 AM EDT 2025

--- IMPORTS ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';

--- PROPS/INTERFACES ---
interface ThemeProviderProps {
  children: ReactNode;
  defaultTheme?: ThemeName;
}

// Get system dark mode preference
const getSystemDarkMode = (): boolean => {
  if (typeof window === 'undefined') return false;
  return window.matchMedia('(prefers-color-scheme: dark)').matches;
};


--- STATE MANAGEMENT ---
import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
  const [isSystemDarkMode, setIsSystemDarkMode] = useState(getSystemDarkMode());
  const [autoThemeEnabled, setAutoThemeEnabled] = useState(false);
  const [currentTheme, setCurrentThemeState] = useState<ThemeName>(() => {
  useEffect(() => {
  useEffect(() => {
  useEffect(() => {
  const context = useContext(ThemeContext);

--- API INTEGRATION ---
No API calls found

--- ROUTING ---
No routing found

--- METRICS ---
Lines of code: 429
Component exports: 6

