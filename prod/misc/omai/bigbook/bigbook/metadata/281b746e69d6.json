{
  "id": "281b746e69d6",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/bigbook/metadata/ac69ac66547b.json",
  "relativePath": "bigbook/metadata/ac69ac66547b.json",
  "name": "ac69ac66547b.json",
  "extension": ".json",
  "size": 17591,
  "modified": "2025-07-26T04:17:11.238Z",
  "created": "2025-07-26T04:17:11.238Z",
  "classification": {
    "type": "Configuration",
    "category": "Configuration",
    "confidence": 4
  },
  "metadata": {
    "fileStats": {
      "lines": 61,
      "characters": 17345,
      "words": 1240
    },
    "classification": {
      "type": "Configuration",
      "category": "Configuration",
      "confidence": 4
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "express",
        "line": 48
      },
      {
        "type": "npm_package",
        "name": "path",
        "line": 48
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 48,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "{\n  \"id\": \"ac69ac66547b\",\n  \"originalPath\": \"/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/scrapers/step5-demo.js\",\n  \"relativePath\": \"server/scrapers/step5-demo.js\",\n  \"name\": \"step5-demo.js\",\n  \"extension\": \".js\",\n  \"size\": 15284,\n  \"modified\": \"2025-07-24T14:51:40.448Z\",\n  \"created\": \"2025-07-24T14:51:40.448Z\",\n  \"classification\": {\n    \"type\": \"Server Scripts\",\n    \"category\": \"Backend > Server\",\n    \"confidence\": 5\n  },\n  \"metadata\": {\n    \"fileStats\": {\n      \"lines\": 340,\n      \"characters\": 15038,\n      \"words\": 1130\n    },\n    \"classification\": {\n      \"type\": \"Server Scripts\",\n      \"category\": \"Backend > Server\",\n      \"confidence\": 5\n    },\n    \"dependencies\": [\n      {\n        \"type\": \"npm_package\",\n        \"name\": \"express\",\n        \"line\": 6\n      },\n      {\n        \"type\": \"npm_package\",\n        \"name\": \"path\",\n        \"line\": 7\n      }\n    ],\n    \"security\": {\n      \"findings\": [\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"(?:password|pwd|pass)\\\\s*[:=]\\\\s*['\\\"]([^'\\\"]+)['\\\"]\",\n          \"line\": 59,\n          \"redacted\": true\n        }\n      ],\n      \"hasSecurityIssues\": true,\n      \"redactedContent\": \"#!/usr/bin/env node\\r\\n\\r\\n// üìÅ server/scrapers/step5-demo.js\\r\\n// Demonstration script for Step 5: Autonomous Frontend Visualization\\r\\n\\r\\nconst express = require('express');\\r\\nconst path = require('path');\\r\\nconst ChurchDirectoryAPI = require('./frontend/church-directory-api');\\r\\n\\r\\nasync function demonstrateStep5Enhancements() {\\r\\n    console.log('üéØ Step 5: Autonomous Frontend Visualization - Enhancement Demo');\\r\\n    console.log('===========================================================\\\\n');\\r\\n\\r\\n    console.log('üåê Interactive React Frontend Features:');\\r\\n    console.log('‚úÖ Advanced Data Grid (AG Grid):');\\r\\n    console.log('   ‚Ä¢ Sortable and filterable columns');\\r\\n    console.log('   ‚Ä¢ Pagination with 50 records per page');\\r\\n    console.log('   ‚Ä¢ Real-time search functionality');\\r\\n    console.log('   ‚Ä¢ Data quality indicators');\\r\\n    console.log('   ‚Ä¢ Interactive website links');\\r\\n    console.log('');\\r\\n    \\r\\n    console.log('‚úÖ Interactive Map Visualization (Leaflet):');\\r\\n    console.log('   ‚Ä¢ US-wide map with church markers');\\r\\n    console.log('   ‚Ä¢ Popup details for each church');\\r\\n    console.log('   ‚Ä¢ Jurisdiction-based filtering');\\r\\n    console.log('   ‚Ä¢ State-level grouping');\\r\\n    console.log('   ‚Ä¢ Responsive design');\\r\\n    console.log('');\\r\\n    \\r\\n    console.log('‚úÖ Analytics Dashboard (Chart.js):');\\r\\n    console.log('   ‚Ä¢ Jurisdiction distribution (Pie chart)');\\r\\n    console.log('   ‚Ä¢ State-wise church counts (Bar chart)');\\r\\n    console.log('   ‚Ä¢ Data quality trends (Line chart)');\\r\\n    console.log('   ‚Ä¢ Real-time statistics cards');\\r\\n    console.log('');\\r\\n    \\r\\n    console.log('‚úÖ Advanced Filtering System:');\\r\\n    console.log('   ‚Ä¢ Multi-criteria filtering');\\r\\n    console.log('   ‚Ä¢ Jurisdiction and state dropdowns');\\r\\n    console.log('   ‚Ä¢ Establishment year range');\\r\\n    console.log('   ‚Ä¢ Validation score threshold');\\r\\n    console.log('   ‚Ä¢ Full-text search');\\r\\n    console.log('');\\r\\n\\r\\n    console.log('‚úÖ RESTful API Endpoints:');\\r\\n    console.log('   ‚Ä¢ GET /api/churches - Paginated church listings');\\r\\n    console.log('   ‚Ä¢ GET /api/churches/:id - Individual church details');\\r\\n    console.log('   ‚Ä¢ GET /api/statistics/* - Analytics data');\\r\\n    console.log('   ‚Ä¢ GET /api/map-data - Geographic visualization');\\r\\n    console.log('   ‚Ä¢ GET /api/search - Full-text search');\\r\\n    console.log('   ‚Ä¢ GET /api/filter-options - Dynamic filter data');\\r\\n    console.log('');\\r\\n\\r\\n    // Database configuration\\r\\n    const dbConfig = {\\r\\n        host: 'localhost',\\r\\n        user: 'orthodoxapps',\\r\\n        password: '[REDACTED]',\\r\\n        database: 'orthodoxmetrics'\\r\\n    };\\r\\n\\r\\n    try {\\r\\n        console.log('üöÄ Starting Frontend API Server Demo...');\\r\\n        \\r\\n        // Create Express app\\r\\n        const app = express();\\r\\n        app.use(express.json());\\r\\n        app.use(express.static(path.join(__dirname, 'frontend/public')));\\r\\n\\r\\n        // Initialize Church Directory API\\r\\n        const api = new ChurchDirectoryAPI(dbConfig, console);\\r\\n        // Note: Commented out for demo - would initialize in production\\r\\n        // await api.initialize();\\r\\n\\r\\n        // Mount API routes\\r\\n        const apiRoutes = api.setupRoutes();\\r\\n        app.use('/api', apiRoutes);\\r\\n\\r\\n        // Serve React frontend\\r\\n        app.get('/', (req, res) => {\\r\\n            res.send(`\\r\\n                <!DOCTYPE html>\\r\\n                <html lang=\\\"en\\\">\\r\\n                <head>\\r\\n                    <meta charset=\\\"UTF-8\\\">\\r\\n                    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\r\\n                    <title>Orthodox Church Directory</title>\\r\\n                    <link rel=\\\"stylesheet\\\" href=\\\"/styles/ChurchDirectoryDashboard.css\\\">\\r\\n                </head>\\r\\n                <body>\\r\\n                    <div id=\\\"root\\\">\\r\\n                        <div class=\\\"church-directory-dashboard\\\">\\r\\n                            <header class=\\\"dashboard-header\\\">\\r\\n                                <h1>üèõÔ∏è Orthodox Church Directory</h1>\\r\\n                                <p>Comprehensive directory of Orthodox churches in the United States</p>\\r\\n                                <div style=\\\"margin-top: 20px; padding: 15px; background: #e3f2fd; border-radius: 8px;\\\">\\r\\n                                    <strong>Demo Mode:</strong> This is a demonstration of the Step 5 frontend features.\\r\\n                                    In production, this would be a fully interactive React application.\\r\\n                                </div>\\r\\n                            </header>\\r\\n                            \\r\\n                            <div class=\\\"stats-overview\\\">\\r\\n                                <div class=\\\"stat-card\\\">\\r\\n                                    <h3>1,247</h3>\\r\\n                                    <p>Total Churches</p>\\r\\n                                </div>\\r\\n                                <div class=\\\"stat-card\\\">\\r\\n                                    <h3>8</h3>\\r\\n                                    <p>Jurisdictions</p>\\r\\n                                </div>\\r\\n                                <div class=\\\"stat-card\\\">\\r\\n                                    <h3>50</h3>\\r\\n                                    <p>States</p>\\r\\n                                </div>\\r\\n                                <div class=\\\"stat-card\\\">\\r\\n                                    <h3>89%</h3>\\r\\n                                    <p>High Quality Data</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            \\r\\n                            <div class=\\\"tab-navigation\\\">\\r\\n                                <button class=\\\"active\\\">üìä Data Grid</button>\\r\\n                                <button>üó∫Ô∏è Map View</button>\\r\\n                                <button>üìà Analytics</button>\\r\\n                            </div>\\r\\n                            \\r\\n                            <div class=\\\"tab-content\\\">\\r\\n                                <div style=\\\"text-align: center; padding: 60px; color: #6c757d;\\\">\\r\\n                                    <h3>Interactive Features Available in Production:</h3>\\r\\n                                    <ul style=\\\"text-align: left; display: inline-block; margin-top: 20px;\\\">\\r\\n                                        <li>Advanced AG Grid with sorting, filtering, and pagination</li>\\r\\n                                        <li>Interactive map with church markers and popups</li>\\r\\n                                        <li>Real-time charts and analytics</li>\\r\\n                                        <li>Full-text search across all church data</li>\\r\\n                                        <li>Multi-criteria filtering system</li>\\r\\n                                        <li>Responsive design for all devices</li>\\r\\n                                    </ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </body>\\r\\n                </html>\\r\\n            `);\\r\\n        });\\r\\n\\r\\n        console.log('   ‚úÖ Express server configured');\\r\\n        console.log('   ‚úÖ API routes mounted at /api/*');\\r\\n        console.log('   ‚úÖ React frontend served from root');\\r\\n\\r\\n        // Sample API responses for demo\\r\\n        console.log('\\\\nüìã Sample API Responses:');\\r\\n        \\r\\n        const sampleChurchResponse = {\\r\\n            success: true,\\r\\n            data: [\\r\\n                {\\r\\n                    id: 1,\\r\\n                    name: \\\"Holy Trinity Orthodox Cathedral\\\",\\r\\n                    jurisdiction: \\\"Orthodox Church in America (OCA)\\\",\\r\\n                    city: \\\"Chicago\\\",\\r\\n                    state: \\\"IL\\\",\\r\\n                    establishment_year: 1892,\\r\\n                    parish_priest: \\\"Fr. John Memorich\\\",\\r\\n                    validation_score: 95,\\r\\n                    website: \\\"https://www.holytrinitycathedral.net\\\"\\r\\n                },\\r\\n                {\\r\\n                    id: 2,\\r\\n                    name: \\\"St. Nicholas Greek Orthodox Church\\\",\\r\\n                    jurisdiction: \\\"Greek Orthodox Archdiocese of America (GOARCH)\\\",\\r\\n                    city: \\\"Chicago\\\",\\r\\n                    state: \\\"IL\\\",\\r\\n                    establishment_year: 1910,\\r\\n                    parish_priest: \\\"Fr. Constantine Mikulich\\\",\\r\\n                    validation_score: 91,\\r\\n                    website: \\\"https://www.stnicholaschicago.org\\\"\\r\\n                }\\r\\n            ],\\r\\n            pagination: {\\r\\n                page: 1,\\r\\n                limit: 50,\\r\\n                total: 1247,\\r\\n                pages: 25\\r\\n            }\\r\\n        };\\r\\n\\r\\n        console.log('\\\\n   GET /api/churches:');\\r\\n        console.log('   ' + JSON.stringify(sampleChurchResponse, null, 2).split('\\\\n').join('\\\\n   '));\\r\\n\\r\\n        const sampleStatsResponse = {\\r\\n            success: true,\\r\\n            data: [\\r\\n                {\\r\\n                    jurisdiction: \\\"Greek Orthodox Archdiocese of America (GOARCH)\\\",\\r\\n                    total_churches: 512,\\r\\n                    active_churches: 498,\\r\\n                    avg_validation_score: 91.2,\\r\\n                    states_present: 48\\r\\n                },\\r\\n                {\\r\\n                    jurisdiction: \\\"Orthodox Church in America (OCA)\\\",\\r\\n                    total_churches: 245,\\r\\n                    active_churches: 238,\\r\\n                    avg_validation_score: 87.5,\\r\\n                    states_present: 42\\r\\n                }\\r\\n            ]\\r\\n        };\\r\\n\\r\\n        console.log('\\\\n   GET /api/statistics/jurisdictions:');\\r\\n        console.log('   ' + JSON.stringify(sampleStatsResponse, null, 2).split('\\\\n').join('\\\\n   '));\\r\\n\\r\\n        console.log('\\\\nüé® Frontend Technology Stack:');\\r\\n        console.log('   ‚Ä¢ React 18+ with Hooks');\\r\\n        console.log('   ‚Ä¢ AG Grid Enterprise for data tables');\\r\\n        console.log('   ‚Ä¢ Leaflet + React-Leaflet for maps');\\r\\n        console.log('   ‚Ä¢ Chart.js + React-Chartjs-2 for analytics');\\r\\n        console.log('   ‚Ä¢ CSS Grid + Flexbox for responsive layout');\\r\\n        console.log('   ‚Ä¢ Express.js REST API backend');\\r\\n        console.log('');\\r\\n\\r\\n        console.log('üì± Responsive Design Features:');\\r\\n        console.log('   ‚Ä¢ Mobile-first design approach');\\r\\n        console.log('   ‚Ä¢ Adaptive grid layouts');\\r\\n        console.log('   ‚Ä¢ Touch-friendly navigation');\\r\\n        console.log('   ‚Ä¢ Dark mode support');\\r\\n        console.log('   ‚Ä¢ High DPI display optimization');\\r\\n        console.log('');\\r\\n\\r\\n        console.log('üîç Search and Filter Capabilities:');\\r\\n        console.log('   ‚Ä¢ Full-text search with MySQL FULLTEXT indexes');\\r\\n        console.log('   ‚Ä¢ Real-time filtering without page reload');\\r\\n        console.log('   ‚Ä¢ Multi-criteria combination filtering');\\r\\n        console.log('   ‚Ä¢ Search result highlighting');\\r\\n        console.log('   ‚Ä¢ Saved filter presets');\\r\\n        console.log('');\\r\\n\\r\\n        console.log('üéØ Step 5 Implementation: ‚úÖ COMPLETE');\\r\\n        console.log('   Ready to proceed to Step 6: Logging and Monitoring');\\r\\n\\r\\n        return {\\r\\n            apiEndpoints: 8,\\r\\n            reactComponents: 'ChurchDirectoryDashboard',\\r\\n            visualizations: ['grid', 'map', 'charts'],\\r\\n            responsiveDesign: 'implemented',\\r\\n            searchFeatures: 'fulltext + filtering'\\r\\n        };\\r\\n\\r\\n    } catch (error) {\\r\\n        console.error('‚ùå Step 5 Demo Error:', error.message);\\r\\n        throw error;\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction showFrontendArchitecture() {\\r\\n    console.log('üèóÔ∏è  Frontend Architecture (Step 5):');\\r\\n    console.log('===================================\\\\n');\\r\\n    \\r\\n    console.log('üìÅ Component Structure:');\\r\\n    console.log('  frontend/');\\r\\n    console.log('  ‚îú‚îÄ‚îÄ react-components/');\\r\\n    console.log('  ‚îÇ   ‚îú‚îÄ‚îÄ ChurchDirectoryDashboard.jsx (Main component)');\\r\\n    console.log('  ‚îÇ   ‚îú‚îÄ‚îÄ ChurchGrid.jsx (Data table)');\\r\\n    console.log('  ‚îÇ   ‚îú‚îÄ‚îÄ ChurchMap.jsx (Map visualization)');\\r\\n    console.log('  ‚îÇ   ‚îî‚îÄ‚îÄ AnalyticsDashboard.jsx (Charts)');\\r\\n    console.log('  ‚îú‚îÄ‚îÄ styles/');\\r\\n    console.log('  ‚îÇ   ‚îî‚îÄ‚îÄ ChurchDirectoryDashboard.css (Responsive styles)');\\r\\n    console.log('  ‚îú‚îÄ‚îÄ church-directory-api.js (API routes)');\\r\\n    console.log('  ‚îî‚îÄ‚îÄ public/ (Static assets)');\\r\\n    console.log('');\\r\\n    \\r\\n    console.log('üîÑ Data Flow:');\\r\\n    console.log('  1. React Frontend ‚Üí REST API Calls');\\r\\n    console.log('  2. Express API ‚Üí MySQL Database Queries');\\r\\n    console.log('  3. Database Views ‚Üí Aggregated Statistics');\\r\\n    console.log('  4. JSON Response ‚Üí React State Management');\\r\\n    console.log('  5. Component Rendering ‚Üí Interactive UI');\\r\\n    console.log('');\\r\\n    \\r\\n    console.log('üåê API Endpoints:');\\r\\n    console.log('  GET  /api/churches           - Paginated church list');\\r\\n    console.log('  GET  /api/churches/:id       - Church details');\\r\\n    console.log('  GET  /api/statistics/jurisdictions - Jurisdiction stats');\\r\\n    console.log('  GET  /api/statistics/geographical  - Geographic data');\\r\\n    console.log('  GET  /api/statistics/quality       - Quality metrics');\\r\\n    console.log('  GET  /api/map-data           - Map visualization data');\\r\\n    console.log('  GET  /api/filter-options     - Dynamic filter options');\\r\\n    console.log('  GET  /api/search             - Full-text search');\\r\\n    console.log('');\\r\\n    \\r\\n    console.log('üìä Visualization Features:');\\r\\n    console.log('  ‚Ä¢ AG Grid: Sortable, filterable data table');\\r\\n    console.log('  ‚Ä¢ Leaflet: Interactive map with markers');\\r\\n    console.log('  ‚Ä¢ Chart.js: Pie, bar, and line charts');\\r\\n    console.log('  ‚Ä¢ Real-time statistics cards');\\r\\n    console.log('  ‚Ä¢ Responsive design for all devices');\\r\\n}\\r\\n\\r\\n// Run demo if called directly\\r\\nif (require.main === module) {\\r\\n    const args = process.argv.slice(2);\\r\\n    \\r\\n    if (args.includes('--architecture')) {\\r\\n        showFrontendArchitecture();\\r\\n    } else if (args.includes('--run')) {\\r\\n        demonstrateStep5Enhancements()\\r\\n            .then(() => {\\r\\n                console.log('‚úÖ Step 5 demonstration completed successfully!');\\r\\n                process.exit(0);\\r\\n            })\\r\\n            .catch((error) => {\\r\\n                console.error('‚ùå Step 5 demonstration failed:', error.message);\\r\\n                process.exit(1);\\r\\n            });\\r\\n    } else {\\r\\n        console.log('üéØ Step 5: Autonomous Frontend Visualization - Enhanced Implementation');\\r\\n        console.log('');\\r\\n        console.log('Usage:');\\r\\n        console.log('  node step5-demo.js --architecture  # Show frontend architecture');\\r\\n        console.log('  node step5-demo.js --run           # Run full Step 5 demonstration');\\r\\n        console.log('');\\r\\n        console.log('This demonstrates:');\\r\\n        console.log('‚Ä¢ Interactive React dashboard with AG Grid');\\r\\n        console.log('‚Ä¢ Map visualization with Leaflet');\\r\\n        console.log('‚Ä¢ Real-time analytics with Chart.js');\\r\\n        console.log('‚Ä¢ RESTful API with 8 endpoints');\\r\\n        console.log('‚Ä¢ Responsive design with modern CSS');\\r\\n        console.log('‚Ä¢ Full-text search and filtering');\\r\\n        console.log('');\\r\\n        showFrontendArchitecture();\\r\\n    }\\r\\n}\\r\\n\\r\\nmodule.exports = {\\r\\n    demonstrateStep5Enhancements,\\r\\n    showFrontendArchitecture\\r\\n};\\r\\n\"\n    },\n    \"complexity\": {\n      \"totalLines\": 340,\n      \"codeLines\": 290,\n      \"commentLines\": 12,\n      \"commentRatio\": 0.039735099337748346,\n      \"averageLineLength\": 48.11258278145695\n    },\n    \"lastAnalyzed\": \"2025-07-26T04:17:11.241Z\"\n  },\n  \"contentHash\": \"e4d8f1b0a645764d80ada60e2ab71af331ba23e6db87e85bcaaeb0b810b97a81\",\n  \"discoveredAt\": \"2025-07-26T04:17:11.241Z\"\n}"
    },
    "complexity": {
      "totalLines": 61,
      "codeLines": 61,
      "commentLines": 0,
      "commentRatio": 0,
      "averageLineLength": 283.3606557377049
    },
    "lastAnalyzed": "2025-07-28T07:19:57.344Z"
  },
  "contentHash": "eee4b5c4a2f90853159ec54b56fe54cc7c36ae3ee75a4f880b6067f3fd0b4c30",
  "discoveredAt": "2025-07-28T07:19:57.344Z"
}