{
  "id": "d291c3bce16b",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/bigbook/metadata/592d29071049.json",
  "relativePath": "bigbook/metadata/592d29071049.json",
  "name": "592d29071049.json",
  "extension": ".json",
  "size": 5556,
  "modified": "2025-07-26T04:17:11.766Z",
  "created": "2025-07-26T04:17:11.766Z",
  "classification": {
    "type": "Configuration",
    "category": "Configuration",
    "confidence": 4
  },
  "metadata": {
    "fileStats": {
      "lines": 97,
      "characters": 5528,
      "words": 426
    },
    "classification": {
      "type": "Configuration",
      "category": "Configuration",
      "confidence": 4
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "bcrypt",
        "line": 84
      },
      {
        "type": "npm_package",
        "name": "mysql2/promise",
        "line": 84
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 84,
          "redacted": true
        },
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 84,
          "redacted": true
        },
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 84,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "{\n  \"id\": \"592d29071049\",\n  \"originalPath\": \"/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/utils/create-test-user.js\",\n  \"relativePath\": \"server/utils/create-test-user.js\",\n  \"name\": \"create-test-user.js\",\n  \"extension\": \".js\",\n  \"size\": 2908,\n  \"modified\": \"2025-07-05T06:52:48.000Z\",\n  \"created\": \"2025-07-09T00:48:38.526Z\",\n  \"classification\": {\n    \"type\": \"Testing Scripts\",\n    \"category\": \"DevOps > Test\",\n    \"confidence\": 3\n  },\n  \"metadata\": {\n    \"fileStats\": {\n      \"lines\": 103,\n      \"characters\": 2880,\n      \"words\": 268\n    },\n    \"classification\": {\n      \"type\": \"Testing Scripts\",\n      \"category\": \"DevOps > Test\",\n      \"confidence\": 3\n    },\n    \"dependencies\": [\n      {\n        \"type\": \"npm_package\",\n        \"name\": \"bcrypt\",\n        \"line\": 5\n      },\n      {\n        \"type\": \"npm_package\",\n        \"name\": \"mysql2/promise\",\n        \"line\": 6\n      }\n    ],\n    \"security\": {\n      \"findings\": [\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"(?:password|pwd|pass)\\\\s*[:=]\\\\s*['\\\"]([^'\\\"]+)['\\\"]\",\n          \"line\": 29,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"(?:password|pwd|pass)\\\\s*[:=]\\\\s*['\\\"]([^'\\\"]+)['\\\"]\",\n          \"line\": 53,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"(?:password|pwd|pass)\\\\s*[:=]\\\\s*['\\\"]([^'\\\"]+)['\\\"]\",\n          \"line\": 76,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 10,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 11,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 12,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 13,\n          \"redacted\": true\n        }\n      ],\n      \"hasSecurityIssues\": true,\n      \"redactedContent\": \"/**\\r\\n * Create a test user for login testing\\r\\n */\\r\\n\\r\\nconst bcrypt = require('bcrypt');\\r\\nconst mysql = require('mysql2/promise');\\r\\n\\r\\n// Database configuration\\r\\nconst dbConfig = {\\r\\n  host: process.env.[REDACTED] || 'localhost',\\r\\n  user: process.env.[REDACTED] || 'orthodoxmetrics_user',\\r\\n  password: process.env.[REDACTED] || 'securepassword123',\\r\\n  database: process.env.[REDACTED] || 'orthodoxmetrics_db',\\r\\n  connectTimeout: 60000,\\r\\n  acquireTimeout: 60000,\\r\\n  timeout: 60000,\\r\\n};\\r\\n\\r\\nasync function createTestUser() {\\r\\n  let connection;\\r\\n  \\r\\n  try {\\r\\n    console.log('🔗 Connecting to database...');\\r\\n    connection = await mysql.createConnection(dbConfig);\\r\\n    \\r\\n    // Test user data\\r\\n    const testUser = {\\r\\n      email: 'admin@orthodoxmetrics.com',\\r\\n      password: '[REDACTED]',\\r\\n      first_name: 'Test',\\r\\n      last_name: 'Admin',\\r\\n      role: 'admin',\\r\\n      preferred_language: 'en',\\r\\n      is_active: true,\\r\\n      email_verified: true\\r\\n    };\\r\\n    \\r\\n    // Hash password\\r\\n    console.log('🔐 Hashing password...');\\r\\n    const saltRounds = 10;\\r\\n    const password_hash = await bcrypt.hash(testUser.password, saltRounds);\\r\\n    \\r\\n    // Check if user already exists\\r\\n    console.log('🔍 Checking if user exists...');\\r\\n    const [existingUsers] = await connection.execute(\\r\\n      'SELECT id FROM users WHERE email = ?',\\r\\n      [testUser.email]\\r\\n    );\\r\\n    \\r\\n    if (existingUsers.length > 0) {\\r\\n      console.log('✅ Test user already exists!');\\r\\n      console.log('📧 Email:', testUser.email);\\r\\n      console.log('🔑 Password:'[REDACTED]'👤 Creating test user...');\\r\\n    const [result] = await connection.execute(\\r\\n      `INSERT INTO users (email, password_hash, first_name, last_name, role, preferred_language, is_active, email_verified, created_at, updated_at) \\r\\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())`,\\r\\n      [\\r\\n        testUser.email,\\r\\n        password_hash,\\r\\n        testUser.first_name,\\r\\n        testUser.last_name,\\r\\n        testUser.role,\\r\\n        testUser.preferred_language,\\r\\n        testUser.is_active,\\r\\n        testUser.email_verified\\r\\n      ]\\r\\n    );\\r\\n    \\r\\n    console.log('✅ Test user created successfully!');\\r\\n    console.log('📧 Email:', testUser.email);\\r\\n    console.log('🔑 Password:'[REDACTED]'🆔 User ID:', result.insertId);\\r\\n    \\r\\n  } catch (error) {\\r\\n    console.error('❌ Error creating test user:', error);\\r\\n    throw error;\\r\\n  } finally {\\r\\n    if (connection) {\\r\\n      await connection.end();\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n// Run the script\\r\\nif (require.main === module) {\\r\\n  createTestUser()\\r\\n    .then(() => {\\r\\n      console.log('🎉 Test user setup complete!');\\r\\n      process.exit(0);\\r\\n    })\\r\\n    .catch((error) => {\\r\\n      console.error('💥 Script failed:', error);\\r\\n      process.exit(1);\\r\\n    });\\r\\n}\\r\\n\\r\\nmodule.exports = createTestUser;\\r\\n\"\n    },\n    \"complexity\": {\n      \"totalLines\": 103,\n      \"codeLines\": 80,\n      \"commentLines\": 9,\n      \"commentRatio\": 0.10112359550561797,\n      \"averageLineLength\": 30.730337078651687\n    },\n    \"lastAnalyzed\": \"2025-07-26T04:17:11.767Z\"\n  },\n  \"contentHash\": \"ba9343c25af92b4faaf7b83028f8c9c528c8b4e4cad6cb36914d0a39303cd9ec\",\n  \"discoveredAt\": \"2025-07-26T04:17:11.767Z\"\n}"
    },
    "complexity": {
      "totalLines": 97,
      "codeLines": 97,
      "commentLines": 0,
      "commentRatio": 0,
      "averageLineLength": 56
    },
    "lastAnalyzed": "2025-07-28T07:19:56.986Z"
  },
  "contentHash": "8cb84725334831dafa85f4e43845dfe723673575611a4cad5a46edebce995224",
  "discoveredAt": "2025-07-28T07:19:56.986Z"
}