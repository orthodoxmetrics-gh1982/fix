{
  "id": "6be341f7320e",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/scripts/7-26-25/setup-omai-database.sh",
  "relativePath": "scripts/7-26-25/setup-omai-database.sh",
  "name": "setup-omai-database.sh",
  "extension": ".sh",
  "size": 8993,
  "modified": "2025-07-24T23:00:47.833Z",
  "created": "2025-07-24T22:57:33.620Z",
  "classification": {
    "type": "Database Scripts",
    "category": "Backend > Database",
    "confidence": 3
  },
  "metadata": {
    "fileStats": {
      "lines": 340,
      "characters": 8941,
      "words": 1076
    },
    "classification": {
      "type": "Database Scripts",
      "category": "Backend > Database",
      "confidence": 3
    },
    "dependencies": [],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 40,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "#!/bin/bash\n\n# OrthodoxMetrics AI (OMAI) Database Setup Script\n# Creates and configures the dedicated OMAI database\n\nset -e\n\necho \"🤖 OrthodoxMetrics AI (OMAI) Database Setup\"\necho \"===========================================\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Function to print colored output\nprint_status() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}[SUCCESS]${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}[WARNING]${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"${RED}[ERROR]${NC} $1\"\n}\n\n# Configuration\nPROJECT_ROOT=\"$(pwd)\"\nSCHEMA_FILE=\"$PROJECT_ROOT/server/database/omai-schema.sql\"\nDB_NAME=\"omai_db\"\nDB_USER=\"omai_user\"\nDB_PASSWORD=\"[REDACTED]\"\n\n# Check if we're in the right directory\nif [ ! -f \"server/index.js\" ] || [ ! -f \"front-end/package.json\" ]; then\n    print_error \"Please run this script from the project root directory\"\n    exit 1\nfi\n\nprint_status \"Current directory: $PROJECT_ROOT\"\n\n# Step 1: Check if running as root\nif [[ $EUID -ne 0 ]]; then\n    print_error \"This script must be run as root (use sudo)\"\n    exit 1\nfi\n\n# Step 2: Check if schema file exists\nif [ ! -f \"$SCHEMA_FILE\" ]; then\n    print_error \"OMAI schema file not found: $SCHEMA_FILE\"\n    exit 1\nfi\n\nprint_success \"OMAI schema file found\"\n\n# Step 3: Check if MySQL is available\nif ! command -v mysql >/dev/null 2>&1; then\n    print_error \"MySQL client not found. Please install mysql-client\"\n    exit 1\nfi\n\nprint_success \"MySQL client found\"\n\n# Step 4: Create OMAI database and user\nprint_status \"Creating OMAI database and user...\"\n\n# Prompt for root password if needed\necho \"\"\nprint_warning \"You may need to enter the root password for MariaDB/MySQL\"\necho \"If you recently disabled socket authentication, you'll need the new password\"\necho \"\"\n\n# Create database and user\nmysql -u root -p << EOF\n-- Create OMAI database\nCREATE DATABASE IF NOT EXISTS $DB_NAME\nCHARACTER SET utf8mb4\nCOLLATE utf8mb4_unicode_ci;\n\n-- Create OMAI user\nCREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASSWORD';\n\n-- Grant permissions to OMAI user\nGRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';\n\n-- Grant additional permissions for cross-database operations\nGRANT SELECT ON orthodoxmetrics_db.* TO '$DB_USER'@'localhost';\n\n-- Flush privileges\nFLUSH PRIVILEGES;\n\n-- Show created database\nSHOW DATABASES LIKE '$DB_NAME';\nEOF\n\nprint_success \"OMAI database and user created\"\n\n# Step 5: Install database schema\nprint_status \"Installing OMAI database schema...\"\n\n# Install schema using the new user\nprint_status \"Installing schema with user: $DB_USER\"\nif mysql -u \"$DB_USER\" -p\"$DB_PASSWORD\" \"$DB_NAME\" < \"$SCHEMA_FILE\"; then\n    print_success \"OMAI database schema installed successfully\"\nelse\n    print_error \"Failed to install OMAI database schema\"\n    print_warning \"You may need to run the schema manually:\"\n    echo \"mysql -u $DB_USER -p$DB_PASSWORD $DB_NAME < $SCHEMA_FILE\"\n    exit 1\nfi\n\n# Step 6: Verify installation\nprint_status \"Verifying OMAI database installation...\"\n\nprint_status \"Running verification queries...\"\nmysql -u \"$DB_USER\" -p\"$DB_PASSWORD\" \"$DB_NAME\" -e \"\nSELECT \n    'Database Info' as info,\n    DATABASE() as database_name,\n    VERSION() as mysql_version;\n\nSELECT \n    'Tables Created' as info,\n    COUNT(*) as table_count\nFROM information_schema.tables \nWHERE table_schema = '$DB_NAME' \nAND table_name LIKE 'bigbook_%';\n\nSELECT \n    'Categories' as info,\n    COUNT(*) as count\nFROM bigbook_categories;\n\nSELECT \n    'Configuration' as info,\n    COUNT(*) as count\nFROM bigbook_config;\n\"\n\nprint_success \"OMAI database verification completed\"\n\n# Step 7: Create database configuration file\nprint_status \"Creating OMAI database configuration...\"\n\ncat > \"$PROJECT_ROOT/omai-database.conf\" << EOF\n# OrthodoxMetrics AI (OMAI) Database Configuration\n# Generated on $(date)\n\n# Database Connection\nDB_HOST=localhost\nDB_NAME=$DB_NAME\nDB_USER=$DB_USER\nDB_PASSWORD=$DB_PASSWORD\n\n# Connection Pool Settings\nDB_POOL_MIN=2\nDB_POOL_MAX=10\nDB_POOL_ACQUIRE=30000\nDB_POOL_IDLE=10000\n\n# Security Settings\nDB_SSL=false\nDB_SSL_VERIFY=false\n\n# Backup Settings\nBACKUP_ENABLED=true\nBACKUP_RETENTION_DAYS=30\nBACKUP_PATH=/var/backups/orthodoxmetrics/omai\n\n# Monitoring Settings\nMONITORING_ENABLED=true\nSLOW_QUERY_THRESHOLD=1000\nQUERY_LOG_ENABLED=false\nEOF\n\nchmod 600 \"$PROJECT_ROOT/omai-database.conf\"\nprint_success \"OMAI database configuration created: omai-database.conf\"\n\n# Step 8: Create management scripts\nprint_status \"Creating OMAI database management scripts...\"\n\n# Create OMAI database status script\ncat > \"/usr/local/bin/omai-db-status\" << 'EOF'\n#!/bin/bash\n# OMAI database status check\necho \"🤖 OrthodoxMetrics AI (OMAI) Database Status\"\necho \"===========================================\"\necho \"\"\n\n# Load configuration\nif [ -f \"/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/omai-database.conf\" ]; then\n    source \"/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/omai-database.conf\"\n    echo \"Database: $DB_NAME\"\n    echo \"User: $DB_USER\"\n    echo \"Host: $DB_HOST\"\nelse\n    echo \"Configuration file not found\"\n    exit 1\nfi\n\necho \"\"\necho \"Database Connection Test:\"\nif mysql -u \"$DB_USER\" -p\"$DB_PASSWORD\" \"$DB_NAME\" -e \"SELECT 1 as test;\" 2>/dev/null; then\n    echo \"✅ Database connection successful\"\nelse\n    echo \"❌ Database connection failed\"\n    exit 1\nfi\n\necho \"\"\necho \"Table Counts:\"\nmysql -u \"$DB_USER\" -p\"$DB_PASSWORD\" \"$DB_NAME\" -e \"\nSELECT \n    'bigbook_documents' as table_name,\n    COUNT(*) as count\nFROM bigbook_documents\nUNION ALL\nSELECT \n    'bigbook_executions' as table_name,\n    COUNT(*) as count\nFROM bigbook_executions\nUNION ALL\nSELECT \n    'bigbook_ai_patterns' as table_name,\n    COUNT(*) as count\nFROM bigbook_ai_patterns\nUNION ALL\nSELECT \n    'bigbook_recommendations' as table_name,\n    COUNT(*) as count\nFROM bigbook_ai_recommendations\nORDER BY table_name;\n\"\n\necho \"\"\necho \"Recent Activity:\"\nmysql -u \"$DB_USER\" -p\"$DB_PASSWORD\" \"$DB_NAME\" -e \"\nSELECT \n    'Recent Executions' as activity,\n    COUNT(*) as count\nFROM bigbook_executions \nWHERE executed_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR)\nUNION ALL\nSELECT \n    'Recent AI Interactions' as activity,\n    COUNT(*) as count\nFROM bigbook_ai_interactions \nWHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR);\n\"\nEOF\n\nchmod +x \"/usr/local/bin/omai-db-status\"\n\n# Create OMAI database backup script\ncat > \"/usr/local/bin/omai-db-backup\" << 'EOF'\n#!/bin/bash\n# OMAI database backup\nBACKUP_DIR=\"/var/backups/orthodoxmetrics/omai\"\nTIMESTAMP=$(date +%Y%m%d_%H%M%S)\n\n# Load configuration\nif [ -f \"/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/omai-database.conf\" ]; then\n    source \"/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/omai-database.conf\"\nelse\n    echo \"Configuration file not found\"\n    exit 1\nfi\n\nmkdir -p \"$BACKUP_DIR\"\n\n# Create backup\nmysqldump -u \"$DB_USER\" -p\"$DB_PASSWORD\" \"$DB_NAME\" > \"$BACKUP_DIR/omai_backup_$TIMESTAMP.sql\"\n\n# Compress backup\ngzip \"$BACKUP_DIR/omai_backup_$TIMESTAMP.sql\"\n\necho \"OMAI database backup created: omai_backup_$TIMESTAMP.sql.gz\"\necho \"Location: $BACKUP_DIR\"\n\n# Clean up old backups (keep last 30 days)\nfind \"$BACKUP_DIR\" -name \"omai_backup_*.sql.gz\" -mtime +30 -delete\nEOF\n\nchmod +x \"/usr/local/bin/omai-db-backup\"\n\nprint_success \"OMAI database management scripts created\"\n\n# Step 9: Create cron job for automated backups\nprint_status \"Setting up automated OMAI database backups...\"\n\n# Add to crontab (daily at 2:30 AM)\n(crontab -l 2>/dev/null; echo \"30 2 * * * /usr/local/bin/omai-db-backup\") | crontab -\n\nprint_success \"Automated backup cron job created (daily at 2:30 AM)\"\n\n# Step 10: Display summary\necho \"\"\necho \"===========================================\"\nprint_success \"OMAI Database Setup Complete!\"\necho \"===========================================\"\necho \"\"\nprint_status \"What was created:\"\necho \"✅ Database: $DB_NAME\"\necho \"✅ User: $DB_USER\"\necho \"✅ Schema: All bigbook_* tables\"\necho \"✅ Configuration: omai-database.conf\"\necho \"✅ Management Scripts: /usr/local/bin/omai-*\"\necho \"✅ Automated Backups: Daily at 2:30 AM\"\necho \"\"\nprint_status \"Database Details:\"\necho \"🗄️  Name: $DB_NAME\"\necho \"👤 User: $DB_USER\"\necho \"🔐 Password: $DB_PASSWORD\"\necho \"🌐 Host: localhost\"\necho \"📊 Tables: 15 bigbook_* tables\"\necho \"\"\nprint_status \"Quick Commands:\"\necho \"📊 Check status: omai-db-status\"\necho \"💾 Create backup: omai-db-backup\"\necho \"🔧 Connect: mysql -u $DB_USER -p$DB_PASSWORD $DB_NAME\"\necho \"\"\nprint_warning \"Security Notes:\"\necho \"🔒 Database password is stored in omai-database.conf\"\necho \"🔒 File permissions set to 600 (owner read/write only)\"\necho \"🔒 Consider changing default password in production\"\necho \"\"\nprint_status \"Integration:\"\necho \"🔗 Big Book system will use this database\"\necho \"🔗 Web interface configured to connect to omai_db\"\necho \"🔗 Backend routes updated to use new database\"\necho \"\"\nprint_success \"OMAI Database is ready! 🤖\" "
    },
    "complexity": {
      "totalLines": 340,
      "codeLines": 240,
      "commentLines": 39,
      "commentRatio": 0.13978494623655913,
      "averageLineLength": 30.831541218637994
    },
    "lastAnalyzed": "2025-07-28T07:19:59.040Z"
  },
  "contentHash": "d9b44e4d348c64365240d87f68742c96b4aea7ff9c29226349ca1dfc1a61eb61",
  "discoveredAt": "2025-07-28T07:19:59.040Z"
}