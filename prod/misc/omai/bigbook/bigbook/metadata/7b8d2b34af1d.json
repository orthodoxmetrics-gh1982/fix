{
  "id": "7b8d2b34af1d",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/legacy/phase0-fix-translation-columns.js",
  "relativePath": "server/legacy/phase0-fix-translation-columns.js",
  "name": "phase0-fix-translation-columns.js",
  "extension": ".js",
  "size": 4030,
  "modified": "2025-07-24T14:51:40.480Z",
  "created": "2025-07-24T14:51:40.480Z",
  "classification": {
    "type": "Troubleshooting Utilities",
    "category": "Diagnostic Tools",
    "confidence": 3
  },
  "metadata": {
    "fileStats": {
      "lines": 107,
      "characters": 3990,
      "words": 357
    },
    "classification": {
      "type": "Troubleshooting Utilities",
      "category": "Diagnostic Tools",
      "confidence": 3
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "mysql2/promise",
        "line": 11
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 16,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "/**\r\n * Phase 0: Fix Missing Translation Columns in OCR Jobs Table\r\n * \r\n * The OCR processing service is trying to update columns that don't exist:\r\n * - ocr_result_translation\r\n * - translation_confidence\r\n * \r\n * This script adds the missing columns to fix the schema mismatch.\r\n */\r\n\r\nconst mysql = require('mysql2/promise');\r\n\r\nconst DB_CONFIG = {\r\n    host: 'localhost',\r\n    user: 'orthodoxapps',\r\n    password: '[REDACTED]',\r\n    database: 'saints_peter_and_paul_orthodox_church_db'\r\n};\r\n\r\nasync function fixTranslationColumns() {\r\n    console.log('🔧 Phase 0: Fixing missing translation columns in OCR jobs table...');\r\n    \r\n    let connection;\r\n    try {\r\n        connection = await mysql.createConnection(DB_CONFIG);\r\n        console.log('✅ Connected to OCR database');\r\n\r\n        // Check current table structure\r\n        console.log('\\n📋 Checking current ocr_jobs table structure...');\r\n        const [columns] = await connection.execute(`\r\n            SHOW COLUMNS FROM ocr_jobs\r\n        `);\r\n        \r\n        const existingColumns = columns.map(col => col.Field);\r\n        console.log('📋 Existing columns:', existingColumns);\r\n\r\n        // Add missing translation columns\r\n        const columnsToAdd = [\r\n            {\r\n                name: 'ocr_result_translation',\r\n                definition: 'LONGTEXT NULL COMMENT \"Translated OCR result text\"'\r\n            },\r\n            {\r\n                name: 'translation_confidence',\r\n                definition: 'DECIMAL(3,2) NULL COMMENT \"Translation confidence score 0.00-1.00\"'\r\n            }\r\n        ];\r\n\r\n        for (const column of columnsToAdd) {\r\n            if (!existingColumns.includes(column.name)) {\r\n                console.log(`\\n➕ Adding missing column: ${column.name}`);\r\n                await connection.execute(`\r\n                    ALTER TABLE ocr_jobs \r\n                    ADD COLUMN ${column.name} ${column.definition}\r\n                `);\r\n                console.log(`✅ Added column: ${column.name}`);\r\n            } else {\r\n                console.log(`✅ Column already exists: ${column.name}`);\r\n            }\r\n        }\r\n\r\n        // Verify the fix by checking the table structure again\r\n        console.log('\\n📋 Verifying updated table structure...');\r\n        const [updatedColumns] = await connection.execute(`\r\n            SHOW COLUMNS FROM ocr_jobs\r\n        `);\r\n        \r\n        const finalColumns = updatedColumns.map(col => col.Field);\r\n        console.log('📋 Final columns:', finalColumns);\r\n\r\n        // Check if translation columns are now present\r\n        const hasTranslationColumn = finalColumns.includes('ocr_result_translation');\r\n        const hasConfidenceColumn = finalColumns.includes('translation_confidence');\r\n\r\n        if (hasTranslationColumn && hasConfidenceColumn) {\r\n            console.log('\\n🎉 SUCCESS: All translation columns are now present!');\r\n            console.log('✅ ocr_result_translation column: FOUND');\r\n            console.log('✅ translation_confidence column: FOUND');\r\n        } else {\r\n            console.log('\\n❌ ERROR: Some translation columns are still missing');\r\n            console.log('❌ ocr_result_translation:', hasTranslationColumn ? 'FOUND' : 'MISSING');\r\n            console.log('❌ translation_confidence:', hasConfidenceColumn ? 'FOUND' : 'MISSING');\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('❌ Error fixing translation columns:', error.message);\r\n        throw error;\r\n    } finally {\r\n        if (connection) {\r\n            await connection.end();\r\n            console.log('🔌 Database connection closed');\r\n        }\r\n    }\r\n}\r\n\r\n// Run the fix\r\nfixTranslationColumns()\r\n    .then(() => {\r\n        console.log('\\n🎯 Phase 0 Translation Fix Complete!');\r\n        console.log('📝 Next: Re-test OCR upload to verify the fix works');\r\n        process.exit(0);\r\n    })\r\n    .catch((error) => {\r\n        console.error('\\n💥 Phase 0 Translation Fix Failed:', error.message);\r\n        process.exit(1);\r\n    });\r\n"
    },
    "complexity": {
      "totalLines": 107,
      "codeLines": 78,
      "commentLines": 14,
      "commentRatio": 0.15217391304347827,
      "averageLineLength": 41.84782608695652
    },
    "lastAnalyzed": "2025-07-28T07:20:00.269Z"
  },
  "contentHash": "204f2c2a0ed8cb4a19e14fd102ec5d60a0f41826c9eb5178bbef052d8e825745",
  "discoveredAt": "2025-07-28T07:20:00.269Z"
}