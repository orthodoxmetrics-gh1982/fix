{
  "id": "0925c43c31f0",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/database/check-database-connection.js",
  "relativePath": "server/database/check-database-connection.js",
  "name": "check-database-connection.js",
  "extension": ".js",
  "size": 4754,
  "modified": "2025-07-24T14:51:40.496Z",
  "created": "2025-07-24T14:51:40.496Z",
  "classification": {
    "type": "Server Scripts",
    "category": "Backend > Server",
    "confidence": 3
  },
  "metadata": {
    "fileStats": {
      "lines": 123,
      "characters": 4718,
      "words": 372
    },
    "classification": {
      "type": "Server Scripts",
      "category": "Backend > Server",
      "confidence": 3
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "mysql2/promise",
        "line": 4
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 17,
          "redacted": true
        },
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 27,
          "redacted": true
        },
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 37,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "// üìÅ check-database-connection.js\r\n// Database connection diagnostic tool\r\n\r\nconst mysql = require('mysql2/promise');\r\n\r\nasync function checkDatabaseConnection() {\r\n    console.log('üîç Database Connection Diagnostic Tool');\r\n    console.log('‚ïê'.repeat(50));\r\n    \r\n    // Test different connection configurations\r\n    const configurations = [\r\n        {\r\n            name: 'Original Config',\r\n            config: {\r\n                host: 'localhost',\r\n                user: 'orthodoxapps',\r\n                password: '[REDACTED]',\r\n                database: 'orthodox_metrics',\r\n                port: 3306\r\n            }\r\n        },\r\n        {\r\n            name: 'Root Connection',\r\n            config: {\r\n                host: 'localhost',\r\n                user: 'root',\r\n                password: '[REDACTED]',\r\n                database: 'orthodox_metrics',\r\n                port: 3306\r\n            }\r\n        },\r\n        {\r\n            name: 'Root No Database',\r\n            config: {\r\n                host: 'localhost',\r\n                user: 'root',\r\n                password: '[REDACTED]',\r\n                port: 3306\r\n            }\r\n        }\r\n    ];\r\n\r\n    for (const { name, config } of configurations) {\r\n        console.log(`\\nüß™ Testing: ${name}`);\r\n        console.log('‚îÄ'.repeat(30));\r\n        \r\n        try {\r\n            const connection = await mysql.createConnection(config);\r\n            console.log('‚úÖ Connection successful!');\r\n            \r\n            // Test basic query\r\n            const [rows] = await connection.execute('SELECT 1 as test');\r\n            console.log('‚úÖ Query execution successful:', rows[0]);\r\n            \r\n            // Check if database exists\r\n            if (config.database) {\r\n                try {\r\n                    const [dbs] = await connection.execute(`SHOW DATABASES LIKE '${config.database}'`);\r\n                    if (dbs.length > 0) {\r\n                        console.log(`‚úÖ Database '${config.database}' exists`);\r\n                    } else {\r\n                        console.log(`‚ùå Database '${config.database}' does not exist`);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(`‚ùå Cannot check database: ${error.message}`);\r\n                }\r\n            }\r\n            \r\n            // Check user privileges\r\n            try {\r\n                const [privileges] = await connection.execute(`SHOW GRANTS FOR '${config.user}'@'localhost'`);\r\n                console.log('üìã User privileges:');\r\n                privileges.forEach((priv, index) => {\r\n                    console.log(`   ${index + 1}. ${Object.values(priv)[0]}`);\r\n                });\r\n            } catch (error) {\r\n                console.log(`‚ùå Cannot check privileges: ${error.message}`);\r\n            }\r\n            \r\n            await connection.end();\r\n            \r\n        } catch (error) {\r\n            console.log(`‚ùå Connection failed: ${error.message}`);\r\n            \r\n            // Provide specific suggestions based on error\r\n            if (error.message.includes('Access denied')) {\r\n                console.log('üí° Suggestions:');\r\n                console.log('   - Check username and password');\r\n                console.log('   - Verify user exists in MySQL');\r\n                console.log('   - Check user has proper privileges');\r\n            } else if (error.message.includes('ECONNREFUSED')) {\r\n                console.log('üí° Suggestions:');\r\n                console.log('   - Check if MySQL server is running');\r\n                console.log('   - Verify the port number (default: 3306)');\r\n                console.log('   - Check firewall settings');\r\n            }\r\n        }\r\n    }\r\n    \r\n    console.log('\\nüõ†Ô∏è  Database Setup Commands');\r\n    console.log('‚ïê'.repeat(50));\r\n    console.log('If you need to create the user and database, run these commands in MySQL:');\r\n    console.log('');\r\n    console.log('-- Connect as root first');\r\n    console.log('-- Then run:');\r\n    console.log('');\r\n    console.log('CREATE DATABASE IF NOT EXISTS orthodox_metrics;');\r\n    console.log('CREATE USER IF NOT EXISTS \\'orthodoxapps\\'@\\'localhost\\' IDENTIFIED BY \\'Summerof1982@!\\';');\r\n    console.log('GRANT ALL PRIVILEGES ON orthodox_metrics.* TO \\'orthodoxapps\\'@\\'localhost\\';');\r\n    console.log('FLUSH PRIVILEGES;');\r\n    console.log('');\r\n    console.log('-- Or if user exists but password is wrong:');\r\n    console.log('ALTER USER \\'orthodoxapps\\'@\\'localhost\\' IDENTIFIED BY \\'Summerof1982@!\\';');\r\n    console.log('FLUSH PRIVILEGES;');\r\n}\r\n\r\n// Run the diagnostic\r\nif (require.main === module) {\r\n    checkDatabaseConnection().catch(console.error);\r\n}\r\n\r\nmodule.exports = { checkDatabaseConnection };\r\n"
    },
    "complexity": {
      "totalLines": 123,
      "codeLines": 100,
      "commentLines": 8,
      "commentRatio": 0.07407407407407407,
      "averageLineLength": 41.611111111111114
    },
    "lastAnalyzed": "2025-07-28T07:19:59.589Z"
  },
  "contentHash": "407feaf1f53f39104f6415e5b5a02ae5f7a65bb0effa95cf969ffe39df176093",
  "discoveredAt": "2025-07-28T07:19:59.589Z"
}