{
  "id": "6cfed7c1d318",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/temp/generate_admin_hash.js",
  "relativePath": "server/temp/generate_admin_hash.js",
  "name": "generate_admin_hash.js",
  "extension": ".js",
  "size": 916,
  "modified": "2025-07-05T23:34:05.000Z",
  "created": "2025-07-09T00:48:35.106Z",
  "classification": {
    "type": "Server Scripts",
    "category": "Backend > Server",
    "confidence": 3
  },
  "metadata": {
    "fileStats": {
      "lines": 27,
      "characters": 916,
      "words": 90
    },
    "classification": {
      "type": "Server Scripts",
      "category": "Backend > Server",
      "confidence": 3
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "bcrypt",
        "line": 2
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 5,
          "redacted": true
        },
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 10,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "// Generate proper bcrypt hash for admin password\r\nconst bcrypt = require('bcrypt');\r\n\r\nasync function generateHash() {\r\n    const password = '[REDACTED]';\r\n    const saltRounds = 12;\r\n\r\n    try {\r\n        const hash = await bcrypt.hash(password, saltRounds);\r\n        console.log('Password:'[REDACTED]'Hash:', hash);\r\n\r\n        // Test the hash\r\n        const match = await bcrypt.compare(password, hash);\r\n        console.log('Hash verification:', match);\r\n\r\n        // Generate SQL\r\n        console.log('\\nSQL to create admin user:');\r\n        console.log(`INSERT INTO users (email, first_name, last_name, password_hash, role, is_active, landing_page, created_at, updated_at) VALUES ('admin@test.com', 'Admin', 'User', '${hash}', 'admin', TRUE, '/admin/users', NOW(), NOW());`);\r\n\r\n    } catch (error) {\r\n        console.error('Error generating hash:', error);\r\n    }\r\n}\r\n\r\ngenerateHash();\r\n"
    },
    "complexity": {
      "totalLines": 27,
      "codeLines": 17,
      "commentLines": 3,
      "commentRatio": 0.15,
      "averageLineLength": 44.2
    },
    "lastAnalyzed": "2025-07-28T07:20:01.155Z"
  },
  "contentHash": "ab753a08a3bf8d49311d31a5a4c1f8a7421ed7663a77774d18e3176191a9ab76",
  "discoveredAt": "2025-07-28T07:20:01.155Z"
}