{
  "version": "1.0.0",
  "updatedAt": "2025-07-26T05:21:45.460Z",
  "totalComponents": 363,
  "categories": [
    "navigation",
    "data",
    "display",
    "action"
  ],
  "components": [
    {
      "id": "ApiMethodFocusItem",
      "name": "Api Method Focus Item",
      "icon": "MousePointer",
      "category": "action",
      "description": "Api Method Focus Item component (action)",
      "tags": [
        "action",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muitrees/simpletree/ApiMethodFocusItem.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function ApiMethodFocusItem"
        ],
        "dependencies": [
          "@mui/material/Box",
          "@mui/material/Stack",
          "@mui/material/Button",
          "@mui/x-tree-view/SimpleTreeView",
          "@mui/x-tree-view/TreeItem",
          "@mui/x-tree-view/hooks/useTreeViewApiRef",
          "@mui/x-data-grid",
          "@mui/x-data-grid-pro",
          "@mui/x-data-grid-premium",
          "@mui/x-date-pickers",
          "@mui/x-date-pickers-pro",
          "@mui/x-charts",
          "@mui/x-tree-view"
        ],
        "size": 2386,
        "lines": 50
      }
    },
    {
      "id": "ApiMethodSetItemExpansion",
      "name": "Api Method Set Item Expansion",
      "icon": "MousePointer",
      "category": "action",
      "description": "Api Method Set Item Expansion component (action)",
      "tags": [
        "action",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muitrees/simpletree/ApiMethodSetItemExpansion.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function ApiMethodSetItemExpansion"
        ],
        "dependencies": [
          "@mui/material/Box",
          "@mui/material/Stack",
          "@mui/material/Button",
          "@mui/x-tree-view/SimpleTreeView",
          "@mui/x-tree-view/TreeItem",
          "@mui/x-tree-view/hooks",
          "@mui/x-data-grid",
          "@mui/x-data-grid-pro",
          "@mui/x-data-grid-premium",
          "@mui/x-date-pickers",
          "@mui/x-date-pickers-pro",
          "@mui/x-charts",
          "@mui/x-tree-view"
        ],
        "size": 2515,
        "lines": 65
      }
    },
    {
      "id": "FilterErrorBoundary",
      "name": "Filter Error Boundary",
      "icon": "MousePointer",
      "category": "action",
      "description": "Filter Error Boundary component (action)",
      "tags": [
        "action",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ErrorBoundary/FilterErrorBoundary.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 3172,
        "lines": 108
      }
    },
    {
      "id": "JITTerminalConsole",
      "name": "J I T Terminal Console",
      "icon": "MousePointer",
      "category": "action",
      "description": "J I T Terminal Console component (action) with React hooks",
      "tags": [
        "action",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/JITTerminalConsole.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 6806,
        "lines": 225
      }
    },
    {
      "id": "OcrScanPreviewDemo",
      "name": "Ocr Scan Preview Demo",
      "icon": "MousePointer",
      "category": "action",
      "description": "Ocr Scan Preview Demo component (action) with React hooks",
      "tags": [
        "action",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/demo/OcrScanPreviewDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 5533,
        "lines": 135
      }
    },
    {
      "id": "PluginResultsPanel",
      "name": "Plugin Results Panel",
      "icon": "MousePointer",
      "category": "action",
      "description": "Plugin Results Panel component (action) - 2 props",
      "tags": [
        "action",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "pluginResults",
          "optional": true,
          "type": "PluginResult[]",
          "description": ""
        },
        {
          "name": "generatedDocPath",
          "optional": true,
          "type": "string | null",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "pages/omb/PluginResultsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material/ExpandMore",
          "@mui/icons-material/CheckCircle",
          "@mui/icons-material/Error",
          "@mui/icons-material/Warning",
          "@mui/icons-material/Info"
        ],
        "size": 4361,
        "lines": 135
      }
    },
    {
      "id": "RecordGenerator",
      "name": "Record Generator",
      "icon": "MousePointer",
      "category": "action",
      "description": "Record Generator component (action) with React hooks",
      "tags": [
        "action",
        "hooks",
        "jsx",
        "default-export"
      ],
      "props": [],
      "configurable": false,
      "path": "components/RecordGenerator.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 15361,
        "lines": 362
      }
    },
    {
      "id": "RecordWorkflowExample",
      "name": "Record Workflow Example",
      "icon": "MousePointer",
      "category": "action",
      "description": "Record Workflow Example component (action) with React hooks",
      "tags": [
        "action",
        "hooks",
        "jsx",
        "default-export"
      ],
      "props": [],
      "configurable": false,
      "path": "examples/RecordWorkflowExample.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 11662,
        "lines": 286
      }
    },
    {
      "id": "RetryButton",
      "name": "Retry Button",
      "icon": "Button",
      "category": "action",
      "description": "Retry Button component (action) with React hooks - 6 props",
      "tags": [
        "action",
        "hooks",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "onRetry",
          "optional": false,
          "type": "() => Promise<void>",
          "description": ""
        },
        {
          "name": "maxRetries",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "disabled",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "size",
          "optional": true,
          "type": "'sm' | 'default' | 'lg'",
          "description": ""
        },
        {
          "name": "variant",
          "optional": true,
          "type": "'default' | 'outline' | 'ghost'",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/RetryButton.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 3205,
        "lines": 112
      }
    },
    {
      "id": "SiteEditorErrorBoundary",
      "name": "Site Editor Error Boundary",
      "icon": "MousePointer",
      "category": "action",
      "description": "Site Editor Error Boundary component (action)",
      "tags": [
        "action",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/SiteEditorErrorBoundary.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 3109,
        "lines": 98
      }
    },
    {
      "id": "SiteEditorErrorBoundaryWrapper",
      "name": "Site Editor Error Boundary Wrapper",
      "icon": "MousePointer",
      "category": "action",
      "description": "Site Editor Error Boundary Wrapper component (action)",
      "tags": [
        "action",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/SiteEditorErrorBoundary.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 3109,
        "lines": 98
      }
    },
    {
      "id": "SiteEditorTest",
      "name": "Site Editor Test",
      "icon": "MousePointer",
      "category": "action",
      "description": "Site Editor Test component (action) with React hooks",
      "tags": [
        "action",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/SiteEditorTest.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 2565,
        "lines": 72
      }
    },
    {
      "id": "Switch",
      "name": "Switch",
      "icon": "MousePointer",
      "category": "action",
      "description": "Switch component (action) - 4 props",
      "tags": [
        "action",
        "jsx",
        "configurable",
        "ui"
      ],
      "props": [
        {
          "name": "checked",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onCheckedChange",
          "optional": false,
          "type": "(checked: boolean) => void",
          "description": ""
        },
        {
          "name": "disabled",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ui/switch.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 1222,
        "lines": 44
      }
    },
    {
      "id": "Unauthorized",
      "name": "Unauthorized",
      "icon": "MousePointer",
      "category": "action",
      "description": "Unauthorized component (action)",
      "tags": [
        "action",
        "jsx",
        "default-export",
        "dependencies",
        "auth"
      ],
      "props": [],
      "configurable": false,
      "path": "views/authentication/Unauthorized.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 1538,
        "lines": 60
      }
    },
    {
      "id": "AdminErrorBoundary",
      "name": "Admin Error Boundary",
      "icon": "Database",
      "category": "data",
      "description": "Admin Error Boundary component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ErrorBoundary/AdminErrorBoundary.tsx",
      "usage": {
        "inMenu": true,
        "inRoutes": false,
        "menuContext": "src/routes/Router.tsx",
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 15045,
        "lines": 358
      }
    },
    {
      "id": "AGGridViewOnly",
      "name": "A G Grid View Only",
      "icon": "Database",
      "category": "data",
      "description": "A G Grid View Only component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/AGGridViewOnly/AGGridViewOnly.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9996,
        "lines": 341
      }
    },
    {
      "id": "AuthenticationComponent",
      "name": "Authentication Component",
      "icon": "Database",
      "category": "data",
      "description": "Authentication Component component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/AuthenticationComponent.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 6506,
        "lines": 217
      }
    },
    {
      "id": "AutoFixDemo",
      "name": "Auto Fix Demo",
      "icon": "Database",
      "category": "data",
      "description": "Auto Fix Demo component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/demo/AutoFixDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 14683,
        "lines": 382
      }
    },
    {
      "id": "AutoLearningOCR",
      "name": "Auto Learning O C R",
      "icon": "Database",
      "category": "data",
      "description": "Auto Learning O C R component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AutoLearningOCR.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 19405,
        "lines": 469
      }
    },
    {
      "id": "BarcodeScannerModal",
      "name": "Barcode Scanner Modal",
      "icon": "Square",
      "category": "data",
      "description": "Barcode Scanner Modal component (data) with React hooks - 4 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onComplete",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "session",
          "optional": false,
          "type": "OCRSession | null",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/OCRUploader/BarcodeScannerModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 8083,
        "lines": 230
      }
    },
    {
      "id": "BasicSparkLineCustomizationChart",
      "name": "Basic Spark Line Customization Chart",
      "icon": "Database",
      "category": "data",
      "description": "Basic Spark Line Customization Chart component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/sparklinecharts/BasicSparkLineCustomizationChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": [
          "export default function BasicSparkLineCustomizationChart"
        ],
        "dependencies": [
          "@mui/material/Stack",
          "@mui/material/Box",
          "@mui/material/FormControlLabel",
          "@mui/material/Switch",
          "@mui/x-charts/SparkLineChart",
          "@mui/material"
        ],
        "size": 3383,
        "lines": 83
      }
    },
    {
      "id": "BigBookConsolePage",
      "name": "Big Book Console Page",
      "icon": "Database",
      "category": "data",
      "description": "Big Book Console Page component (data) with React hooks - 9 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "files",
          "optional": false,
          "type": "FileUpload[]",
          "description": ""
        },
        {
          "name": "consoleOutput",
          "optional": false,
          "type": "ConsoleOutput[]",
          "description": ""
        },
        {
          "name": "isExecuting",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onFileSelect",
          "optional": false,
          "type": "(file: FileUpload) => void",
          "description": ""
        },
        {
          "name": "onFileExecute",
          "optional": false,
          "type": "(file: FileUpload) => void",
          "description": ""
        },
        {
          "name": "onFileDelete",
          "optional": false,
          "type": "(fileId: string) => void",
          "description": ""
        },
        {
          "name": "onQuestionnairePreview",
          "optional": true,
          "type": "(file: FileUpload) => void",
          "description": ""
        },
        {
          "name": "onClearConsole",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "selectedFile",
          "optional": false,
          "type": "FileUpload | null",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/BigBookConsolePage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 10646,
        "lines": 321
      }
    },
    {
      "id": "ChatContent",
      "name": "Chat Content",
      "icon": "Database",
      "category": "data",
      "description": "Chat Content component (data) with React hooks - 1 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "toggleChatSidebar",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/apps/chats/ChatContent.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "date-fns"
        ],
        "size": 10277,
        "lines": 270
      }
    },
    {
      "id": "CheckboxesAutocomplete",
      "name": "Checkboxes Autocomplete",
      "icon": "Database",
      "category": "data",
      "description": "Checkboxes Autocomplete component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/forms/form-elements/autoComplete/CheckboxesAutocomplete.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function CheckboxesAutocomplete"
        ],
        "dependencies": [
          "@mui/material/Autocomplete"
        ],
        "size": 969,
        "lines": 37
      }
    },
    {
      "id": "CheckboxSelection",
      "name": "Checkbox Selection",
      "icon": "Database",
      "category": "data",
      "description": "Checkbox Selection component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muitrees/simpletree/CheckboxSelection.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function CheckboxSelection"
        ],
        "dependencies": [
          "@mui/material/Box",
          "@mui/x-tree-view/SimpleTreeView",
          "@mui/x-tree-view/TreeItem",
          "@mui/x-data-grid",
          "@mui/x-data-grid-pro",
          "@mui/x-data-grid-premium",
          "@mui/x-date-pickers",
          "@mui/x-date-pickers-pro",
          "@mui/x-charts",
          "@mui/x-tree-view"
        ],
        "size": 1737,
        "lines": 37
      }
    },
    {
      "id": "ColorPaletteSelector",
      "name": "Color Palette Selector",
      "icon": "Database",
      "category": "data",
      "description": "Color Palette Selector component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ColorPaletteSelector.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 8208,
        "lines": 279
      }
    },
    {
      "id": "ColorPickerPopover",
      "name": "Color Picker Popover",
      "icon": "Database",
      "category": "data",
      "description": "Color Picker Popover component (data) with React hooks - 6 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "anchorEl",
          "optional": false,
          "type": "HTMLElement | null",
          "description": ""
        },
        {
          "name": "currentColor",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "onColorSelect",
          "optional": false,
          "type": "(color: string) => void",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "predefinedColors",
          "optional": true,
          "type": "string[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ColorPickerPopover/ColorPickerPopover.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9356,
        "lines": 300
      }
    },
    {
      "id": "ColorSwatch",
      "name": "Color Swatch",
      "icon": "Database",
      "category": "data",
      "description": "Color Swatch component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ColorPaletteSelector.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 8208,
        "lines": 279
      }
    },
    {
      "id": "ComponentAgentPanel",
      "name": "Component Agent Panel",
      "icon": "Database",
      "category": "data",
      "description": "Component Agent Panel component (data) with React hooks - 3 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "component",
          "optional": false,
          "type": "BoundComponent | null",
          "description": ""
        },
        {
          "name": "onAutofix",
          "optional": true,
          "type": "(agentName: string",
          "description": ""
        },
        {
          "name": "action",
          "optional": false,
          "type": "string) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "pages/omb/ComponentAgentPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material/ExpandMore",
          "@mui/icons-material/CheckCircle",
          "@mui/icons-material/Error",
          "@mui/icons-material/Warning",
          "@mui/icons-material/Info",
          "@mui/icons-material/AutoFixHigh",
          "@mui/icons-material/Refresh"
        ],
        "size": 11071,
        "lines": 315
      }
    },
    {
      "id": "ComponentInspector",
      "name": "Component Inspector",
      "icon": "Database",
      "category": "data",
      "description": "Component Inspector component (data) with React hooks - 10 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "isOpen",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "component",
          "optional": false,
          "type": "ComponentInfo | null",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onApplyChanges",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onDiscardChanges",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onToggleEditMode",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onUpdateChanges",
          "optional": false,
          "type": "(changes: Record<string",
          "description": ""
        },
        {
          "name": "isEditMode",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "pendingChanges",
          "optional": false,
          "type": "Record<string",
          "description": ""
        },
        {
          "name": "omaiStatus",
          "optional": false,
          "type": "OMAIStatus",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ComponentInspector.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 36274,
        "lines": 984
      }
    },
    {
      "id": "ComponentPreview",
      "name": "Component Preview",
      "icon": "Database",
      "category": "data",
      "description": "Component Preview component (data) - 3 props",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "selectedComponent",
          "optional": false,
          "type": "ComponentPaletteItem | null",
          "description": ""
        },
        {
          "name": "boundComponents",
          "optional": false,
          "type": "BoundComponent[]",
          "description": ""
        },
        {
          "name": "currentFormData",
          "optional": false,
          "type": "any",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "pages/omb/ComponentPreview.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 5626,
        "lines": 181
      }
    },
    {
      "id": "ContentSettings",
      "name": "Content Settings",
      "icon": "Database",
      "category": "data",
      "description": "Content Settings component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/settings/ContentSettings.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 19327,
        "lines": 463
      }
    },
    {
      "id": "CustomCheckbox",
      "name": "Custom Checkbox",
      "icon": "Database",
      "category": "data",
      "description": "Custom Checkbox component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/forms/theme-elements/CustomCheckbox.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material/styles",
          "@mui/material/Checkbox"
        ],
        "size": 2073,
        "lines": 70
      }
    },
    {
      "id": "DynamicComponentRenderer",
      "name": "Dynamic Component Renderer",
      "icon": "Database",
      "category": "data",
      "description": "Dynamic Component Renderer component (data) - 2 props",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "shortcode",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "props",
          "optional": true,
          "type": "ComponentProps",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/cms/DynamicComponentRenderer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 10620,
        "lines": 360
      }
    },
    {
      "id": "EncryptedStoragePanel",
      "name": "Encrypted Storage Panel",
      "icon": "Database",
      "category": "data",
      "description": "Encrypted Storage Panel component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/EncryptedStoragePanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 13524,
        "lines": 422
      }
    },
    {
      "id": "EntityExtractionViewer",
      "name": "Entity Extraction Viewer",
      "icon": "Database",
      "category": "data",
      "description": "Entity Extraction Viewer component (data) with React hooks - 3 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "jobId",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "churchId",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "onEntitiesUpdated",
          "optional": true,
          "type": "(entities: ExtractedEntities) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/EntityExtractionViewer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 15735,
        "lines": 483
      }
    },
    {
      "id": "GitOpsDemo",
      "name": "Git Ops Demo",
      "icon": "Database",
      "category": "data",
      "description": "Git Ops Demo component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/demo/GitOpsDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 18914,
        "lines": 475
      }
    },
    {
      "id": "ImageGridExtractor",
      "name": "Image Grid Extractor",
      "icon": "Database",
      "category": "data",
      "description": "Image Grid Extractor component (data) with React hooks - 5 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onImagesExtracted",
          "optional": false,
          "type": "(images: ExtractedImage[]",
          "description": ""
        },
        {
          "name": "type",
          "optional": false,
          "type": "'profile' | 'banner') => void",
          "description": ""
        },
        {
          "name": "type",
          "optional": false,
          "type": "'profile' | 'banner'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/settings/ImageGridExtractor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 19430,
        "lines": 461
      }
    },
    {
      "id": "JITTerminalAccess",
      "name": "J I T Terminal Access",
      "icon": "Database",
      "category": "data",
      "description": "J I T Terminal Access component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/settings/JITTerminalAccess.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 20593,
        "lines": 594
      }
    },
    {
      "id": "MarkdownUpload",
      "name": "Markdown Upload",
      "icon": "Database",
      "category": "data",
      "description": "Markdown Upload component (data) with React hooks - 4 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "taskId",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "markdownContent",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "markdownFilename",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "onUploadSuccess",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/MarkdownUpload.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 4988,
        "lines": 180
      }
    },
    {
      "id": "MiniControlPanel",
      "name": "Mini Control Panel",
      "icon": "Database",
      "category": "data",
      "description": "Mini Control Panel component (data) - 1 props",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "cards",
          "optional": true,
          "type": "ControlCard[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/dashboards/modern/MiniControlPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 7059,
        "lines": 194
      }
    },
    {
      "id": "NFSBackupConfig",
      "name": "N F S Backup Config",
      "icon": "Database",
      "category": "data",
      "description": "N F S Backup Config component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/NFSBackupConfig.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 15121,
        "lines": 492
      }
    },
    {
      "id": "OcrManualUploader",
      "name": "Ocr Manual Uploader",
      "icon": "Database",
      "category": "data",
      "description": "Ocr Manual Uploader component (data) with React hooks - 3 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onUploadComplete",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "theme",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/ManualUploader.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 13446,
        "lines": 391
      }
    },
    {
      "id": "OcrSettingsComponent",
      "name": "Ocr Settings Component",
      "icon": "Database",
      "category": "data",
      "description": "Ocr Settings Component component (data)",
      "tags": [
        "data",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ocr/Settings.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 14378,
        "lines": 392
      }
    },
    {
      "id": "OcrWizardUpload",
      "name": "Ocr Wizard Upload",
      "icon": "Database",
      "category": "data",
      "description": "Ocr Wizard Upload component (data) with React hooks - 3 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onComplete",
          "optional": true,
          "type": "(data: WizardFormData) => void",
          "description": ""
        },
        {
          "name": "onCancel",
          "optional": true,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/WizardUpload.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 8657,
        "lines": 312
      }
    },
    {
      "id": "OMLearnDashboard",
      "name": "O M Learn Dashboard",
      "icon": "Database",
      "category": "data",
      "description": "O M Learn Dashboard component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "modules/OMLearn/OMLearnDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 10626,
        "lines": 310
      }
    },
    {
      "id": "OrthodoxAvatarSelector",
      "name": "Orthodox Avatar Selector",
      "icon": "Database",
      "category": "data",
      "description": "Orthodox Avatar Selector component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/userprofile/profile/OrthodoxAvatarSelector.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 2853,
        "lines": 116
      }
    },
    {
      "id": "OrthodoxLogin",
      "name": "Orthodox Login",
      "icon": "Database",
      "category": "data",
      "description": "Orthodox Login component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "auth"
      ],
      "props": [],
      "configurable": false,
      "path": "views/authentication/auth1/OrthodoxLogin.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 16005,
        "lines": 466
      }
    },
    {
      "id": "OrthodoxThemeDemo",
      "name": "Orthodox Theme Demo",
      "icon": "Database",
      "category": "data",
      "description": "Orthodox Theme Demo component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/demos/OrthodoxThemeDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 15477,
        "lines": 356
      }
    },
    {
      "id": "PageEditor",
      "name": "Page Editor",
      "icon": "Database",
      "category": "data",
      "description": "Page Editor component (data) with React hooks - 2 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "slug",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(pageData: PageData) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/cms/PageEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "axios"
        ],
        "size": 14838,
        "lines": 490
      }
    },
    {
      "id": "PermissionDebugger",
      "name": "Permission Debugger",
      "icon": "Database",
      "category": "data",
      "description": "Permission Debugger component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/debug/PermissionDebugger.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 1866,
        "lines": 52
      }
    },
    {
      "id": "PostTextBox",
      "name": "Post Text Box",
      "icon": "Database",
      "category": "data",
      "description": "Post Text Box component (data)",
      "tags": [
        "data",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/userprofile/profile/PostTextBox.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 1383,
        "lines": 48
      }
    },
    {
      "id": "ProcessingQueue",
      "name": "Processing Queue",
      "icon": "Database",
      "category": "data",
      "description": "Processing Queue component (data) with React hooks - 3 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onPreviewJob",
          "optional": false,
          "type": "(job: OcrJobMetadata) => void",
          "description": ""
        },
        {
          "name": "theme",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/ProcessingQueue.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 22439,
        "lines": 584
      }
    },
    {
      "id": "ProductSearch",
      "name": "Product Search",
      "icon": "Database",
      "category": "data",
      "description": "Product Search component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/ecommerce/productGrid/ProductSearch.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": [
          "export default function ProductSearch"
        ],
        "dependencies": [
          "@mui/material"
        ],
        "size": 1046,
        "lines": 39
      }
    },
    {
      "id": "ProjectGenerator",
      "name": "Project Generator",
      "icon": "Database",
      "category": "data",
      "description": "Project Generator component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/sandbox/project-generator.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 13761,
        "lines": 384
      }
    },
    {
      "id": "QuestionnaireRunner",
      "name": "Questionnaire Runner",
      "icon": "Database",
      "category": "data",
      "description": "Questionnaire Runner component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "modules/OMLearn/QuestionnaireRunner.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 16311,
        "lines": 500
      }
    },
    {
      "id": "SimpleOCRUploader",
      "name": "Simple O C R Uploader",
      "icon": "Database",
      "category": "data",
      "description": "Simple O C R Uploader component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "components/SimpleOCRUploader.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 9158,
        "lines": 268
      }
    },
    {
      "id": "SiteEditor",
      "name": "Site Editor",
      "icon": "Database",
      "category": "data",
      "description": "Site Editor component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/SiteEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9723,
        "lines": 270
      }
    },
    {
      "id": "SiteEditorDemo",
      "name": "Site Editor Demo",
      "icon": "Database",
      "category": "data",
      "description": "Site Editor Demo component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/demo/SiteEditorDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 12582,
        "lines": 350
      }
    },
    {
      "id": "Slider",
      "name": "Slider",
      "icon": "Database",
      "category": "data",
      "description": "Slider component (data) - 6 props",
      "tags": [
        "data",
        "jsx",
        "configurable",
        "ui"
      ],
      "props": [
        {
          "name": "value",
          "optional": false,
          "type": "number[]",
          "description": ""
        },
        {
          "name": "onValueChange",
          "optional": false,
          "type": "(value: number[]) => void",
          "description": ""
        },
        {
          "name": "max",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "min",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "step",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ui/slider.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 834,
        "lines": 41
      }
    },
    {
      "id": "SocialPermissionsToggle",
      "name": "Social Permissions Toggle",
      "icon": "Database",
      "category": "data",
      "description": "Social Permissions Toggle component (data) with React hooks - 4 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "userId",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "userEmail",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "userRole",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onPermissionsChanged",
          "optional": true,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/SocialPermissionsToggle.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 13095,
        "lines": 352
      }
    },
    {
      "id": "SocialToolbar",
      "name": "Social Toolbar",
      "icon": "Database",
      "category": "data",
      "description": "Social Toolbar component (data) with React hooks - 2 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "items",
          "optional": true,
          "type": "SocialItem[]",
          "description": ""
        },
        {
          "name": "position",
          "optional": true,
          "type": "'top-right' | 'floating' | 'inline'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/dashboards/modern/SocialToolbar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 8194,
        "lines": 241
      }
    },
    {
      "id": "Step2FileUploader",
      "name": "Step2 File Uploader",
      "icon": "Database",
      "category": "data",
      "description": "Step2 File Uploader component (data) with React hooks - 2 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "formData",
          "optional": false,
          "type": "WizardFormData",
          "description": ""
        },
        {
          "name": "updateFormData",
          "optional": false,
          "type": "(updates: Partial<WizardFormData>) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/wizard/Step2FileUploader.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 13992,
        "lines": 423
      }
    },
    {
      "id": "Step3FileReview",
      "name": "Step3 File Review",
      "icon": "Database",
      "category": "data",
      "description": "Step3 File Review component (data) with React hooks - 2 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "formData",
          "optional": false,
          "type": "WizardFormData",
          "description": ""
        },
        {
          "name": "updateFormData",
          "optional": false,
          "type": "(updates: Partial<WizardFormData>) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/wizard/Step3FileReview.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 10824,
        "lines": 326
      }
    },
    {
      "id": "Step4Confirmation",
      "name": "Step4 Confirmation",
      "icon": "Database",
      "category": "data",
      "description": "Step4 Confirmation component (data) - 3 props",
      "tags": [
        "data",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "formData",
          "optional": false,
          "type": "WizardFormData",
          "description": ""
        },
        {
          "name": "onSubmit",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "loading",
          "optional": false,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/wizard/Step4Confirmation.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9934,
        "lines": 305
      }
    },
    {
      "id": "TestAvatar",
      "name": "Test Avatar",
      "icon": "Database",
      "category": "data",
      "description": "Test Avatar component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/userprofile/profile/ProfileBanner.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 30652,
        "lines": 860
      }
    },
    {
      "id": "TestGrid",
      "name": "Test Grid",
      "icon": "Database",
      "category": "data",
      "description": "Test Grid component (data)",
      "tags": [
        "data",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "test-grid.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 497,
        "lines": 20
      }
    },
    {
      "id": "ThemedAGGridWrapper",
      "name": "Themed A G Grid Wrapper",
      "icon": "Database",
      "category": "data",
      "description": "Themed A G Grid Wrapper component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/Theme/ThemedLayout.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 1966,
        "lines": 73
      }
    },
    {
      "id": "UploadedFileList",
      "name": "Uploaded File List",
      "icon": "Database",
      "category": "data",
      "description": "Uploaded File List component (data) with React hooks - 10 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "files",
          "optional": false,
          "type": "FileUpload[]",
          "description": ""
        },
        {
          "name": "selectedFile",
          "optional": false,
          "type": "FileUpload | null",
          "description": ""
        },
        {
          "name": "onFileSelect",
          "optional": false,
          "type": "(file: FileUpload) => void",
          "description": ""
        },
        {
          "name": "onFileExecute",
          "optional": false,
          "type": "(file: FileUpload) => void",
          "description": ""
        },
        {
          "name": "onFileDelete",
          "optional": false,
          "type": "(fileId: string) => void",
          "description": ""
        },
        {
          "name": "onQuestionnairePreview",
          "optional": true,
          "type": "(file: FileUpload) => void",
          "description": ""
        },
        {
          "name": "isExecuting",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "settings",
          "optional": true,
          "type": "{",
          "description": ""
        },
        {
          "name": "showHiddenFiles",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "darkModeConsole",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/UploadedFileList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 10350,
        "lines": 340
      }
    },
    {
      "id": "UploadStatus",
      "name": "Upload Status",
      "icon": "Database",
      "category": "data",
      "description": "Upload Status component (data) with React hooks - 5 props",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "files",
          "optional": false,
          "type": "OCRFile[]",
          "description": ""
        },
        {
          "name": "showDetails",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onDownload",
          "optional": true,
          "type": "(fileId: string",
          "description": ""
        },
        {
          "name": "format",
          "optional": false,
          "type": "'pdf' | 'xlsx') => void",
          "description": ""
        },
        {
          "name": "onPreview",
          "optional": true,
          "type": "(fileId: string) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/OCRUploader/UploadStatus.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 16058,
        "lines": 337
      }
    },
    {
      "id": "VoronoiInteractionChart",
      "name": "Voronoi Interaction Chart",
      "icon": "Database",
      "category": "data",
      "description": "Voronoi Interaction Chart component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/scattercharts/VoronoiInteractionChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": [
          "export default function VoronoiInteractionChart"
        ],
        "dependencies": [
          "@mui/material/Stack",
          "@mui/material/FormControlLabel",
          "@mui/material/Checkbox",
          "@mui/material/Typography",
          "@mui/material/Slider",
          "@mui/x-charts/ScatterChart",
          "@mui/material"
        ],
        "size": 4614,
        "lines": 115
      }
    },
    {
      "id": "WhyChooseUsEnhanced",
      "name": "Why Choose Us Enhanced",
      "icon": "Database",
      "category": "data",
      "description": "Why Choose Us Enhanced component (data) with React hooks",
      "tags": [
        "data",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/frontend-pages/homepage/why-choose-us/WhyChooseUsEnhanced.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "framer-motion"
        ],
        "size": 9785,
        "lines": 298
      }
    },
    {
      "id": "AdminLogs",
      "name": "Admin Logs",
      "icon": "Layout",
      "category": "display",
      "description": "Admin Logs component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/AdminLogs.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 1111,
        "lines": 32
      }
    },
    {
      "id": "AdminPageFallback",
      "name": "Admin Page Fallback",
      "icon": "Layout",
      "category": "display",
      "description": "Admin Page Fallback component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/AdminPageFallback.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 6930,
        "lines": 229
      }
    },
    {
      "id": "AdminTile",
      "name": "Admin Tile",
      "icon": "Layout",
      "category": "display",
      "description": "Admin Tile component - 9 props",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "icon",
          "optional": false,
          "type": "React.ReactNode",
          "description": ""
        },
        {
          "name": "label",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "description",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "to",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "roleRestriction",
          "optional": true,
          "type": "string[]",
          "description": ""
        },
        {
          "name": "badge",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "badgeColor",
          "optional": true,
          "type": "'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info'",
          "description": ""
        },
        {
          "name": "disabled",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "comingSoon",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/AdminTile.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 7480,
        "lines": 252
      }
    },
    {
      "id": "AdvancedOMLearnAPI",
      "name": "Advanced O M Learn A P I",
      "icon": "Layout",
      "category": "display",
      "description": "Advanced O M Learn A P I component",
      "tags": [
        "display",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "modules/OMLearn/omlearn.api.ts",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 11574,
        "lines": 373
      }
    },
    {
      "id": "AnalyticsDashboard",
      "name": "Analytics Dashboard",
      "icon": "Layout",
      "category": "display",
      "description": "Analytics Dashboard component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/AnalyticsDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "axios"
        ],
        "size": 9287,
        "lines": 209
      }
    },
    {
      "id": "ArcDesignChart",
      "name": "Arc Design Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Arc Design Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/gaugecharts/ArcDesignChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function ArcDesignChart"
        ],
        "dependencies": [
          "@mui/x-charts/Gauge"
        ],
        "size": 1012,
        "lines": 36
      }
    },
    {
      "id": "AreaChartConnectNulls",
      "name": "Area Chart Connect Nulls",
      "icon": "Layout",
      "category": "display",
      "description": "Area Chart Connect Nulls component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/areacharts/AreaChartConnectNullsChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function AreaChartConnectNulls"
        ],
        "dependencies": [
          "@mui/material/Stack",
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 1398,
        "lines": 36
      }
    },
    {
      "id": "AreaChartFillByValue",
      "name": "Area Chart Fill By Value",
      "icon": "Layout",
      "category": "display",
      "description": "Area Chart Fill By Value component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/areacharts/AreaChartFillByValueChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function AreaChartFillByValue"
        ],
        "dependencies": [
          "@mui/material/colors",
          "@mui/material/Stack",
          "@mui/x-charts/hooks",
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 6867,
        "lines": 188
      }
    },
    {
      "id": "AreaChartFillByValueCode",
      "name": "Area Chart Fill By Value Code",
      "icon": "Layout",
      "category": "display",
      "description": "Area Chart Fill By Value Code component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/code/areachartscode/AreaChartFillByValueCode.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function AreaChartFillByValueCode"
        ],
        "dependencies": [
          "@mui/material/colors",
          "@mui/material/Stack",
          "@mui/x-charts/hooks",
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 6573,
        "lines": 203
      }
    },
    {
      "id": "AreaSparkLineChart",
      "name": "Area Spark Line Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Area Spark Line Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/sparklinecharts/AreaSparkLineChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function AreaSparkLineChart"
        ],
        "dependencies": [
          "@mui/material/Stack",
          "@mui/material/Box",
          "@mui/x-charts/SparkLineChart",
          "@mui/material"
        ],
        "size": 1061,
        "lines": 35
      }
    },
    {
      "id": "AuthProvider",
      "name": "Auth Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Auth Provider component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "context/AuthContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 9003,
        "lines": 342
      }
    },
    {
      "id": "AuthRedirect",
      "name": "Auth Redirect",
      "icon": "Layout",
      "category": "display",
      "description": "Auth Redirect component with React hooks",
      "tags": [
        "display",
        "hooks",
        "default-export",
        "dependencies",
        "auth"
      ],
      "props": [],
      "configurable": false,
      "path": "components/auth/AuthRedirect.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": false,
        "isDefault": true,
        "dependencies": [
          "react-router"
        ],
        "size": 617,
        "lines": 25
      }
    },
    {
      "id": "BasicCustomIcons",
      "name": "Basic Custom Icons",
      "icon": "Layout",
      "category": "display",
      "description": "Basic Custom Icons component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muitrees/simpletree/BasicCustomIcons.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function BasicCustomIcons"
        ],
        "dependencies": [
          "@mui/material/Box",
          "@mui/icons-material/AddBox",
          "@mui/icons-material/IndeterminateCheckBox",
          "@mui/material/SvgIcon",
          "@mui/material/styles",
          "@mui/x-tree-view/SimpleTreeView",
          "@mui/x-tree-view/TreeItem",
          "@mui/x-data-grid",
          "@mui/x-data-grid-pro",
          "@mui/x-data-grid-premium",
          "@mui/x-date-pickers",
          "@mui/x-date-pickers-pro",
          "@mui/x-charts",
          "@mui/x-tree-view"
        ],
        "size": 3369,
        "lines": 72
      }
    },
    {
      "id": "BasicGaugesChart",
      "name": "Basic Gauges Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Basic Gauges Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/gaugecharts/BasicGaugesChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function BasicGaugesChart"
        ],
        "dependencies": [
          "@mui/material/Stack",
          "@mui/x-charts/Gauge"
        ],
        "size": 675,
        "lines": 19
      }
    },
    {
      "id": "BasicPieChart",
      "name": "Basic Pie Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Basic Pie Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/piecharts/BasicPieChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function BasicPieChart"
        ],
        "dependencies": [
          "@mui/x-charts/PieChart",
          "@mui/material"
        ],
        "size": 1070,
        "lines": 32
      }
    },
    {
      "id": "BasicScatterChart",
      "name": "Basic Scatter Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Basic Scatter Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/scattercharts/BasicScatterChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function BasicScatterChart"
        ],
        "dependencies": [
          "@mui/x-charts/ScatterChart",
          "@mui/material"
        ],
        "size": 3914,
        "lines": 196
      }
    },
    {
      "id": "BasicSimpleTreeView",
      "name": "Basic Simple Tree View",
      "icon": "Layout",
      "category": "display",
      "description": "Basic Simple Tree View component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muitrees/simpletree/BasicSimpleTreeView.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function BasicSimpleTreeView"
        ],
        "dependencies": [
          "@mui/material/Box",
          "@mui/x-tree-view/SimpleTreeView",
          "@mui/x-tree-view/TreeItem",
          "@mui/x-data-grid",
          "@mui/x-data-grid-pro",
          "@mui/x-data-grid-premium",
          "@mui/x-date-pickers",
          "@mui/x-date-pickers-pro",
          "@mui/x-charts",
          "@mui/x-tree-view"
        ],
        "size": 1724,
        "lines": 37
      }
    },
    {
      "id": "BiaxialLineChart",
      "name": "Biaxial Line Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Biaxial Line Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/linechart/BiaxialLineChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function BiaxialLineChart"
        ],
        "dependencies": [
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 1415,
        "lines": 37
      }
    },
    {
      "id": "BishopGoldenVestments",
      "name": "Bishop Golden Vestments",
      "icon": "Layout",
      "category": "display",
      "description": "Bishop Golden Vestments component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "BlogProvider",
      "name": "Blog Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Blog Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/BlogContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 2796,
        "lines": 87
      }
    },
    {
      "id": "BuildTheme",
      "name": "Build Theme",
      "icon": "Layout",
      "category": "display",
      "description": "Build Theme component with React hooks",
      "tags": [
        "display",
        "hooks",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "theme/Theme.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [
          "@mui/material/styles",
          "@mui/material/locale",
          "lodash"
        ],
        "size": 1812,
        "lines": 58
      }
    },
    {
      "id": "ChatProvider",
      "name": "Chat Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Chat Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/ChatContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 3763,
        "lines": 108
      }
    },
    {
      "id": "ChurchAdminPanel",
      "name": "Church Admin Panel",
      "icon": "Layout",
      "category": "display",
      "description": "Church Admin Panel component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/ChurchAdminPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 1235,
        "lines": 38
      }
    },
    {
      "id": "ChurchAdminPanelWorking",
      "name": "Church Admin Panel Working",
      "icon": "Layout",
      "category": "display",
      "description": "Church Admin Panel Working component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/ChurchAdminPanelWorking.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 7843,
        "lines": 192
      }
    },
    {
      "id": "ChurchRecordsProvider",
      "name": "Church Records Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Church Records Provider component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "context/ChurchRecordsProvider.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 4792,
        "lines": 178
      }
    },
    {
      "id": "ComingSoon",
      "name": "Coming Soon",
      "icon": "Layout",
      "category": "display",
      "description": "Coming Soon component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "pageName",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/shared/ComingSoon.tsx",
      "usage": {
        "inMenu": true,
        "inRoutes": false,
        "menuContext": "src/routes/Router.tsx",
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 12107,
        "lines": 342
      }
    },
    {
      "id": "ConfidenceBadge",
      "name": "Confidence Badge",
      "icon": "Layout",
      "category": "display",
      "description": "Confidence Badge component - 4 props",
      "tags": [
        "display",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "confidence",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "size",
          "optional": true,
          "type": "'sm' | 'md' | 'lg'",
          "description": ""
        },
        {
          "name": "showIcon",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "showPercentage",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/ConfidenceBadge.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 2300,
        "lines": 85
      }
    },
    {
      "id": "ContactContextProvider",
      "name": "Contact Context Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Contact Context Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/ConatactContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 5648,
        "lines": 166
      }
    },
    {
      "id": "CustomizerContextProvider",
      "name": "Customizer Context Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Customizer Context Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/CustomizerContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 3708,
        "lines": 95
      }
    },
    {
      "id": "CustomTreeItem",
      "name": "Custom Tree Item",
      "icon": "Layout",
      "category": "display",
      "description": "Custom Tree Item component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muitrees/simpletree/CustomTreeItemView.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function CustomTreeItem"
        ],
        "dependencies": [
          "@mui/material/styles",
          "@mui/material/Box",
          "@mui/material/Avatar",
          "@mui/x-tree-view/SimpleTreeView",
          "@mui/x-tree-view/useTreeItem2",
          "@mui/x-tree-view/TreeItem2",
          "@mui/x-tree-view/TreeItem2Icon",
          "@mui/x-tree-view/TreeItem2Provider"
        ],
        "size": 3072,
        "lines": 91
      }
    },
    {
      "id": "CustomTreeItemView",
      "name": "Custom Tree Item View",
      "icon": "Layout",
      "category": "display",
      "description": "Custom Tree Item View component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muitrees/simpletree/CustomTreeItemView.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function CustomTreeItemView"
        ],
        "dependencies": [
          "@mui/material/styles",
          "@mui/material/Box",
          "@mui/material/Avatar",
          "@mui/x-tree-view/SimpleTreeView",
          "@mui/x-tree-view/useTreeItem2",
          "@mui/x-tree-view/TreeItem2",
          "@mui/x-tree-view/TreeItem2Icon",
          "@mui/x-tree-view/TreeItem2Provider"
        ],
        "size": 3072,
        "lines": 91
      }
    },
    {
      "id": "DashedLineChart",
      "name": "Dashed Line Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Dashed Line Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/linechart/DashedLineChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function DashedLineChart"
        ],
        "dependencies": [
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 1967,
        "lines": 53
      }
    },
    {
      "id": "DeaconGoldenStole",
      "name": "Deacon Golden Stole",
      "icon": "Layout",
      "category": "display",
      "description": "Deacon Golden Stole component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "ElderLaymanGray",
      "name": "Elder Layman Gray",
      "icon": "Layout",
      "category": "display",
      "description": "Elder Layman Gray component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "ElderlyNun1",
      "name": "Elderly Nun1",
      "icon": "Layout",
      "category": "display",
      "description": "Elderly Nun1 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "ElderPriest1",
      "name": "Elder Priest1",
      "icon": "Layout",
      "category": "display",
      "description": "Elder Priest1 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "ElderPriest2",
      "name": "Elder Priest2",
      "icon": "Layout",
      "category": "display",
      "description": "Elder Priest2 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "ElderWhiteBeard",
      "name": "Elder White Beard",
      "icon": "Layout",
      "category": "display",
      "description": "Elder White Beard component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "EmailContextProvider",
      "name": "Email Context Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Email Context Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/EmailContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 3920,
        "lines": 113
      }
    },
    {
      "id": "ErrorBoundary",
      "name": "Error Boundary",
      "icon": "Layout",
      "category": "display",
      "description": "Error Boundary component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ErrorBoundary/ErrorBoundary.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 13380,
        "lines": 323
      }
    },
    {
      "id": "FileViewer",
      "name": "File Viewer",
      "icon": "Layout",
      "category": "display",
      "description": "File Viewer component - 10 props",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "file",
          "optional": false,
          "type": "FileUpload | null",
          "description": ""
        },
        {
          "name": "onExecute",
          "optional": false,
          "type": "(file: FileUpload) => void",
          "description": ""
        },
        {
          "name": "isExecuting",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "settings",
          "optional": true,
          "type": "{",
          "description": ""
        },
        {
          "name": "defaultPreviewMode",
          "optional": true,
          "type": "'auto' | 'raw' | 'markdown' | 'code'",
          "description": ""
        },
        {
          "name": "autoExpandJson",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "enableSyntaxHighlighting",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "maxPreviewFileSize",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "lineWrapInPreview",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "darkModeConsole",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/FileViewer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 16335,
        "lines": 482
      }
    },
    {
      "id": "GaugePointerChart",
      "name": "Gauge Pointer Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Gauge Pointer Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/gaugecharts/GaugePointerChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function GaugePointerChart"
        ],
        "dependencies": [
          "@mui/x-charts/Gauge"
        ],
        "size": 1397,
        "lines": 56
      }
    },
    {
      "id": "I18nProvider",
      "name": "I18n Provider",
      "icon": "Layout",
      "category": "display",
      "description": "I18n Provider component with React hooks - 2 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "ReactNode",
          "description": ""
        },
        {
          "name": "defaultLanguage",
          "optional": true,
          "type": "SupportedLanguage",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "context/I18nContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 17272,
        "lines": 556
      }
    },
    {
      "id": "ImportRecordsExample",
      "name": "Import Records Example",
      "icon": "Layout",
      "category": "display",
      "description": "Import Records Example component",
      "tags": [
        "display",
        "jsx",
        "default-export"
      ],
      "props": [],
      "configurable": false,
      "path": "examples/ImportRecordsExample.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 5650,
        "lines": 152
      }
    },
    {
      "id": "InvoicePDFPreview",
      "name": "Invoice P D F Preview",
      "icon": "Layout",
      "category": "display",
      "description": "Invoice P D F Preview component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "invoice",
          "optional": false,
          "type": "Invoice",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/apps/invoice/Invoice-detail/InvoicePDFPreview.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 7390,
        "lines": 170
      }
    },
    {
      "id": "InvoiceProvider",
      "name": "Invoice Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Invoice Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/InvoiceContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 7703,
        "lines": 243
      }
    },
    {
      "id": "InvoiceView",
      "name": "Invoice View",
      "icon": "Layout",
      "category": "display",
      "description": "Invoice View component",
      "tags": [
        "display",
        "jsx",
        "default-export"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/invoice/Invoice-view/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 199,
        "lines": 9
      }
    },
    {
      "id": "JITTerminal",
      "name": "J I T Terminal",
      "icon": "Layout",
      "category": "display",
      "description": "J I T Terminal component with React hooks - 7 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "isOpen",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "sessionId",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "user",
          "optional": false,
          "type": "{",
          "description": ""
        },
        {
          "name": "id",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "name",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "role",
          "optional": false,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/terminal/JITTerminal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 15861,
        "lines": 523
      }
    },
    {
      "id": "KanbanBoard",
      "name": "Kanban Board",
      "icon": "Layout",
      "category": "display",
      "description": "Kanban Board component - 3 props",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "board",
          "optional": false,
          "type": "Board",
          "description": ""
        },
        {
          "name": "onAddTask",
          "optional": false,
          "type": "(columnId: number) => void",
          "description": ""
        },
        {
          "name": "onRefresh",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/KanbanBoard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 2254,
        "lines": 97
      }
    },
    {
      "id": "KanbanColumn",
      "name": "Kanban Column",
      "icon": "Layout",
      "category": "display",
      "description": "Kanban Column component - 5 props",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "column",
          "optional": false,
          "type": "Column",
          "description": ""
        },
        {
          "name": "tasks",
          "optional": false,
          "type": "Task[]",
          "description": ""
        },
        {
          "name": "onAddTask",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onRefresh",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "boardLabels",
          "optional": false,
          "type": "Label[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/KanbanColumn.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 4625,
        "lines": 182
      }
    },
    {
      "id": "KanbanDataContextProvider",
      "name": "Kanban Data Context Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Kanban Data Context Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/kanbancontext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 19248,
        "lines": 573
      }
    },
    {
      "id": "LaymanMustache",
      "name": "Layman Mustache",
      "icon": "Layout",
      "category": "display",
      "description": "Layman Mustache component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "LineChartWithReferenceLines",
      "name": "Line Chart With Reference Lines",
      "icon": "Layout",
      "category": "display",
      "description": "Line Chart With Reference Lines component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/linechart/LineChartWithReferenceLinesChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function LineChartWithReferenceLines"
        ],
        "dependencies": [
          "@mui/x-charts/ChartContainer",
          "@mui/x-charts/ChartsReferenceLine",
          "@mui/x-charts/LineChart",
          "@mui/x-charts/ChartsXAxis",
          "@mui/x-charts/ChartsYAxis",
          "@mui/material"
        ],
        "size": 2122,
        "lines": 54
      }
    },
    {
      "id": "LinewithforecastChart",
      "name": "Linewithforecast Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Linewithforecast Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/linechart/LinewithforecastChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function LinewithforecastChart"
        ],
        "dependencies": [
          "@mui/x-charts/LineChart",
          "@mui/x-charts/hooks",
          "@mui/material",
          "@mui/system"
        ],
        "size": 3247,
        "lines": 91
      }
    },
    {
      "id": "MultilingualShowcase",
      "name": "Multilingual Showcase",
      "icon": "Layout",
      "category": "display",
      "description": "Multilingual Showcase component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/frontend-pages/homepage/multilingual-showcase/MultilingualShowcase.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "framer-motion"
        ],
        "size": 8184,
        "lines": 237
      }
    },
    {
      "id": "NotesProvider",
      "name": "Notes Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Notes Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/NotesContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 13109,
        "lines": 390
      }
    },
    {
      "id": "NotificationProvider",
      "name": "Notification Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Notification Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "contexts/NotificationContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 14264,
        "lines": 422
      }
    },
    {
      "id": "NunWithCross",
      "name": "Nun With Cross",
      "icon": "Layout",
      "category": "display",
      "description": "Nun With Cross component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "OcrMultiRecordMapper",
      "name": "Ocr Multi Record Mapper",
      "icon": "Layout",
      "category": "display",
      "description": "Ocr Multi Record Mapper component with React hooks - 5 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "ocrData",
          "optional": true,
          "type": "any",
          "description": ""
        },
        {
          "name": "onSubmit",
          "optional": false,
          "type": "(correctedRecords: any) => void",
          "description": ""
        },
        {
          "name": "onCancel",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrMultiRecordMapper.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 20040,
        "lines": 575
      }
    },
    {
      "id": "OcrPreviewModal",
      "name": "Ocr Preview Modal",
      "icon": "Square",
      "category": "display",
      "description": "Ocr Preview Modal component with React hooks - 6 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "job",
          "optional": false,
          "type": "OcrJobMetadata | null",
          "description": ""
        },
        {
          "name": "isOpen",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(jobId: string",
          "description": ""
        },
        {
          "name": "fields",
          "optional": false,
          "type": "ExtractedField[]) => Promise<void>",
          "description": ""
        },
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrPreviewModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 15169,
        "lines": 447
      }
    },
    {
      "id": "OCRProvider",
      "name": "O C R Provider",
      "icon": "Layout",
      "category": "display",
      "description": "O C R Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/OCRContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 22083,
        "lines": 656
      }
    },
    {
      "id": "OcrScanPreview",
      "name": "Ocr Scan Preview",
      "icon": "Layout",
      "category": "display",
      "description": "Ocr Scan Preview component with React hooks - 7 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "imageSrc",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "ocrData",
          "optional": false,
          "type": "OcrField[]",
          "description": ""
        },
        {
          "name": "confidenceScore",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "onFieldEdit",
          "optional": true,
          "type": "(fieldId: string",
          "description": ""
        },
        {
          "name": "newValue",
          "optional": false,
          "type": "string) => void",
          "description": ""
        },
        {
          "name": "onScanComplete",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "title",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/OcrScanPreview.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "framer-motion"
        ],
        "size": 22424,
        "lines": 479
      }
    },
    {
      "id": "OcrTestPanel",
      "name": "Ocr Test Panel",
      "icon": "Layout",
      "category": "display",
      "description": "Ocr Test Panel component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrTestPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 10669,
        "lines": 288
      }
    },
    {
      "id": "OnSeriesItemClickChart",
      "name": "On Series Item Click Chart",
      "icon": "Layout",
      "category": "display",
      "description": "On Series Item Click Chart component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/piecharts/OnSeriesItemClickChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": [
          "export default function OnSeriesItemClickChart"
        ],
        "dependencies": [
          "@mui/x-charts/PieChart",
          "@mui/material/Typography",
          "@mui/material/Stack"
        ],
        "size": 2233,
        "lines": 70
      }
    },
    {
      "id": "OrthodoxBanner",
      "name": "Orthodox Banner",
      "icon": "Layout",
      "category": "display",
      "description": "Orthodox Banner component with React hooks - 6 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "title",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "subtitle",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "showGradient",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "compact",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "autoRotate",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "initialLanguage",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/shared/OrthodoxBanner.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 7529,
        "lines": 233
      }
    },
    {
      "id": "OrthodoxChurchIcon",
      "name": "Orthodox Church Icon",
      "icon": "Layout",
      "category": "display",
      "description": "Orthodox Church Icon component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/shared/OrthodoxChurchIcon.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 4876,
        "lines": 92
      }
    },
    {
      "id": "PaymentGateways",
      "name": "Payment Gateways",
      "icon": "Layout",
      "category": "display",
      "description": "Payment Gateways component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/dashboards/ecommerce/PaymentGateways.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material/styles",
          "@mui/material"
        ],
        "size": 3624,
        "lines": 121
      }
    },
    {
      "id": "PercentAreaChart",
      "name": "Percent Area Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Percent Area Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/areacharts/PercentAreaChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function PercentAreaChart"
        ],
        "dependencies": [
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 2531,
        "lines": 81
      }
    },
    {
      "id": "PieChartWithCenterLabelChart",
      "name": "Pie Chart With Center Label Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Pie Chart With Center Label Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/piecharts/PieChartWithCenterLabelChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function PieChartWithCenterLabelChart"
        ],
        "dependencies": [
          "@mui/x-charts/PieChart",
          "@mui/x-charts/hooks",
          "@mui/material/styles"
        ],
        "size": 1387,
        "lines": 47
      }
    },
    {
      "id": "PieChartWithCustomizedLabel",
      "name": "Pie Chart With Customized Label",
      "icon": "Layout",
      "category": "display",
      "description": "Pie Chart With Customized Label component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/piecharts/PieChartWithCustomizedLabel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function PieChartWithCustomizedLabel"
        ],
        "dependencies": [
          "@mui/x-charts/PieChart"
        ],
        "size": 1531,
        "lines": 48
      }
    },
    {
      "id": "PieChartWithPaddingAngleChart",
      "name": "Pie Chart With Padding Angle Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Pie Chart With Padding Angle Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/piecharts/PieChartWithPaddingAngleChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function PieChartWithPaddingAngleChart"
        ],
        "dependencies": [
          "@mui/material/Stack",
          "@mui/x-charts/PieChart"
        ],
        "size": 1908,
        "lines": 58
      }
    },
    {
      "id": "PriestBlackKamilavka",
      "name": "Priest Black Kamilavka",
      "icon": "Layout",
      "category": "display",
      "description": "Priest Black Kamilavka component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "PriestGoldenVestments",
      "name": "Priest Golden Vestments",
      "icon": "Layout",
      "category": "display",
      "description": "Priest Golden Vestments component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "PriestWithCross1",
      "name": "Priest With Cross1",
      "icon": "Layout",
      "category": "display",
      "description": "Priest With Cross1 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "PriestWithCross2",
      "name": "Priest With Cross2",
      "icon": "Layout",
      "category": "display",
      "description": "Priest With Cross2 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "ProductProvider",
      "name": "Product Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Product Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/EcommerceContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 10907,
        "lines": 277
      }
    },
    {
      "id": "QuestionnairePreview",
      "name": "Questionnaire Preview",
      "icon": "Layout",
      "category": "display",
      "description": "Questionnaire Preview component with React hooks - 4 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "file",
          "optional": false,
          "type": "FileUpload | null",
          "description": ""
        },
        {
          "name": "onSubmit",
          "optional": false,
          "type": "(submission: QuestionnaireSubmission) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/QuestionnairePreview.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "@mui/material@latest/umd/material-ui.development.js"
        ],
        "size": 14949,
        "lines": 468
      }
    },
    {
      "id": "RecordPreviewPane",
      "name": "Record Preview Pane",
      "icon": "Layout",
      "category": "display",
      "description": "Record Preview Pane component with React hooks - 3 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "record",
          "optional": false,
          "type": "ChurchRecord",
          "description": ""
        },
        {
          "name": "title",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "showValidation",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/RecordPreviewPane/RecordPreviewPane.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9139,
        "lines": 262
      }
    },
    {
      "id": "ResetPasswordModal",
      "name": "Reset Password Modal",
      "icon": "Square",
      "category": "display",
      "description": "Reset Password Modal component with React hooks - 6 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "userId",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "churchId",
          "optional": false,
          "type": "string | number",
          "description": ""
        },
        {
          "name": "userEmail",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "userName",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ResetPasswordModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 5699,
        "lines": 174
      }
    },
    {
      "id": "RevenueUpdates",
      "name": "Revenue Updates",
      "icon": "Layout",
      "category": "display",
      "description": "Revenue Updates component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/dashboards/ecommerce/RevenueUpdates.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material/styles",
          "@mui/material"
        ],
        "size": 3052,
        "lines": 117
      }
    },
    {
      "id": "RoleManagement",
      "name": "Role Management",
      "icon": "Layout",
      "category": "display",
      "description": "Role Management component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/RoleManagement.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 1120,
        "lines": 32
      }
    },
    {
      "id": "ScatterClickNoSnapChart",
      "name": "Scatter Click No Snap Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Scatter Click No Snap Chart component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/scattercharts/ScatterClickNoSnapChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": [
          "export default function ScatterClickNoSnapChart"
        ],
        "dependencies": [
          "@mui/material/Stack",
          "@mui/material/Box",
          "@mui/material/Typography",
          "@mui/material/IconButton",
          "@mui/icons-material/UndoOutlined",
          "@mui/x-charts/ScatterChart",
          "@mui/material"
        ],
        "size": 5160,
        "lines": 144
      }
    },
    {
      "id": "ScatterDataset",
      "name": "Scatter Dataset",
      "icon": "Layout",
      "category": "display",
      "description": "Scatter Dataset component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/scattercharts/ScatterDatasetChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function ScatterDataset"
        ],
        "dependencies": [
          "@mui/x-charts/ScatterChart",
          "@mui/x-charts/ChartsAxis",
          "@mui/material"
        ],
        "size": 2491,
        "lines": 114
      }
    },
    {
      "id": "ScrollToTop",
      "name": "Scroll To Top",
      "icon": "Layout",
      "category": "display",
      "description": "Scroll To Top component with React hooks",
      "tags": [
        "display",
        "hooks",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/shared/ScrollToTop.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": false,
        "isDefault": [
          "export default function ScrollToTop"
        ],
        "dependencies": [
          "react-router"
        ],
        "size": 389,
        "lines": 17
      }
    },
    {
      "id": "SimpleAreaChart",
      "name": "Simple Area Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Simple Area Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/areacharts/SimpleAreaChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function SimpleAreaChart"
        ],
        "dependencies": [
          "@mui/material",
          "@mui/x-charts/LineChart"
        ],
        "size": 1128,
        "lines": 46
      }
    },
    {
      "id": "SimpleBarChart",
      "name": "Simple Bar Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Simple Bar Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/code/barchartcode/SimpleBarCode.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function SimpleBarChart"
        ],
        "dependencies": [
          "@mui/x-charts/BarChart",
          "@mui/material"
        ],
        "size": 1437,
        "lines": 60
      }
    },
    {
      "id": "SimpleOCRPanel",
      "name": "Simple O C R Panel",
      "icon": "Layout",
      "category": "display",
      "description": "Simple O C R Panel component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/SimpleOCRPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 1314,
        "lines": 51
      }
    },
    {
      "id": "SiteEditorFallback",
      "name": "Site Editor Fallback",
      "icon": "Layout",
      "category": "display",
      "description": "Site Editor Fallback component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/SiteEditorFallback.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 3076,
        "lines": 88
      }
    },
    {
      "id": "SiteEditorOverlay",
      "name": "Site Editor Overlay",
      "icon": "Layout",
      "category": "display",
      "description": "Site Editor Overlay component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "children",
          "optional": true,
          "type": "React.ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/SiteEditorOverlay.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 12723,
        "lines": 369
      }
    },
    {
      "id": "SmartRedirect",
      "name": "Smart Redirect",
      "icon": "Layout",
      "category": "display",
      "description": "Smart Redirect component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/routing/SmartRedirect.tsx",
      "usage": {
        "inMenu": true,
        "inRoutes": false,
        "menuContext": "src/routes/Router.tsx",
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 3857,
        "lines": 88
      }
    },
    {
      "id": "StackedAreaChart",
      "name": "Stacked Area Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Stacked Area Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/areacharts/StackedAreaChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function StackedAreaChart"
        ],
        "dependencies": [
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 1845,
        "lines": 49
      }
    },
    {
      "id": "StraightAnglePieChart",
      "name": "Straight Angle Pie Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Straight Angle Pie Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/piecharts/StraightAnglePieChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function StraightAnglePieChart"
        ],
        "dependencies": [
          "@mui/x-charts/PieChart"
        ],
        "size": 1072,
        "lines": 35
      }
    },
    {
      "id": "SurveyResultsProvider",
      "name": "Survey Results Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Survey Results Provider component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "modules/OMLearn/SurveyResultsContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 7481,
        "lines": 242
      }
    },
    {
      "id": "TestComponent",
      "name": "Test Component",
      "icon": "Layout",
      "category": "display",
      "description": "Test Component component",
      "tags": [
        "display",
        "default-export"
      ],
      "props": [],
      "configurable": false,
      "path": "Test.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": true,
        "dependencies": [],
        "size": 185,
        "lines": 9
      }
    },
    {
      "id": "ThemedLayout",
      "name": "Themed Layout",
      "icon": "Layout",
      "category": "display",
      "description": "Themed Layout component with React hooks - 2 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "React.ReactNode",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/Theme/ThemedLayout.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 1966,
        "lines": 73
      }
    },
    {
      "id": "ThemeProvider",
      "name": "Theme Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Theme Provider component with React hooks - 2 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "ReactNode",
          "description": ""
        },
        {
          "name": "defaultTheme",
          "optional": true,
          "type": "ThemeName",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "context/ThemeContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 13890,
        "lines": 430
      }
    },
    {
      "id": "TicketProvider",
      "name": "Ticket Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Ticket Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/TicketContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 2760,
        "lines": 75
      }
    },
    {
      "id": "TinyAreaChart",
      "name": "Tiny Area Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Tiny Area Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/linescharts/areacharts/TinyAreaChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function TinyAreaChart"
        ],
        "dependencies": [
          "@mui/x-charts/ChartContainer",
          "@mui/x-charts/LineChart",
          "@mui/material"
        ],
        "size": 1307,
        "lines": 46
      }
    },
    {
      "id": "Transition",
      "name": "Transition",
      "icon": "Layout",
      "category": "display",
      "description": "Transition component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/material-ui/dialog/code/TransitionCode.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/material/Slide",
          "@mui/material/transitions"
        ],
        "size": 1842,
        "lines": 74
      }
    },
    {
      "id": "TwoSimplePieChart",
      "name": "Two Simple Pie Chart",
      "icon": "Layout",
      "category": "display",
      "description": "Two Simple Pie Chart component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies",
        "ui"
      ],
      "props": [],
      "configurable": false,
      "path": "components/muicharts/piecharts/TwoSimplePieChart.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": [
          "export default function TwoSimplePieChart"
        ],
        "dependencies": [
          "@mui/x-charts/PieChart"
        ],
        "size": 1760,
        "lines": 54
      }
    },
    {
      "id": "UserDataProvider",
      "name": "User Data Provider",
      "icon": "Layout",
      "category": "display",
      "description": "User Data Provider component with React hooks",
      "tags": [
        "display",
        "hooks",
        "jsx"
      ],
      "props": [],
      "configurable": false,
      "path": "context/UserDataContext/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 6135,
        "lines": 177
      }
    },
    {
      "id": "WebSocketProvider",
      "name": "Web Socket Provider",
      "icon": "Layout",
      "category": "display",
      "description": "Web Socket Provider component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "React.ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "context/WebSocketContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 10025,
        "lines": 325
      }
    },
    {
      "id": "WeeklyStats",
      "name": "Weekly Stats",
      "icon": "Layout",
      "category": "display",
      "description": "Weekly Stats component",
      "tags": [
        "display",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/dashboards/modern/WeeklyStats.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material/styles",
          "@mui/material"
        ],
        "size": 4244,
        "lines": 162
      }
    },
    {
      "id": "WhatsNewEditor",
      "name": "Whats New Editor",
      "icon": "Layout",
      "category": "display",
      "description": "Whats New Editor component with React hooks - 1 props",
      "tags": [
        "display",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "editable",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/dashboards/modern/WhatsNewEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 5538,
        "lines": 149
      }
    },
    {
      "id": "YoungLayman1",
      "name": "Young Layman1",
      "icon": "Layout",
      "category": "display",
      "description": "Young Layman1 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "YoungLayman2",
      "name": "Young Layman2",
      "icon": "Layout",
      "category": "display",
      "description": "Young Layman2 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "YoungPriest1",
      "name": "Young Priest1",
      "icon": "Layout",
      "category": "display",
      "description": "Young Priest1 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "YoungPriest2",
      "name": "Young Priest2",
      "icon": "Layout",
      "category": "display",
      "description": "Young Priest2 component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "YoungWomanPurple",
      "name": "Young Woman Purple",
      "icon": "Layout",
      "category": "display",
      "description": "Young Woman Purple component",
      "tags": [
        "display"
      ],
      "props": [],
      "configurable": false,
      "path": "components/avatars/OrthodoxAvatars.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": null,
        "dependencies": [],
        "size": 18699,
        "lines": 295
      }
    },
    {
      "id": "ActivityLogs",
      "name": "Activity Logs",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Activity Logs component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/ActivityLogs.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 24809,
        "lines": 692
      }
    },
    {
      "id": "AddChurchPage",
      "name": "Add Church Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Add Church Page component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/AddChurchPage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": [
          "export default function AddChurchPage"
        ],
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router",
          "axios"
        ],
        "size": 17108,
        "lines": 503
      }
    },
    {
      "id": "AddNewClient",
      "name": "Add New Client",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Add New Client component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/client-management/AddNewClient.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 15402,
        "lines": 318
      }
    },
    {
      "id": "AdminDashboardLayout",
      "name": "Admin Dashboard Layout",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Admin Dashboard Layout component (navigation) - 2 props",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "children",
          "optional": true,
          "type": "React.ReactNode",
          "description": ""
        },
        {
          "name": "requireSuperAdmin",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/AdminDashboardLayout.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 3779,
        "lines": 105
      }
    },
    {
      "id": "AdminSettings",
      "name": "Admin Settings",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Admin Settings component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/AdminSettings.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 24830,
        "lines": 449
      }
    },
    {
      "id": "AdvancedGridDialog",
      "name": "Advanced Grid Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Advanced Grid Dialog component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "records",
          "optional": false,
          "type": "any[]",
          "description": ""
        },
        {
          "name": "onRefresh",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "recordType",
          "optional": true,
          "type": "'baptism' | 'marriage' | 'funeral'",
          "description": ""
        },
        {
          "name": "columnDefs",
          "optional": true,
          "type": "ColDef[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/AdvancedGridDialog.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28632,
        "lines": 961
      }
    },
    {
      "id": "AdvancedRecordsDemo",
      "name": "Advanced Records Demo",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Advanced Records Demo component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/AdvancedRecordsDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 15311,
        "lines": 440
      }
    },
    {
      "id": "AIAdminPanel",
      "name": "A I Admin Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Admin Panel component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AIAdminPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 22666,
        "lines": 549
      }
    },
    {
      "id": "AIAgentsView",
      "name": "A I Agents View",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Agents View component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/calendar/OMCalendar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 26816,
        "lines": 847
      }
    },
    {
      "id": "AIAnalyticsDashboard",
      "name": "A I Analytics Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Analytics Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AIAnalyticsDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 16659,
        "lines": 431
      }
    },
    {
      "id": "AIContentGenerator",
      "name": "A I Content Generator",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Content Generator component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "onContentGenerated",
          "optional": true,
          "type": "(content: string) => void",
          "description": ""
        },
        {
          "name": "defaultContentType",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "defaultContext",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ai/AIContentGenerator.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 13865,
        "lines": 316
      }
    },
    {
      "id": "AIDeploymentAutomation",
      "name": "A I Deployment Automation",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Deployment Automation component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AIDeploymentAutomation.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 20085,
        "lines": 429
      }
    },
    {
      "id": "AIInsightCard",
      "name": "A I Insight Card",
      "icon": "Card",
      "category": "navigation",
      "description": "A I Insight Card component (navigation) with React hooks - 7 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "insight",
          "optional": false,
          "type": "{",
          "description": ""
        },
        {
          "name": "type",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "title",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "description",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "confidence",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "actionable",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "recommendations",
          "optional": true,
          "type": "string[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ai/AIAnalyticsDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 16659,
        "lines": 431
      }
    },
    {
      "id": "AILogAnalysis",
      "name": "A I Log Analysis",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Log Analysis component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AILogAnalysis.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 22622,
        "lines": 522
      }
    },
    {
      "id": "AIOCRProcessor",
      "name": "A I O C R Processor",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I O C R Processor component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AIOCRProcessor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 18092,
        "lines": 433
      }
    },
    {
      "id": "AIQuickStats",
      "name": "A I Quick Stats",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Quick Stats component (navigation) with React hooks - 5 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "title",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "value",
          "optional": false,
          "type": "string | number",
          "description": ""
        },
        {
          "name": "change",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "icon",
          "optional": false,
          "type": "React.ReactNode",
          "description": ""
        },
        {
          "name": "color",
          "optional": true,
          "type": "'primary' | 'success' | 'warning' | 'error'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ai/AIAdminPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 22666,
        "lines": 549
      }
    },
    {
      "id": "AIServiceStatus",
      "name": "A I Service Status",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Service Status component (navigation) with React hooks - 5 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "serviceName",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "status",
          "optional": false,
          "type": "'online' | 'offline' | 'degraded'",
          "description": ""
        },
        {
          "name": "responseTime",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "uptime",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "icon",
          "optional": false,
          "type": "React.ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ai/AIAdminPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 22666,
        "lines": 549
      }
    },
    {
      "id": "AITranslationAssistant",
      "name": "A I Translation Assistant",
      "icon": "Navigation",
      "category": "navigation",
      "description": "A I Translation Assistant component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AITranslationAssistant.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 22525,
        "lines": 467
      }
    },
    {
      "id": "AutonomyDashboard",
      "name": "Autonomy Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Autonomy Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/omai/autonomy-dashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 26155,
        "lines": 672
      }
    },
    {
      "id": "BackupSettings",
      "name": "Backup Settings",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Backup Settings component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/settings/BackupSettings.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 31727,
        "lines": 723
      }
    },
    {
      "id": "BaptismRecordDialog",
      "name": "Baptism Record Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Baptism Record Dialog component (navigation) with React hooks - 7 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "record",
          "optional": false,
          "type": "BaptismRecord | null",
          "description": ""
        },
        {
          "name": "isEdit",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": false,
          "type": "(record: Partial<BaptismRecord>) => void",
          "description": ""
        },
        {
          "name": "options",
          "optional": false,
          "type": "any",
          "description": ""
        },
        {
          "name": "loading",
          "optional": false,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/BaptismRecordsComponent.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 17391,
        "lines": 537
      }
    },
    {
      "id": "BaptismRecordsComponent",
      "name": "Baptism Records Component",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Baptism Records Component component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/BaptismRecordsComponent.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 17391,
        "lines": 537
      }
    },
    {
      "id": "BaptismRecordsPage",
      "name": "Baptism Records Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Baptism Records Page component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/records/BaptismRecordsPage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 68668,
        "lines": 1765
      }
    },
    {
      "id": "BaptismRecordViewer",
      "name": "Baptism Record Viewer",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Baptism Record Viewer component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/frontend-pages/homepage/baptism-record-viewer/BaptismRecordViewerMagnifier.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "framer-motion"
        ],
        "size": 10888,
        "lines": 268
      }
    },
    {
      "id": "BasicInformationStep",
      "name": "Basic Information Step",
      "icon": "FileText",
      "category": "navigation",
      "description": "Basic Information Step component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "BigBookSettings",
      "name": "Big Book Settings",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Big Book Settings component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "settings",
          "optional": false,
          "type": "BigBookConsoleSettings",
          "description": ""
        },
        {
          "name": "onSettingsChange",
          "optional": false,
          "type": "(settings: BigBookConsoleSettings) => void",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onReset",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/BigBookSettings.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 12931,
        "lines": 388
      }
    },
    {
      "id": "BlogCreate",
      "name": "Blog Create",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Blog Create component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/social/blog/BlogCreate.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 6824,
        "lines": 221
      }
    },
    {
      "id": "BlogEdit",
      "name": "Blog Edit",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Blog Edit component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/social/blog/BlogEdit.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 12346,
        "lines": 388
      }
    },
    {
      "id": "BlogList",
      "name": "Blog List",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Blog List component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/social/blog/BlogList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 12311,
        "lines": 378
      }
    },
    {
      "id": "BlogView",
      "name": "Blog View",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Blog View component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/social/blog/BlogView.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 17293,
        "lines": 513
      }
    },
    {
      "id": "BuildConsole",
      "name": "Build Console",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Build Console component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/BuildConsole.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "lodash"
        ],
        "size": 16596,
        "lines": 525
      }
    },
    {
      "id": "ChurchAdminList",
      "name": "Church Admin List",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Church Admin List component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/ChurchAdminList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 10223,
        "lines": 242
      }
    },
    {
      "id": "ChurchAdminPanelTest",
      "name": "Church Admin Panel Test",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Church Admin Panel Test component (navigation)",
      "tags": [
        "navigation",
        "default-export",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/ChurchAdminPanelTest.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": false,
        "isDefault": true,
        "dependencies": [],
        "size": 388,
        "lines": 14
      }
    },
    {
      "id": "ChurchForm",
      "name": "Church Form",
      "icon": "FileText",
      "category": "navigation",
      "description": "Church Form component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchForm.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 83281,
        "lines": 1694
      }
    },
    {
      "id": "ChurchList",
      "name": "Church List",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Church List component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 43978,
        "lines": 1111
      }
    },
    {
      "id": "ChurchRecordsPage",
      "name": "Church Records Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Church Records Page component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/records/ChurchRecordsPage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 18455,
        "lines": 532
      }
    },
    {
      "id": "ChurchServerManager",
      "name": "Church Server Manager",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Church Server Manager component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/ChurchServerManager.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 26737,
        "lines": 682
      }
    },
    {
      "id": "ChurchSetup",
      "name": "Church Setup",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Church Setup component (navigation) with React hooks - 2 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "clientSlug",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "isNewClient",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/client-management/ChurchSetup.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 21127,
        "lines": 445
      }
    },
    {
      "id": "ChurchSetupWizard",
      "name": "Church Setup Wizard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Church Setup Wizard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "ClientManagementDashboard",
      "name": "Client Management Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Client Management Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/client-management/ClientManagementDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 18184,
        "lines": 431
      }
    },
    {
      "id": "CodePreviewModal",
      "name": "Code Preview Modal",
      "icon": "Square",
      "category": "navigation",
      "description": "Code Preview Modal component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "component",
          "optional": false,
          "type": "BoundComponent | null",
          "description": ""
        },
        {
          "name": "onGenerate",
          "optional": false,
          "type": "(component: BoundComponent",
          "description": ""
        },
        {
          "name": "commitToGit",
          "optional": false,
          "type": "boolean) => void",
          "description": ""
        },
        {
          "name": "isGenerating",
          "optional": false,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "pages/omb/CodePreviewModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 7205,
        "lines": 245
      }
    },
    {
      "id": "ComponentDiscoveryPanel",
      "name": "Component Discovery Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Component Discovery Panel component (navigation) with React hooks - 1 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "onComponentsDiscovered",
          "optional": true,
          "type": "(components: ComponentInfo[]) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/ComponentDiscoveryPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 29030,
        "lines": 787
      }
    },
    {
      "id": "ComponentPalette",
      "name": "Component Palette",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Component Palette component (navigation) with React hooks - 2 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "onComponentSelect",
          "optional": false,
          "type": "(component: ComponentPaletteItem) => void",
          "description": ""
        },
        {
          "name": "selectedComponent",
          "optional": false,
          "type": "ComponentPaletteItem | null",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "pages/omb/ComponentPalette.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 4176,
        "lines": 131
      }
    },
    {
      "id": "ConfidenceAnalysisTab",
      "name": "Confidence Analysis Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Confidence Analysis Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VisualRegressionDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28787,
        "lines": 817
      }
    },
    {
      "id": "ConfidenceSettingsTab",
      "name": "Confidence Settings Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Confidence Settings Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VRTSettingsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 42168,
        "lines": 1307
      }
    },
    {
      "id": "ContentRenderer",
      "name": "Content Renderer",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Content Renderer component (navigation) - 2 props",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "content",
          "optional": false,
          "type": "string | EditorBlock[]",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/cms/ContentRenderer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 9342,
        "lines": 325
      }
    },
    {
      "id": "ControlDashboard",
      "name": "Control Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Control Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/omai/control-dashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 29314,
        "lines": 841
      }
    },
    {
      "id": "CustomFieldDialog",
      "name": "Custom Field Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Custom Field Dialog component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "DebouncedInput",
      "name": "Debounced Input",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Debounced Input component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/react-tables/filter/page.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/system"
        ],
        "size": 12565,
        "lines": 387
      }
    },
    {
      "id": "DiffSettingsTab",
      "name": "Diff Settings Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Diff Settings Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VRTSettingsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 42168,
        "lines": 1307
      }
    },
    {
      "id": "DisclaimerModal",
      "name": "Disclaimer Modal",
      "icon": "Square",
      "category": "navigation",
      "description": "Disclaimer Modal component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onAccept",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "language",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "email",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "processingTier",
          "optional": false,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/OCRUploader/DisclaimerModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 13273,
        "lines": 317
      }
    },
    {
      "id": "DroppableField",
      "name": "Droppable Field",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Droppable Field component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ocr/OcrCorrectionTool.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 26563,
        "lines": 753
      }
    },
    {
      "id": "DynamicMenuProvider",
      "name": "Dynamic Menu Provider",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Dynamic Menu Provider component (navigation) with React hooks - 1 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "contexts/DynamicMenuContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 3002,
        "lines": 101
      }
    },
    {
      "id": "EditableRecordPage",
      "name": "Editable Record Page",
      "icon": "Table",
      "category": "navigation",
      "description": "Editable Record Page component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "recordType",
          "optional": true,
          "type": "RecordType",
          "description": ""
        },
        {
          "name": "recordId",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(record: ChurchRecord) => void",
          "description": ""
        },
        {
          "name": "onCancel",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "readonly",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "showPreview",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/EditableRecordPage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 15048,
        "lines": 476
      }
    },
    {
      "id": "EditableRecordRow",
      "name": "Editable Record Row",
      "icon": "Table",
      "category": "navigation",
      "description": "Editable Record Row component (navigation) with React hooks - 16 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "record",
          "optional": false,
          "type": "DeathRecord",
          "description": ""
        },
        {
          "name": "recordIndex",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "onUpdateField",
          "optional": false,
          "type": "(fieldName: keyof DeathRecord",
          "description": ""
        },
        {
          "name": "value",
          "optional": false,
          "type": "string) => void",
          "description": ""
        },
        {
          "name": "onDeleteRecord",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onClearFieldMapping",
          "optional": false,
          "type": "(fieldName: keyof DeathRecord) => void",
          "description": ""
        },
        {
          "name": "fieldSuggestions",
          "optional": false,
          "type": "Record<string",
          "description": ""
        },
        {
          "name": "onSaveSuggestion",
          "optional": false,
          "type": "(fieldName: keyof DeathRecord",
          "description": ""
        },
        {
          "name": "value",
          "optional": false,
          "type": "string) => void",
          "description": ""
        },
        {
          "name": "isEditing",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onToggleEdit",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "isLocked",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onToggleLock",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "isCollapsed",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onToggleCollapse",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/EditableRecordRow.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 15402,
        "lines": 474
      }
    },
    {
      "id": "EditChurchModal",
      "name": "Edit Church Modal",
      "icon": "Square",
      "category": "navigation",
      "description": "Edit Church Modal component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "churchId",
          "optional": false,
          "type": "number | null",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(data: ChurchFormData) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/EditChurchModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 23347,
        "lines": 620
      }
    },
    {
      "id": "EnhancedPageEditor",
      "name": "Enhanced Page Editor",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Enhanced Page Editor component (navigation) with React hooks - 2 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "slug",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(pageData: PageData) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/cms/EnhancedPageEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "axios"
        ],
        "size": 17583,
        "lines": 605
      }
    },
    {
      "id": "EnhancedPageEditorTest",
      "name": "Enhanced Page Editor Test",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Enhanced Page Editor Test component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/cms/EnhancedPageEditorTest.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "react-router"
        ],
        "size": 454,
        "lines": 19
      }
    },
    {
      "id": "ExtractionAnalytics",
      "name": "Extraction Analytics",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Extraction Analytics component (navigation) with React hooks - 1 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "number",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/ExtractionAnalytics.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 21375,
        "lines": 564
      }
    },
    {
      "id": "FieldMappingEditor",
      "name": "Field Mapping Editor",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Field Mapping Editor component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "fields",
          "optional": false,
          "type": "Field[]",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": false,
          "type": "(fields: Field[]) => void",
          "description": ""
        },
        {
          "name": "title",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "mode",
          "optional": true,
          "type": "'edit' | 'create'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/templates/FieldMappingEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 19991,
        "lines": 623
      }
    },
    {
      "id": "FieldRenderer",
      "name": "Field Renderer",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Field Renderer component (navigation) with React hooks - 7 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "field",
          "optional": false,
          "type": "RecordField",
          "description": ""
        },
        {
          "name": "value",
          "optional": false,
          "type": "any",
          "description": ""
        },
        {
          "name": "color",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "error",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "readonly",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onValueChange",
          "optional": false,
          "type": "(value: any) => void",
          "description": ""
        },
        {
          "name": "onColorChange",
          "optional": false,
          "type": "(color: string) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/FieldRenderer/FieldRenderer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "@mui/x-date-pickers/DatePicker",
          "@mui/x-date-pickers/LocalizationProvider",
          "@mui/x-date-pickers/AdapterDateFns"
        ],
        "size": 9159,
        "lines": 324
      }
    },
    {
      "id": "FieldTemplateSelector",
      "name": "Field Template Selector",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Field Template Selector component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "selectedTemplate",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onTemplateChange",
          "optional": false,
          "type": "(templateKey: string",
          "description": ""
        },
        {
          "name": "fields",
          "optional": false,
          "type": "string[]) => void",
          "description": ""
        },
        {
          "name": "churchId",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/FieldTemplateSelector.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 17671,
        "lines": 568
      }
    },
    {
      "id": "FriendsList",
      "name": "Friends List",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Friends List component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/social/friends/FriendsList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 24730,
        "lines": 748
      }
    },
    {
      "id": "GitOpsPanel",
      "name": "Git Ops Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Git Ops Panel component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "component",
          "optional": false,
          "type": "ComponentInfo",
          "description": ""
        },
        {
          "name": "isOpen",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/GitOpsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 25398,
        "lines": 718
      }
    },
    {
      "id": "GlobalTemplateEditor",
      "name": "Global Template Editor",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Global Template Editor component (navigation) with React hooks - 2 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "userEmail",
          "optional": false,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/GlobalTemplateEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 18691,
        "lines": 578
      }
    },
    {
      "id": "HeadlineSourcePicker",
      "name": "Headline Source Picker",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Headline Source Picker component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/headlines/HeadlineSourcePicker.tsx",
      "usage": {
        "inMenu": true,
        "inRoutes": false,
        "menuContext": "src/routes/Router.tsx",
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 21078,
        "lines": 616
      }
    },
    {
      "id": "HomePage",
      "name": "Home Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Home Page component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/pages/frontend-pages/Homepage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/material/Grid",
          "@mui/material/styles",
          "react-router"
        ],
        "size": 78730,
        "lines": 2147
      }
    },
    {
      "id": "ImportRecordsButton",
      "name": "Import Records Button",
      "icon": "Button",
      "category": "navigation",
      "description": "Import Records Button component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ImportRecordsButton.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "axios"
        ],
        "size": 18578,
        "lines": 559
      }
    },
    {
      "id": "IndeterminateCheckbox",
      "name": "Indeterminate Checkbox",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Indeterminate Checkbox component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/react-tables/row-selection/page.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/system"
        ],
        "size": 7953,
        "lines": 270
      }
    },
    {
      "id": "InsightCard",
      "name": "Insight Card",
      "icon": "Card",
      "category": "navigation",
      "description": "Insight Card component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ai/AILogAnalysis.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 22622,
        "lines": 522
      }
    },
    {
      "id": "InvoiceViewByNumber",
      "name": "Invoice View By Number",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Invoice View By Number component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/invoice/Invoice-view/InvoiceViewByNumber.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 19668,
        "lines": 392
      }
    },
    {
      "id": "KanbanPage",
      "name": "Kanban Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Kanban Page component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/kanban/index.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 20962,
        "lines": 685
      }
    },
    {
      "id": "KanbanSyncView",
      "name": "Kanban Sync View",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Kanban Sync View component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/calendar/OMCalendar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 26816,
        "lines": 847
      }
    },
    {
      "id": "KanbanTaskCard",
      "name": "Kanban Task Card",
      "icon": "Card",
      "category": "navigation",
      "description": "Kanban Task Card component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "task",
          "optional": false,
          "type": "Task",
          "description": ""
        },
        {
          "name": "index",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "onRefresh",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "boardLabels",
          "optional": false,
          "type": "Label[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/KanbanTaskCard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 10925,
        "lines": 352
      }
    },
    {
      "id": "KanbanTaskModal",
      "name": "Kanban Task Modal",
      "icon": "Square",
      "category": "navigation",
      "description": "Kanban Task Modal component (navigation) with React hooks - 5 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "task",
          "optional": false,
          "type": "Task",
          "description": ""
        },
        {
          "name": "onRefresh",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "boardLabels",
          "optional": false,
          "type": "Label[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/KanbanTaskModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "@mui/x-date-pickers/DatePicker",
          "@mui/x-date-pickers/LocalizationProvider",
          "@mui/x-date-pickers/AdapterDateFns",
          "date-fns"
        ],
        "size": 16507,
        "lines": 523
      }
    },
    {
      "id": "LandingPageStep",
      "name": "Landing Page Step",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Landing Page Step component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "LearningFeedbackTab",
      "name": "Learning Feedback Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Learning Feedback Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VisualRegressionDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28787,
        "lines": 817
      }
    },
    {
      "id": "LearningSettingsTab",
      "name": "Learning Settings Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Learning Settings Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VRTSettingsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 42168,
        "lines": 1307
      }
    },
    {
      "id": "LiturgicalCalendar",
      "name": "Liturgical Calendar",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Liturgical Calendar component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/calendar/LiturgicalCalendar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 14839,
        "lines": 442
      }
    },
    {
      "id": "LiturgicalFlowBackground",
      "name": "Liturgical Flow Background",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Liturgical Flow Background component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/frontend-pages/homepage/banner/LiturgicalFlowBackground.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 5850,
        "lines": 234
      }
    },
    {
      "id": "LiturgicalFlowBackgroundTailwind",
      "name": "Liturgical Flow Background Tailwind",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Liturgical Flow Background Tailwind component (navigation) - 1 props",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "configurable"
      ],
      "props": [
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/frontend-pages/homepage/banner/LiturgicalFlowBackgroundTailwind.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 4996,
        "lines": 117
      }
    },
    {
      "id": "ManualFixEditor",
      "name": "Manual Fix Editor",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Manual Fix Editor component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "component",
          "optional": false,
          "type": "ComponentInfo | null",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": false,
          "type": "(path: string",
          "description": ""
        },
        {
          "name": "contents",
          "optional": false,
          "type": "string) => Promise<any>",
          "description": ""
        },
        {
          "name": "onPreviewDiff",
          "optional": false,
          "type": "(originalContent: string",
          "description": ""
        },
        {
          "name": "newContent",
          "optional": false,
          "type": "string) => void",
          "description": ""
        },
        {
          "name": "onRollback",
          "optional": false,
          "type": "(backupToken: string) => Promise<void>",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ManualFixEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9434,
        "lines": 307
      }
    },
    {
      "id": "ManualFixEditorInner",
      "name": "Manual Fix Editor Inner",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Manual Fix Editor Inner component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ManualFixEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9434,
        "lines": 307
      }
    },
    {
      "id": "MenuManagement",
      "name": "Menu Management",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Menu Management component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/MenuManagement.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 12631,
        "lines": 353
      }
    },
    {
      "id": "MenuPermissionsManagement",
      "name": "Menu Permissions Management",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Menu Permissions Management component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/MenuPermissions.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 18603,
        "lines": 462
      }
    },
    {
      "id": "MenuSettings",
      "name": "Menu Settings",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Menu Settings component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/settings/MenuSettings.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 17588,
        "lines": 364
      }
    },
    {
      "id": "MenuVisibilityProvider",
      "name": "Menu Visibility Provider",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Menu Visibility Provider component (navigation) with React hooks - 1 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "ReactNode",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "contexts/MenuVisibilityContext.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [],
        "size": 8425,
        "lines": 263
      }
    },
    {
      "id": "MetadataForm",
      "name": "Metadata Form",
      "icon": "FileText",
      "category": "navigation",
      "description": "Metadata Form component (navigation) - 6 props",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "formData",
          "optional": false,
          "type": "MetadataFormData",
          "description": ""
        },
        {
          "name": "onFormChange",
          "optional": false,
          "type": "(data: MetadataFormData) => void",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "isSaving",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onGenerateCode",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "canGenerateCode",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "pages/omb/MetadataForm.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 5613,
        "lines": 201
      }
    },
    {
      "id": "ModernInvoiceDetail",
      "name": "Modern Invoice Detail",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Modern Invoice Detail component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/invoice/Invoice-detail/ModernInvoiceDetail.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 19095,
        "lines": 388
      }
    },
    {
      "id": "ModernInvoiceEdit",
      "name": "Modern Invoice Edit",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Modern Invoice Edit component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/invoice/Edit-invoice/ModernInvoiceEdit.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/x-date-pickers/DatePicker",
          "@mui/x-date-pickers/LocalizationProvider",
          "@mui/x-date-pickers/AdapterDateFns",
          "react-router"
        ],
        "size": 25433,
        "lines": 524
      }
    },
    {
      "id": "ModernInvoiceList",
      "name": "Modern Invoice List",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Modern Invoice List component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/apps/invoice/Invoice-list/ModernInvoiceList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 30329,
        "lines": 904
      }
    },
    {
      "id": "NLPDashboard",
      "name": "N L P Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "N L P Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/omai/nlp-dashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 23288,
        "lines": 712
      }
    },
    {
      "id": "NotificationBell",
      "name": "Notification Bell",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Notification Bell component (navigation) with React hooks - 1 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/notifications/NotificationBell.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 15189,
        "lines": 373
      }
    },
    {
      "id": "NotificationCenter",
      "name": "Notification Center",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Notification Center component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/social/notifications/NotificationCenter.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 26597,
        "lines": 761
      }
    },
    {
      "id": "NotificationDropdown",
      "name": "Notification Dropdown",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Notification Dropdown component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "anchorEl",
          "optional": false,
          "type": "HTMLElement | null",
          "description": ""
        },
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/notifications/NotificationBell.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 15189,
        "lines": 373
      }
    },
    {
      "id": "NotificationList",
      "name": "Notification List",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Notification List component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/notifications/NotificationList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 26949,
        "lines": 613
      }
    },
    {
      "id": "NotificationManagement",
      "name": "Notification Management",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Notification Management component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/NotificationManagement.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/x-date-pickers/DateTimePicker",
          "@mui/x-date-pickers/AdapterDateFns",
          "@mui/x-date-pickers/LocalizationProvider"
        ],
        "size": 32723,
        "lines": 660
      }
    },
    {
      "id": "NotificationPreferences",
      "name": "Notification Preferences",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Notification Preferences component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/notifications/NotificationPreferences.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "@mui/lab"
        ],
        "size": 18890,
        "lines": 404
      }
    },
    {
      "id": "OcrCorrectionTool",
      "name": "Ocr Correction Tool",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Ocr Correction Tool component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onSubmit",
          "optional": true,
          "type": "(mappedRecord: any) => void",
          "description": ""
        },
        {
          "name": "initialImage",
          "optional": true,
          "type": "File",
          "description": ""
        },
        {
          "name": "initialTemplate",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrCorrectionTool.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 26563,
        "lines": 753
      }
    },
    {
      "id": "OCRDataPanel",
      "name": "O C R Data Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C R Data Panel component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/OCRDataPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 644,
        "lines": 25
      }
    },
    {
      "id": "OCRFieldMapping",
      "name": "O C R Field Mapping",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C R Field Mapping component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "onMappingComplete",
          "optional": true,
          "type": "(mapping: FieldTemplate) => void",
          "description": ""
        },
        {
          "name": "initialTemplate",
          "optional": true,
          "type": "FieldTemplate",
          "description": ""
        },
        {
          "name": "mode",
          "optional": true,
          "type": "'create' | 'edit' | 'apply'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/ocr/OCRFieldMapping.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/material/styles"
        ],
        "size": 74462,
        "lines": 1854
      }
    },
    {
      "id": "OCRFieldMappingWindow",
      "name": "O C R Field Mapping Window",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C R Field Mapping Window component (navigation) with React hooks - 5 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "initialImage",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "initialFields",
          "optional": true,
          "type": "BoundingBox[]",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(template: FieldTemplate) => void",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": true,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "title",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/ocr/OCRFieldMappingWindow.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/material/styles"
        ],
        "size": 34631,
        "lines": 1005
      }
    },
    {
      "id": "OcrInterface",
      "name": "Ocr Interface",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Ocr Interface component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "userEmail",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "theme",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrInterface.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 46872,
        "lines": 1178
      }
    },
    {
      "id": "OCRPreviewTable",
      "name": "O C R Preview Table",
      "icon": "Table",
      "category": "navigation",
      "description": "O C R Preview Table component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "data",
          "optional": false,
          "type": "OCRRecord[]",
          "description": ""
        },
        {
          "name": "recordType",
          "optional": true,
          "type": "'baptism' | 'marriage' | 'funeral' | 'custom'",
          "description": ""
        },
        {
          "name": "customFields",
          "optional": true,
          "type": "FieldDefinition[]",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(editedRows: OCRRecord[]) => void",
          "description": ""
        },
        {
          "name": "onFieldsChange",
          "optional": true,
          "type": "(fields: FieldDefinition[]) => void",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/ocr/OCRPreviewTableEnhanced.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 23952,
        "lines": 624
      }
    },
    {
      "id": "OcrRecordMapper",
      "name": "Ocr Record Mapper",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Ocr Record Mapper component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "userEmail",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "onSubmit",
          "optional": true,
          "type": "(mappedRecord: any) => void",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": true,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrRecordMapper.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 18706,
        "lines": 577
      }
    },
    {
      "id": "OCRRecordsDemo",
      "name": "O C R Records Demo",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C R Records Demo component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/ocr/OCRRecordsDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 6958,
        "lines": 207
      }
    },
    {
      "id": "OCRResultDisplay",
      "name": "O C R Result Display",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C R Result Display component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "result",
          "optional": false,
          "type": "AIOCRResponse",
          "description": ""
        },
        {
          "name": "onCopy",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onDownload",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ai/AIOCRProcessor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 18092,
        "lines": 433
      }
    },
    {
      "id": "OcrTextBlockList",
      "name": "Ocr Text Block List",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Ocr Text Block List component (navigation) with React hooks - 8 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "ocrLines",
          "optional": false,
          "type": "OcrTextLine[]",
          "description": ""
        },
        {
          "name": "usedLines",
          "optional": false,
          "type": "Set<number>",
          "description": ""
        },
        {
          "name": "onLineSelect",
          "optional": false,
          "type": "(lineIndex: number",
          "description": ""
        },
        {
          "name": "recordIndex",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "fieldName",
          "optional": false,
          "type": "string) => void",
          "description": ""
        },
        {
          "name": "currentMappings",
          "optional": false,
          "type": "Map<number",
          "description": ""
        },
        {
          "name": "recordIndex",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "fieldName",
          "optional": false,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrTextBlockList.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 13388,
        "lines": 347
      }
    },
    {
      "id": "OCRUpload",
      "name": "O C R Upload",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C R Upload component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/ocr/OCRUpload.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/material/styles"
        ],
        "size": 36405,
        "lines": 1029
      }
    },
    {
      "id": "OCRUploader",
      "name": "O C R Uploader",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C R Uploader component (navigation) with React hooks - 8 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "onUploadComplete",
          "optional": true,
          "type": "(results: any[]) => void",
          "description": ""
        },
        {
          "name": "maxFiles",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "maxFileSize",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "defaultLanguage",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "showLanguageSelector",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "allowMultipleFiles",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "showPreview",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/OCRUploader/OCRUploader.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 23032,
        "lines": 496
      }
    },
    {
      "id": "OcrWizardEnhanced",
      "name": "Ocr Wizard Enhanced",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Ocr Wizard Enhanced component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onComplete",
          "optional": false,
          "type": "(result: any) => void",
          "description": ""
        },
        {
          "name": "onCancel",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "initialFiles",
          "optional": true,
          "type": "File[]",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/OcrWizardEnhanced.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28172,
        "lines": 832
      }
    },
    {
      "id": "OCXDataPanel",
      "name": "O C X Data Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O C X Data Panel component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/OCXDataPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 528,
        "lines": 18
      }
    },
    {
      "id": "OMAIDiscoveryPanel",
      "name": "O M A I Discovery Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O M A I Discovery Panel component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/OMAIDiscoveryPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 19900,
        "lines": 602
      }
    },
    {
      "id": "OMAILab",
      "name": "O M A I Lab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O M A I Lab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/sandbox/ai-lab.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 32681,
        "lines": 877
      }
    },
    {
      "id": "OMBEditor",
      "name": "O M B Editor",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O M B Editor component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/omb/OMBEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 10778,
        "lines": 363
      }
    },
    {
      "id": "OMBEditorPage",
      "name": "O M B Editor Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O M B Editor Page component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/omb/editor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 799,
        "lines": 24
      }
    },
    {
      "id": "OMBigBook",
      "name": "O M Big Book",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O M Big Book component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/OMBigBook.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 33283,
        "lines": 915
      }
    },
    {
      "id": "OMCalendar",
      "name": "O M Calendar",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O M Calendar component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/calendar/OMCalendar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 26816,
        "lines": 847
      }
    },
    {
      "id": "OMLearn",
      "name": "O M Learn",
      "icon": "Navigation",
      "category": "navigation",
      "description": "O M Learn component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "modules/OMLearn/OMLearn.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 782,
        "lines": 22
      }
    },
    {
      "id": "OrthodoxHeadlines",
      "name": "Orthodox Headlines",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Orthodox Headlines component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/OrthodoxHeadlines.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "axios",
          "date-fns"
        ],
        "size": 14769,
        "lines": 506
      }
    },
    {
      "id": "OrthodMetricsAdminDashboard",
      "name": "OrthodMetrics Admin Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "OrthodMetrics Admin Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/OrthodMetricsAdmin.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 43306,
        "lines": 823
      }
    },
    {
      "id": "OrthodMetricsLiveDemo",
      "name": "OrthodMetrics Live Demo",
      "icon": "Navigation",
      "category": "navigation",
      "description": "OrthodMetrics Live Demo component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export"
      ],
      "props": [],
      "configurable": false,
      "path": "views/pages/frontend-pages/OrthodMetricsDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": [
          "export default function OrthodMetricsLiveDemo"
        ],
        "dependencies": [],
        "size": 39931,
        "lines": 846
      }
    },
    {
      "id": "OrthodoxThemeToggle",
      "name": "Orthodox Theme Toggle",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Orthodox Theme Toggle component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "showText",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "variant",
          "optional": true,
          "type": "'icon' | 'switch' | 'menu'",
          "description": ""
        },
        {
          "name": "size",
          "optional": true,
          "type": "'small' | 'medium' | 'large'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/shared/OrthodoxThemeToggle.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 10063,
        "lines": 314
      }
    },
    {
      "id": "PageEditorTest",
      "name": "Page Editor Test",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Page Editor Test component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/cms/PageEditorTest.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "react-router"
        ],
        "size": 479,
        "lines": 17
      }
    },
    {
      "id": "PageEditorWrapper",
      "name": "Page Editor Wrapper",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Page Editor Wrapper component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/cms/PageEditorWrapper.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "react-router"
        ],
        "size": 630,
        "lines": 20
      }
    },
    {
      "id": "PlaywrightSettingsTab",
      "name": "Playwright Settings Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Playwright Settings Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VRTSettingsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 42168,
        "lines": 1307
      }
    },
    {
      "id": "PredictiveDashboard",
      "name": "Predictive Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Predictive Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/omai/predictive-dashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 29004,
        "lines": 788
      }
    },
    {
      "id": "Profile",
      "name": "Profile",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Profile component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies",
        "layout"
      ],
      "props": [],
      "configurable": false,
      "path": "layouts/full/vertical/sidebar/SidebarProfile/Profile.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 1960,
        "lines": 66
      }
    },
    {
      "id": "ProtectedRoute",
      "name": "Protected Route",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Protected Route component (navigation) - 3 props",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "auth"
      ],
      "props": [
        {
          "name": "children",
          "optional": false,
          "type": "React.ReactNode",
          "description": ""
        },
        {
          "name": "requiredRole",
          "optional": true,
          "type": "UserRole | UserRole[]",
          "description": ""
        },
        {
          "name": "requiredPermission",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/auth/ProtectedRoute.tsx",
      "usage": {
        "inMenu": true,
        "inRoutes": false,
        "menuContext": "src/routes/Router.tsx",
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 1267,
        "lines": 51
      }
    },
    {
      "id": "PublicOCRUpload",
      "name": "Public O C R Upload",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Public O C R Upload component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/ocr/PublicOCRUpload.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/material/styles",
          "react-router"
        ],
        "size": 36731,
        "lines": 947
      }
    },
    {
      "id": "PublicOCRUploader",
      "name": "Public O C R Uploader",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Public O C R Uploader component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/PublicOCRUploader.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 18303,
        "lines": 411
      }
    },
    {
      "id": "RecordGeneratorPage",
      "name": "Record Generator Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Record Generator Page component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/RecordGeneratorPage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [],
        "size": 4185,
        "lines": 101
      }
    },
    {
      "id": "RecordTablesStep",
      "name": "Record Tables Step",
      "icon": "Table",
      "category": "navigation",
      "description": "Record Tables Step component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "RecordTemplateManager",
      "name": "Record Template Manager",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Record Template Manager component (navigation) with React hooks - 2 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "currentChurch",
          "optional": true,
          "type": "Church",
          "description": ""
        },
        {
          "name": "isGlobalAdmin",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/admin/RecordTemplateManager.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 22322,
        "lines": 664
      }
    },
    {
      "id": "ReviewStep",
      "name": "Review Step",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Review Step component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "ScriptRunner",
      "name": "Script Runner",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Script Runner component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/ScriptRunner.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 14432,
        "lines": 462
      }
    },
    {
      "id": "SDLCBackupPanel",
      "name": "S D L C Backup Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "S D L C Backup Panel component (navigation) with React hooks - 1 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies",
        "admin"
      ],
      "props": [
        {
          "name": "className",
          "optional": true,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/admin/SDLCBackupPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "axios"
        ],
        "size": 34662,
        "lines": 709
      }
    },
    {
      "id": "SecuritySettingsTab",
      "name": "Security Settings Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Security Settings Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VRTSettingsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 42168,
        "lines": 1307
      }
    },
    {
      "id": "ServiceManagement",
      "name": "Service Management",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Service Management component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/settings/ServiceManagement.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 105056,
        "lines": 2204
      }
    },
    {
      "id": "SessionManagement",
      "name": "Session Management",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Session Management component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/SessionManagement.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 25150,
        "lines": 688
      }
    },
    {
      "id": "SimplePageEditor",
      "name": "Simple Page Editor",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Simple Page Editor component (navigation) with React hooks - 2 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "slug",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": true,
          "type": "(pageData: PageData) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/cms/SimplePageEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "axios"
        ],
        "size": 15632,
        "lines": 541
      }
    },
    {
      "id": "SimplePageEditorTest",
      "name": "Simple Page Editor Test",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Simple Page Editor Test component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/cms/SimplePageEditorTest.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "react-router"
        ],
        "size": 444,
        "lines": 19
      }
    },
    {
      "id": "SiteClone",
      "name": "Site Clone",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Site Clone component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/site-clone/SiteClone.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 16211,
        "lines": 385
      }
    },
    {
      "id": "SnapshotSettingsTab",
      "name": "Snapshot Settings Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Snapshot Settings Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VRTSettingsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 42168,
        "lines": 1307
      }
    },
    {
      "id": "SnapshotsTab",
      "name": "Snapshots Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Snapshots Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VisualRegressionDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28787,
        "lines": 817
      }
    },
    {
      "id": "SocialChat",
      "name": "Social Chat",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Social Chat component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/social/chat/SocialChat.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router",
          "date-fns"
        ],
        "size": 27588,
        "lines": 757
      }
    },
    {
      "id": "SortableField",
      "name": "Sortable Field",
      "icon": "Table",
      "category": "navigation",
      "description": "Sortable Field component (navigation) with React hooks - 5 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "field",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "index",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "onEdit",
          "optional": false,
          "type": "(index: number",
          "description": ""
        },
        {
          "name": "newValue",
          "optional": false,
          "type": "string) => void",
          "description": ""
        },
        {
          "name": "onDelete",
          "optional": false,
          "type": "(index: number) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/FieldTemplateSelector.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 17671,
        "lines": 568
      }
    },
    {
      "id": "SortableTextBlock",
      "name": "Sortable Text Block",
      "icon": "Table",
      "category": "navigation",
      "description": "Sortable Text Block component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/ocr/OcrCorrectionTool.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 26563,
        "lines": 753
      }
    },
    {
      "id": "SSPPOCRecordsPage",
      "name": "S S P P O C Records Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "S S P P O C Records Page component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "churchId",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "churchDbId",
          "optional": true,
          "type": "number",
          "description": ""
        },
        {
          "name": "recordType",
          "optional": true,
          "type": "string",
          "description": ""
        },
        {
          "name": "sortConfig",
          "optional": true,
          "type": "{",
          "description": ""
        },
        {
          "name": "field",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "direction",
          "optional": false,
          "type": "'asc' | 'desc'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/records/SSPPOCRecordsPage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 80863,
        "lines": 2030
      }
    },
    {
      "id": "Step1RecordDetails",
      "name": "Step1 Record Details",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Step1 Record Details component (navigation) - 2 props",
      "tags": [
        "navigation",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "formData",
          "optional": false,
          "type": "WizardFormData",
          "description": ""
        },
        {
          "name": "updateFormData",
          "optional": false,
          "type": "(updates: Partial<WizardFormData>) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ocr/wizard/Step1RecordDetails.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 10938,
        "lines": 335
      }
    },
    {
      "id": "SuperAdminDashboard",
      "name": "Super Admin Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Super Admin Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "components/admin/SuperAdminDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 23534,
        "lines": 672
      }
    },
    {
      "id": "TableControlPanel",
      "name": "Table Control Panel",
      "icon": "Table",
      "category": "navigation",
      "description": "Table Control Panel component (navigation) - 6 props",
      "tags": [
        "navigation",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "selectedElement",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onElementSelect",
          "optional": false,
          "type": "(element: string) => void",
          "description": ""
        },
        {
          "name": "tableTheme",
          "optional": false,
          "type": "TableTheme",
          "description": ""
        },
        {
          "name": "onBorderStyleChange",
          "optional": false,
          "type": "(color: string",
          "description": ""
        },
        {
          "name": "width",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "radius",
          "optional": false,
          "type": "number) => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/TableControlPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 6512,
        "lines": 220
      }
    },
    {
      "id": "TableThemeDemo",
      "name": "Table Theme Demo",
      "icon": "Table",
      "category": "navigation",
      "description": "Table Theme Demo component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/TableThemeDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 8609,
        "lines": 233
      }
    },
    {
      "id": "TableThemeEditor",
      "name": "Table Theme Editor",
      "icon": "Table",
      "category": "navigation",
      "description": "Table Theme Editor component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "demos/TableThemeEditor.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9676,
        "lines": 321
      }
    },
    {
      "id": "TableThemeSelector",
      "name": "Table Theme Selector",
      "icon": "Table",
      "category": "navigation",
      "description": "Table Theme Selector component (navigation) with React hooks - 5 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "selectedTheme",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onThemeChange",
          "optional": false,
          "type": "(theme: string) => void",
          "description": ""
        },
        {
          "name": "variant",
          "optional": true,
          "type": "'dropdown' | 'popover'",
          "description": ""
        },
        {
          "name": "size",
          "optional": true,
          "type": "'small' | 'medium'",
          "description": ""
        },
        {
          "name": "showLabel",
          "optional": true,
          "type": "boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/TableThemeSelector.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 9234,
        "lines": 308
      }
    },
    {
      "id": "TabPanel",
      "name": "Tab Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Tab Panel component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "children",
          "optional": true,
          "type": "React.ReactNode",
          "description": ""
        },
        {
          "name": "index",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "value",
          "optional": false,
          "type": "number",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/client-management/TemplateManager.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 21598,
        "lines": 448
      }
    },
    {
      "id": "TaskData",
      "name": "Task Data",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Task Data component (navigation) with React hooks - 1 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "task",
          "optional": false,
          "type": "{ id: any",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/apps/kanban/TaskData.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material/Menu",
          "@mui/material/MenuItem",
          "@mui/material"
        ],
        "size": 7498,
        "lines": 219
      }
    },
    {
      "id": "TaskDialog",
      "name": "Task Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Task Dialog component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/calendar/OMCalendar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 26816,
        "lines": 847
      }
    },
    {
      "id": "TaskListView",
      "name": "Task List View",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Task List View component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/calendar/OMCalendar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "date-fns"
        ],
        "size": 26816,
        "lines": 847
      }
    },
    {
      "id": "TeachingDashboard",
      "name": "Teaching Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Teaching Dashboard component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "pages/omai/teaching-dashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 24016,
        "lines": 688
      }
    },
    {
      "id": "TemplateCreationDialog",
      "name": "Template Creation Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Template Creation Dialog component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "onTemplateCreated",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "editTemplate",
          "optional": true,
          "type": "Template | null",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/templates/TemplateCreationDialog.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 17262,
        "lines": 549
      }
    },
    {
      "id": "TemplateManager",
      "name": "Template Manager",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Template Manager component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/client-management/TemplateManager.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 21598,
        "lines": 448
      }
    },
    {
      "id": "TemplatePreviewDialog",
      "name": "Template Preview Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Template Preview Dialog component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "template",
          "optional": false,
          "type": "Template",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/templates/TemplatePreviewDialog.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "@mui/x-data-grid"
        ],
        "size": 16004,
        "lines": 508
      }
    },
    {
      "id": "TemplateSelectionStep",
      "name": "Template Selection Step",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Template Selection Step component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "TestLiturgicalCalendar",
      "name": "Test Liturgical Calendar",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Test Liturgical Calendar component (navigation)",
      "tags": [
        "navigation",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/calendar/TestLiturgicalCalendar.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 958,
        "lines": 26
      }
    },
    {
      "id": "TestResultsTab",
      "name": "Test Results Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Test Results Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VisualRegressionDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28787,
        "lines": 817
      }
    },
    {
      "id": "ThemeColorPreview",
      "name": "Theme Color Preview",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Theme Color Preview component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/Theme/ThemeCustomizer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 14328,
        "lines": 468
      }
    },
    {
      "id": "ThemeCustomizer",
      "name": "Theme Customizer",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Theme Customizer component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "variant",
          "optional": true,
          "type": "'button' | 'menu' | 'full'",
          "description": ""
        },
        {
          "name": "showLabel",
          "optional": true,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "size",
          "optional": true,
          "type": "'small' | 'medium' | 'large'",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/Theme/ThemeCustomizer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 14328,
        "lines": 468
      }
    },
    {
      "id": "ThemedTable",
      "name": "Themed Table",
      "icon": "Table",
      "category": "navigation",
      "description": "Themed Table component (navigation) - 8 props",
      "tags": [
        "navigation",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "data",
          "optional": false,
          "type": "Array<{",
          "description": ""
        },
        {
          "name": "id",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "childName",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "parentNames",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "baptismDate",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "priest",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "godparents",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "parish",
          "optional": false,
          "type": "string",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ThemedTable.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": false,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/material/styles"
        ],
        "size": 9327,
        "lines": 317
      }
    },
    {
      "id": "ThemeMenuItem",
      "name": "Theme Menu Item",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Theme Menu Item component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/Theme/ThemeCustomizer.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 14328,
        "lines": 468
      }
    },
    {
      "id": "TranslationQualityDisplay",
      "name": "Translation Quality Display",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Translation Quality Display component (navigation) with React hooks - 4 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "quality",
          "optional": false,
          "type": "{",
          "description": ""
        },
        {
          "name": "fluency",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "accuracy",
          "optional": false,
          "type": "number",
          "description": ""
        },
        {
          "name": "cultural_appropriateness",
          "optional": false,
          "type": "number",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/ai/AITranslationAssistant.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material"
        ],
        "size": 22525,
        "lines": 467
      }
    },
    {
      "id": "UnifiedRecordsPage",
      "name": "Unified Records Page",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Unified Records Page component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/records/UnifiedRecordsPage.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "react-router"
        ],
        "size": 5929,
        "lines": 193
      }
    },
    {
      "id": "UploadTokenManager",
      "name": "Upload Token Manager",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Upload Token Manager component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/UploadTokenManager.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 17423,
        "lines": 379
      }
    },
    {
      "id": "UserDialog",
      "name": "User Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "User Dialog component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "UserFormModal",
      "name": "User Form Modal",
      "icon": "FileText",
      "category": "navigation",
      "description": "User Form Modal component (navigation) with React hooks - 6 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "open",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        },
        {
          "name": "user",
          "optional": false,
          "type": "User | null",
          "description": ""
        },
        {
          "name": "churches",
          "optional": false,
          "type": "Church[]",
          "description": ""
        },
        {
          "name": "mode",
          "optional": false,
          "type": "'edit' | 'reset-password' | 'delete-confirm'",
          "description": ""
        },
        {
          "name": "onSubmit",
          "optional": false,
          "type": "(data: UpdateUser | ResetPasswordData | { confirm: boolean",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/UserFormModal.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 23514,
        "lines": 578
      }
    },
    {
      "id": "UserManagement",
      "name": "User Management",
      "icon": "Navigation",
      "category": "navigation",
      "description": "User Management component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies",
        "admin"
      ],
      "props": [],
      "configurable": false,
      "path": "views/admin/UserManagement_corrupted.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 58296,
        "lines": 1167
      }
    },
    {
      "id": "UserManagementDialog",
      "name": "User Management Dialog",
      "icon": "Navigation",
      "category": "navigation",
      "description": "User Management Dialog component (navigation) with React hooks - 5 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "user",
          "optional": false,
          "type": "User | null",
          "description": ""
        },
        {
          "name": "action",
          "optional": false,
          "type": "'add' | 'edit'",
          "description": ""
        },
        {
          "name": "churchId",
          "optional": false,
          "type": "string",
          "description": ""
        },
        {
          "name": "onSave",
          "optional": false,
          "type": "(userData: any) => void",
          "description": ""
        },
        {
          "name": "onCancel",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "views/apps/church-management/UserManagementDialog.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material"
        ],
        "size": 9184,
        "lines": 295
      }
    },
    {
      "id": "UserManagementStep",
      "name": "User Management Step",
      "icon": "Navigation",
      "category": "navigation",
      "description": "User Management Step component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/apps/church-management/ChurchSetupWizard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material",
          "react-router"
        ],
        "size": 47122,
        "lines": 1406
      }
    },
    {
      "id": "VisualDiffsTab",
      "name": "Visual Diffs Tab",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Visual Diffs Tab component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "components/VisualRegressionDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": null,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28787,
        "lines": 817
      }
    },
    {
      "id": "VisualRegressionDashboard",
      "name": "Visual Regression Dashboard",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Visual Regression Dashboard component (navigation) with React hooks - 3 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "component",
          "optional": false,
          "type": "ComponentInfo",
          "description": ""
        },
        {
          "name": "isOpen",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/VisualRegressionDashboard.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 28787,
        "lines": 817
      }
    },
    {
      "id": "VisualTestDemo",
      "name": "Visual Test Demo",
      "icon": "Navigation",
      "category": "navigation",
      "description": "Visual Test Demo component (navigation) with React hooks",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "dependencies"
      ],
      "props": [],
      "configurable": false,
      "path": "views/demo/VisualTestDemo.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 22950,
        "lines": 646
      }
    },
    {
      "id": "VRTSettingsPanel",
      "name": "V R T Settings Panel",
      "icon": "Navigation",
      "category": "navigation",
      "description": "V R T Settings Panel component (navigation) with React hooks - 2 props",
      "tags": [
        "navigation",
        "hooks",
        "jsx",
        "default-export",
        "configurable",
        "dependencies"
      ],
      "props": [
        {
          "name": "isOpen",
          "optional": false,
          "type": "boolean",
          "description": ""
        },
        {
          "name": "onClose",
          "optional": false,
          "type": "() => void",
          "description": ""
        }
      ],
      "configurable": true,
      "path": "components/VRTSettingsPanel.tsx",
      "usage": {
        "inMenu": false,
        "inRoutes": false,
        "menuContext": null,
        "routeContext": null
      },
      "metadata": {
        "hasHooks": true,
        "hasJSX": true,
        "isDefault": true,
        "dependencies": [
          "@mui/material",
          "@mui/icons-material"
        ],
        "size": 42168,
        "lines": 1307
      }
    }
  ]
}