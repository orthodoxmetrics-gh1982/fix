{
  "id": "482781f0f91b",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/bigbook/metadata/a25793820a1f.json",
  "relativePath": "bigbook/metadata/a25793820a1f.json",
  "name": "a25793820a1f.json",
  "extension": ".json",
  "size": 6688,
  "modified": "2025-07-26T04:17:10.902Z",
  "created": "2025-07-26T04:17:10.902Z",
  "classification": {
    "type": "Configuration",
    "category": "Configuration",
    "confidence": 3
  },
  "metadata": {
    "fileStats": {
      "lines": 104,
      "characters": 6642,
      "words": 493
    },
    "classification": {
      "type": "Configuration",
      "category": "Configuration",
      "confidence": 3
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "mysql2/promise",
        "line": 91
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:secret|token)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 91,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "{\n  \"id\": \"a25793820a1f\",\n  \"originalPath\": \"/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/debug/production-session-test.js\",\n  \"relativePath\": \"server/debug/production-session-test.js\",\n  \"name\": \"production-session-test.js\",\n  \"extension\": \".js\",\n  \"size\": 3717,\n  \"modified\": \"2025-07-24T14:50:26.356Z\",\n  \"created\": \"2025-07-24T14:50:26.356Z\",\n  \"classification\": {\n    \"type\": \"Troubleshooting Utilities\",\n    \"category\": \"Diagnostic Tools\",\n    \"confidence\": 3\n  },\n  \"metadata\": {\n    \"fileStats\": {\n      \"lines\": 101,\n      \"characters\": 3671,\n      \"words\": 337\n    },\n    \"classification\": {\n      \"type\": \"Troubleshooting Utilities\",\n      \"category\": \"Diagnostic Tools\",\n      \"confidence\": 3\n    },\n    \"dependencies\": [\n      {\n        \"type\": \"npm_package\",\n        \"name\": \"mysql2/promise\",\n        \"line\": 45\n      }\n    ],\n    \"security\": {\n      \"findings\": [\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"(?:secret|token)\\\\s*[:=]\\\\s*['\\\"]([^'\\\"]+)['\\\"]\",\n          \"line\": 14,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 13,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 14,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 15,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 16,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 50,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 51,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 52,\n          \"redacted\": true\n        },\n        {\n          \"type\": \"sensitive_data\",\n          \"pattern\": \"process\\\\.env\\\\.([A-Z_]+)\",\n          \"line\": 53,\n          \"redacted\": true\n        }\n      ],\n      \"hasSecurityIssues\": true,\n      \"redactedContent\": \"#!/usr/bin/env node\\r\\n\\r\\n/**\\r\\n * Production Session Diagnosis Script\\r\\n * Run this to check if your production session configuration is correct\\r\\n */\\r\\n\\r\\nconsole.log('üîç Orthodox Metrics Production Session Diagnosis');\\r\\nconsole.log('================================================');\\r\\n\\r\\n// Check environment\\r\\nconsole.log('\\\\nüìã Environment Configuration:');\\r\\nconsole.log('NODE_ENV:', process.env.[REDACTED] || 'undefined');\\r\\nconsole.log('SESSION_SECRET:'[REDACTED]'SET' : 'NOT SET');\\r\\nconsole.log('DB_HOST:', process.env.[REDACTED] || 'default');\\r\\nconsole.log('DB_NAME:', process.env.[REDACTED] || 'default');\\r\\n\\r\\n// Test session configuration\\r\\nconsole.log('\\\\nüîß Session Configuration Test:');\\r\\ntry {\\r\\n  const session = require('../config/session');\\r\\n  console.log('‚úÖ Session configuration loaded successfully');\\r\\n  \\r\\n  // Check cookie settings\\r\\n  const mockApp = {\\r\\n    use: (middleware) => {\\r\\n      // Extract session options\\r\\n      if (middleware && middleware.name === 'session') {\\r\\n        console.log('üìù Session Cookie Settings:');\\r\\n        console.log('  secure:', middleware.options?.cookie?.secure);\\r\\n        console.log('  httpOnly:', middleware.options?.cookie?.httpOnly);\\r\\n        console.log('  sameSite:', middleware.options?.cookie?.sameSite);\\r\\n        console.log('  domain:', middleware.options?.cookie?.domain);\\r\\n        console.log('  maxAge:', middleware.options?.cookie?.maxAge);\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  \\r\\n} catch (error) {\\r\\n  console.log('‚ùå Session configuration error:', error.message);\\r\\n}\\r\\n\\r\\n// Database connection test\\r\\nconsole.log('\\\\nüóÑÔ∏è  Database Connection Test:');\\r\\nconst mysql = require('mysql2/promise');\\r\\n\\r\\nasync function testDatabase() {\\r\\n  try {\\r\\n    const connection = await mysql.createConnection({\\r\\n      host: process.env.[REDACTED] || 'localhost',\\r\\n      user: process.env.[REDACTED] || 'orthodoxapps', \\r\\n      password: process.env.[REDACTED] || 'Summerof1982@!',\\r\\n      database: process.env.[REDACTED] || 'orthodoxmetrics_db'\\r\\n    });\\r\\n    \\r\\n    console.log('‚úÖ Database connection successful');\\r\\n    \\r\\n    // Check if sessions table exists\\r\\n    const [tables] = await connection.execute(\\\"SHOW TABLES LIKE 'sessions'\\\");\\r\\n    if (tables.length > 0) {\\r\\n      console.log('‚úÖ Sessions table exists');\\r\\n      \\r\\n      // Check sessions table structure\\r\\n      const [structure] = await connection.execute(\\\"DESCRIBE sessions\\\");\\r\\n      console.log('üìã Sessions table structure:');\\r\\n      structure.forEach(col => {\\r\\n        console.log(`  ${col.Field}: ${col.Type}`);\\r\\n      });\\r\\n      \\r\\n      // Count current sessions\\r\\n      const [count] = await connection.execute(\\\"SELECT COUNT(*) as count FROM sessions\\\");\\r\\n      console.log(`üìä Current active sessions: ${count[0].count}`);\\r\\n      \\r\\n    } else {\\r\\n      console.log('‚ö†Ô∏è  Sessions table does not exist - this could be the issue!');\\r\\n    }\\r\\n    \\r\\n    await connection.end();\\r\\n    \\r\\n  } catch (error) {\\r\\n    console.log('‚ùå Database connection failed:', error.message);\\r\\n  }\\r\\n}\\r\\n\\r\\ntestDatabase();\\r\\n\\r\\n// Recommendations\\r\\nconsole.log('\\\\nüí° Production Checklist:');\\r\\nconsole.log('1. ‚úì Set NODE_ENV=production');\\r\\nconsole.log('2. ‚úì Set strong SESSION_SECRET'); \\r\\nconsole.log('3. ‚úì Ensure HTTPS is enabled');\\r\\nconsole.log('4. ‚úì Verify sessions table exists');\\r\\nconsole.log('5. ‚úì Check CORS allows orthodoxmetrics.com');\\r\\nconsole.log('6. ‚úì Restart server after changes');\\r\\n\\r\\nconsole.log('\\\\nüöÄ To fix session issues:');\\r\\nconsole.log('   1. Run: export NODE_ENV=production');\\r\\nconsole.log('   2. Set SESSION_SECRET environment variable');\\r\\nconsole.log('   3. Restart your server');\\r\\nconsole.log('   4. Clear browser cookies for orthodoxmetrics.com');\\r\\nconsole.log('   5. Try logging in again'); \"\n    },\n    \"complexity\": {\n      \"totalLines\": 101,\n      \"codeLines\": 69,\n      \"commentLines\": 14,\n      \"commentRatio\": 0.1686746987951807,\n      \"averageLineLength\": 42.34939759036145\n    },\n    \"lastAnalyzed\": \"2025-07-26T04:17:10.906Z\"\n  },\n  \"contentHash\": \"c3a6916df8208f32591ca206520655ca91d4e92e77d070d518a3a48e731e594e\",\n  \"discoveredAt\": \"2025-07-26T04:17:10.906Z\"\n}"
    },
    "complexity": {
      "totalLines": 104,
      "codeLines": 104,
      "commentLines": 0,
      "commentRatio": 0,
      "averageLineLength": 62.875
    },
    "lastAnalyzed": "2025-07-28T07:19:57.288Z"
  },
  "contentHash": "532dbd1ee7e6db7acdee17a5b01f95cc646a1df2ad511ba3a73ac9509f5073e0",
  "discoveredAt": "2025-07-28T07:19:57.288Z"
}