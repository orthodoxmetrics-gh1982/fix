{
  "id": "ccaa3144078e",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/utils/check-test-user.js",
  "relativePath": "server/utils/check-test-user.js",
  "name": "check-test-user.js",
  "extension": ".js",
  "size": 1947,
  "modified": "2025-07-05T07:26:26.000Z",
  "created": "2025-07-09T00:48:38.526Z",
  "classification": {
    "type": "Testing Scripts",
    "category": "DevOps > Test",
    "confidence": 3
  },
  "metadata": {
    "fileStats": {
      "lines": 60,
      "characters": 1937,
      "words": 188
    },
    "classification": {
      "type": "Testing Scripts",
      "category": "DevOps > Test",
      "confidence": 3
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "mysql2/promise",
        "line": 2
      },
      {
        "type": "npm_package",
        "name": "bcrypt",
        "line": 3
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 9,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "// Check if test user exists and create if needed\r\nconst mysql = require('mysql2/promise');\r\nconst bcrypt = require('bcrypt');\r\n\r\n// Database configuration\r\nconst dbConfig = {\r\n  host: 'localhost',\r\n  user: 'root',\r\n  password: '[REDACTED]', // Update this with your actual password\r\n  database: 'orthodoxmetrics_db',\r\n  waitForConnections: true,\r\n  connectionLimit: 10,\r\n  queueLimit: 0\r\n};\r\n\r\nconst promisePool = mysql.createPool(dbConfig);\r\n\r\nasync function checkAndCreateTestUser() {\r\n  console.log('üîç Checking if test user exists...');\r\n  \r\n  try {\r\n    // Check if user exists\r\n    const [rows] = await promisePool.query(\r\n      'SELECT id, email, first_name, last_name, role, is_active FROM users WHERE email = ?',\r\n      ['admin@orthodoxmetrics.com']\r\n    );\r\n    \r\n    if (rows.length === 0) {\r\n      console.log('‚ùå Test user does not exist. Creating...');\r\n      \r\n      // Create test user\r\n      const hashedPassword = await bcrypt.hash('admin123', 10);\r\n      \r\n      await promisePool.query(\r\n        'INSERT INTO users (email, password_hash, first_name, last_name, role, is_active, email_verified) VALUES (?, ?, ?, ?, ?, ?, ?)',\r\n        ['admin@orthodoxmetrics.com', hashedPassword, 'Admin', 'User', 'super_admin', 1, 1]\r\n      );\r\n      \r\n      console.log('‚úÖ Test user created successfully!');\r\n      console.log('   Email: admin@orthodoxmetrics.com');\r\n      console.log('   Password: admin123');\r\n      console.log('   Role: super_admin');\r\n    } else {\r\n      console.log('‚úÖ Test user exists:');\r\n      console.log('   ID:', rows[0].id);\r\n      console.log('   Email:', rows[0].email);\r\n      console.log('   Name:', rows[0].first_name, rows[0].last_name);\r\n      console.log('   Role:', rows[0].role);\r\n      console.log('   Active:', rows[0].is_active);\r\n    }\r\n    \r\n    process.exit(0);\r\n  } catch (error) {\r\n    console.error('‚ùå Error:', error);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\ncheckAndCreateTestUser();\r\n"
    },
    "complexity": {
      "totalLines": 60,
      "codeLines": 45,
      "commentLines": 4,
      "commentRatio": 0.08163265306122448,
      "averageLineLength": 37.55102040816327
    },
    "lastAnalyzed": "2025-07-28T07:20:01.229Z"
  },
  "contentHash": "df6108b585c82c72d7aa10bc8519151ca19fc29d7adaa0d20a2bcb6d928ec6d5",
  "discoveredAt": "2025-07-28T07:20:01.229Z"
}