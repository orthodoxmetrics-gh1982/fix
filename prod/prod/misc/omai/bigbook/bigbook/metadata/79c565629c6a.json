{
  "id": "79c565629c6a",
  "originalPath": "/var/www/orthodox-church-mgmt/orthodoxmetrics/prod/server/database/update-password.js",
  "relativePath": "server/database/update-password.js",
  "name": "update-password.js",
  "extension": ".js",
  "size": 1045,
  "modified": "2025-07-24T14:50:26.296Z",
  "created": "2025-07-24T14:50:26.296Z",
  "classification": {
    "type": "Server Scripts",
    "category": "Backend > Server",
    "confidence": 3
  },
  "metadata": {
    "fileStats": {
      "lines": 43,
      "characters": 1041,
      "words": 111
    },
    "classification": {
      "type": "Server Scripts",
      "category": "Backend > Server",
      "confidence": 3
    },
    "dependencies": [
      {
        "type": "npm_package",
        "name": "mysql2/promise",
        "line": 3
      },
      {
        "type": "npm_package",
        "name": "bcrypt",
        "line": 4
      }
    ],
    "security": {
      "findings": [
        {
          "type": "sensitive_data",
          "pattern": "(?:password|pwd|pass)\\s*[:=]\\s*['\"]([^'\"]+)['\"]",
          "line": 20,
          "redacted": true
        }
      ],
      "hasSecurityIssues": true,
      "redactedContent": "// Usage: node update-password.js user@example.com newpassword\n\nconst mysql = require('mysql2/promise');\nconst bcrypt = require('bcrypt');\n\nconst [,, email, newPassword] = process.argv;\n\nif (!email || !newPassword) {\n  console.error('Usage: node update-password.js <email> <newPassword>');\n  process.exit(1);\n}\n\nasync function updatePassword() {\n  try {\n    const hash = await bcrypt.hash(newPassword, 10);\n\n    const connection = await mysql.createConnection({\n      host: 'localhost',\n      user: 'orthodoxapps',\n      password: '[REDACTED]',\n      database: 'orthodoxmetrics_db'\n    });\n\n    const [result] = await connection.execute(\n      'UPDATE users SET password = ? WHERE email = ?',\n      [hash, email]\n    );\n\n    if (result.affectedRows === 0) {\n      console.log(`❌ No user found with email: ${email}`);\n    } else {\n      console.log(`✅ Password updated successfully for: ${email}`);\n    }\n\n    await connection.end();\n  } catch (err) {\n    console.error('Error updating password:', err.message);\n  }\n}\n\nupdatePassword();\n\n"
    },
    "complexity": {
      "totalLines": 43,
      "codeLines": 31,
      "commentLines": 1,
      "commentRatio": 0.03125,
      "averageLineLength": 31.21875
    },
    "lastAnalyzed": "2025-07-28T07:20:00.050Z"
  },
  "contentHash": "3a073b303f999939e90232a55677bc84af16f3f0a4a38a4f4cd3730bd9339253",
  "discoveredAt": "2025-07-28T07:20:00.050Z"
}