/**
 * TypeScript Interfaces for OCR Field Mapping System
 * Generated by Phase 1 setup script
 */

// Field Configuration Interface
export interface FieldConfig {
  ocr_label: string;           // Label detected in OCR text
  target_column: string;       // Target database column name
  required: boolean;           // Whether field is required
  validation?: string;         // Validation regex or type ('date', 'email', etc.)
  format?: string;            // Format string for output
  concat_with?: string[];     // Other fields to concatenate with
  transform?: 'uppercase' | 'lowercase' | 'titlecase' | 'trim';
  default_value?: string;     // Default value if not found
  confidence_threshold?: number; // Minimum confidence required
}

// Complete Field Configuration for a Record Type
export interface RecordFieldConfig {
  fields: FieldConfig[];
  settings: {
    auto_insert_threshold: number;        // Confidence % for auto-insertion
    require_manual_review: string[];      // Fields that always need review
    confidence_warning_threshold: number; // Show warning below this %
    allow_partial_insert: boolean;        // Allow inserting incomplete records
  };
}

// OCR Job Metadata (matches database structure)
export interface OcrJobMetadata {
  id: number;
  church_id: number;
  filename: string;
  original_filename?: string;
  file_path: string;
  file_size: number;
  mime_type: string;
  status: 'pending' | 'processing' | 'completed' | 'failed';
  record_type: 'baptism' | 'marriage' | 'funeral';
  language: string;
  ocr_result?: string;
  extracted_entities?: any;
  confidence_score?: number;
  entity_confidence?: number;
  needs_review?: boolean;
  detected_language?: string;
  created_at: string;
  updated_at: string;
}

// Mapped Fields Result
export interface MappedFieldResult {
  field: string;
  value: string;
  confidence: number;
  source_text?: string;        // Original OCR text snippet
  validation_passed: boolean;
  error_message?: string;
}

// OCR Processing Log Entry
export interface OcrProcessingLog {
  id: number;
  church_id: number;
  ocr_job_id: number;
  record_type: 'baptism' | 'marriage' | 'funeral';
  filename: string;
  status: 'pending' | 'processing' | 'completed' | 'failed' | 'transferred';
  user_id?: number;
  started_at?: string;
  completed_at?: string;
  error_message?: string;
  processing_metadata?: any;
  confidence_score?: number;
  created_at: string;
  updated_at: string;
}

// OCR Review Queue Entry
export interface OcrReviewQueueEntry {
  id: number;
  church_id: number;
  ocr_job_id: number;
  processing_log_id: number;
  record_type: 'baptism' | 'marriage' | 'funeral';
  filename: string;
  original_filename?: string;
  extracted_text?: string;
  mapped_fields?: MappedFieldResult[];
  confidence_avg?: number;
  status: 'pending_review' | 'in_review' | 'approved' | 'rejected' | 'needs_correction';
  priority: 'low' | 'normal' | 'high' | 'urgent';
  assigned_to?: number;
  reviewed_by?: number;
  reviewed_at?: string;
  approval_notes?: string;
  correction_data?: any;
  auto_insertable: boolean;
  created_at: string;
  updated_at: string;
}

// OCR Job Transfer Entry  
export interface OcrJobTransfer {
  id: number;
  church_id: number;
  source_ocr_job_id: number;
  processing_log_id?: number;
  review_queue_id?: number;
  transfer_status: 'pending' | 'in_progress' | 'completed' | 'failed' | 'cancelled';
  transfer_type: 'auto' | 'manual' | 'batch';
  source_database: string;
  target_table?: string;
  record_type: 'baptism' | 'marriage' | 'funeral';
  transferred_data?: any;
  target_record_id?: number;
  transfer_started_at?: string;
  transfer_completed_at?: string;
  error_message?: string;
  retry_count: number;
  initiated_by?: number;
  created_at: string;
  updated_at: string;
}

// OCR Text Processing Result
export interface OcrTextProcessingResult {
  raw_text: string;
  mapped_fields: MappedFieldResult[];
  confidence_avg: number;
  validation_errors: string[];
  auto_insertable: boolean;
  requires_review: boolean;
  processing_notes: string[];
}

// API Response Types
export interface OcrJobsResponse {
  jobs: OcrJobMetadata[];
  pagination: {
    page: number;
    limit: number;
    total: number;
    pages: number;
  };
}

export interface FieldConfigResponse {
  id: number;
  church_id: number;
  record_type: string;
  field_config: RecordFieldConfig;
  created_at: string;
  updated_at: string;
  is_active: boolean;
  version: number;
  description?: string;
}

// Request Types
export interface CreateFieldConfigRequest {
  church_id: number;
  record_type: 'baptism' | 'marriage' | 'funeral';
  field_config: RecordFieldConfig;
  description?: string;
}

export interface ProcessOcrJobRequest {
  ocr_job_id: number;
  church_id: number;
  force_reprocess?: boolean;
  skip_auto_insert?: boolean;
}

export interface ReviewQueueUpdateRequest {
  status: 'approved' | 'rejected' | 'needs_correction';
  approval_notes?: string;
  correction_data?: any;
  corrected_fields?: MappedFieldResult[];
}

// Utility Types
export type RecordType = 'baptism' | 'marriage' | 'funeral';
export type OcrJobStatus = 'pending' | 'processing' | 'completed' | 'failed';
export type ReviewStatus = 'pending_review' | 'in_review' | 'approved' | 'rejected' | 'needs_correction';
export type TransferStatus = 'pending' | 'in_progress' | 'completed' | 'failed' | 'cancelled';

// Database Table Names
export const TABLE_NAMES = {
  OCR_FIELD_CONFIGURATIONS: 'ocr_field_configurations',
  OCR_PROCESSING_LOG: 'ocr_processing_log',
  OCR_REVIEW_QUEUE: 'ocr_review_queue',
  OCR_JOB_TRANSFERS: 'ocr_job_transfers',
  BAPTISM_RECORDS: 'baptism_records',
  MARRIAGE_RECORDS: 'marriage_records',
  FUNERAL_RECORDS: 'funeral_records'
} as const;

// Default Field Configurations
export const DEFAULT_BAPTISM_FIELDS: FieldConfig[] = [
  {
    ocr_label: "Name",
    target_column: "full_name",
    required: true,
    validation: "^[A-Za-z\\s]{2,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Date of Birth",
    target_column: "birth_date", 
    required: true,
    validation: "date",
    format: "YYYY-MM-DD"
  },
  {
    ocr_label: "Date of Baptism",
    target_column: "baptism_date",
    required: true,
    validation: "date", 
    format: "YYYY-MM-DD"
  },
  {
    ocr_label: "Father",
    target_column: "father_name",
    required: false,
    validation: "^[A-Za-z\\s]{0,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Mother", 
    target_column: "mother_name",
    required: false,
    validation: "^[A-Za-z\\s]{0,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Godparent",
    target_column: "godparent_name",
    required: false,
    validation: "^[A-Za-z\\s]{0,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Clergy",
    target_column: "clergy",
    required: false,
    validation: "^[A-Za-z\\s\\.]{0,100}$",
    transform: "titlecase"
  }
];

export const DEFAULT_MARRIAGE_FIELDS: FieldConfig[] = [
  {
    ocr_label: "Groom Name",
    target_column: "groom_name",
    required: true,
    validation: "^[A-Za-z\\s]{2,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Bride Name", 
    target_column: "bride_name",
    required: true,
    validation: "^[A-Za-z\\s]{2,100}$", 
    transform: "titlecase"
  },
  {
    ocr_label: "Marriage Date",
    target_column: "marriage_date",
    required: true,
    validation: "date",
    format: "YYYY-MM-DD"
  },
  {
    ocr_label: "Witness 1",
    target_column: "witness1_name",
    required: false,
    validation: "^[A-Za-z\\s]{0,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Witness 2",
    target_column: "witness2_name", 
    required: false,
    validation: "^[A-Za-z\\s]{0,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Clergy",
    target_column: "clergy",
    required: false,
    validation: "^[A-Za-z\\s\\.]{0,100}$",
    transform: "titlecase"
  }
];

export const DEFAULT_FUNERAL_FIELDS: FieldConfig[] = [
  {
    ocr_label: "Name",
    target_column: "full_name",
    required: true,
    validation: "^[A-Za-z\\s]{2,100}$",
    transform: "titlecase"
  },
  {
    ocr_label: "Date of Death",
    target_column: "death_date",
    required: true,
    validation: "date",
    format: "YYYY-MM-DD"
  },
  {
    ocr_label: "Date of Funeral",
    target_column: "funeral_date",
    required: true,
    validation: "date",
    format: "YYYY-MM-DD"
  },
  {
    ocr_label: "Age",
    target_column: "age_at_death",
    required: false,
    validation: "^\\d{1,3}$"
  },
  {
    ocr_label: "Clergy",
    target_column: "clergy", 
    required: false,
    validation: "^[A-Za-z\\s\\.]{0,100}$",
    transform: "titlecase"
  }
];
